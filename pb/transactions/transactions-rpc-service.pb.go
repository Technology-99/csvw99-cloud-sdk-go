// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: transactions-rpc-service/transactions-rpc-service.proto

package transactions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *Model) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProductModelBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ProductSn string `protobuf:"bytes,3,opt,name=productSn,proto3" json:"productSn,omitempty"`
}

func (x *ProductModelBase) Reset() {
	*x = ProductModelBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductModelBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductModelBase) ProtoMessage() {}

func (x *ProductModelBase) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductModelBase.ProtoReflect.Descriptor instead.
func (*ProductModelBase) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *ProductModelBase) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductModelBase) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type ModelProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductSn string `protobuf:"bytes,2,opt,name=productSn,proto3" json:"productSn,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Price     int64  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`    // 价格，单位分
	PType     int32  `protobuf:"varint,6,opt,name=pType,proto3" json:"pType,omitempty"`    // 产品类型
	Status    int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`  // 状态
	Cover     string `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover,omitempty"`     // 封面
	Content   string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"` // 产品详情
	Url       string `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Stock     int64  `protobuf:"varint,11,opt,name=stock,proto3" json:"stock,omitempty"` // 库存
	Extra     string `protobuf:"bytes,12,opt,name=extra,proto3" json:"extra,omitempty"`  // 额外信息,json
}

func (x *ModelProduct) Reset() {
	*x = ModelProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelProduct) ProtoMessage() {}

func (x *ModelProduct) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelProduct.ProtoReflect.Descriptor instead.
func (*ModelProduct) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *ModelProduct) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelProduct) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *ModelProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelProduct) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ModelProduct) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ModelProduct) GetPType() int32 {
	if x != nil {
		return x.PType
	}
	return 0
}

func (x *ModelProduct) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelProduct) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ModelProduct) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ModelProduct) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModelProduct) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ModelProduct) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type ProductCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// note: 同步配置中心的数据
	Product *ModelProduct `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *ProductCreateReq) Reset() {
	*x = ProductCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCreateReq) ProtoMessage() {}

func (x *ProductCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCreateReq.ProtoReflect.Descriptor instead.
func (*ProductCreateReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProductCreateReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ProductCreateReq) GetProduct() *ModelProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type ProductCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ProductModelBase `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductCreateResp) Reset() {
	*x = ProductCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCreateResp) ProtoMessage() {}

func (x *ProductCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCreateResp.ProtoReflect.Descriptor instead.
func (*ProductCreateResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *ProductCreateResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductCreateResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductCreateResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductCreateResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductCreateResp) GetData() *ProductModelBase {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 删除方式, id, productNum 二选一
	DeleteType string `protobuf:"bytes,1,opt,name=deleteType,proto3" json:"deleteType,omitempty"`
	Id         uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ProductSn  string `protobuf:"bytes,3,opt,name=productSn,proto3" json:"productSn,omitempty"`
}

func (x *ProductDeleteReq) Reset() {
	*x = ProductDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteReq) ProtoMessage() {}

func (x *ProductDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductDeleteReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *ProductDeleteReq) GetDeleteType() string {
	if x != nil {
		return x.DeleteType
	}
	return ""
}

func (x *ProductDeleteReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductDeleteReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type ProductDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ProductModelBase `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductDeleteResp) Reset() {
	*x = ProductDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteResp) ProtoMessage() {}

func (x *ProductDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteResp.ProtoReflect.Descriptor instead.
func (*ProductDeleteResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProductDeleteResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductDeleteResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductDeleteResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductDeleteResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductDeleteResp) GetData() *ProductModelBase {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductDeleteIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 删除方式, id, productNum 二选一
	DeleteType string   `protobuf:"bytes,1,opt,name=deleteType,proto3" json:"deleteType,omitempty"`
	Ids        []uint32 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	ProductSns []string `protobuf:"bytes,3,rep,name=productSns,proto3" json:"productSns,omitempty"`
}

func (x *ProductDeleteIdsReq) Reset() {
	*x = ProductDeleteIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteIdsReq) ProtoMessage() {}

func (x *ProductDeleteIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteIdsReq.ProtoReflect.Descriptor instead.
func (*ProductDeleteIdsReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProductDeleteIdsReq) GetDeleteType() string {
	if x != nil {
		return x.DeleteType
	}
	return ""
}

func (x *ProductDeleteIdsReq) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ProductDeleteIdsReq) GetProductSns() []string {
	if x != nil {
		return x.ProductSns
	}
	return nil
}

type ProductDeleteIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      string `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductDeleteIdsResp) Reset() {
	*x = ProductDeleteIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteIdsResp) ProtoMessage() {}

func (x *ProductDeleteIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteIdsResp.ProtoReflect.Descriptor instead.
func (*ProductDeleteIdsResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{8}
}

func (x *ProductDeleteIdsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductDeleteIdsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductDeleteIdsResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductDeleteIdsResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductDeleteIdsResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ProductUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 更新产品信息
	Product *ModelProduct `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *ProductUpdateReq) Reset() {
	*x = ProductUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUpdateReq) ProtoMessage() {}

func (x *ProductUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductUpdateReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *ProductUpdateReq) GetProduct() *ModelProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type ProductUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ProductModelBase `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductUpdateResp) Reset() {
	*x = ProductUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUpdateResp) ProtoMessage() {}

func (x *ProductUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUpdateResp.ProtoReflect.Descriptor instead.
func (*ProductUpdateResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{10}
}

func (x *ProductUpdateResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductUpdateResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductUpdateResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductUpdateResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductUpdateResp) GetData() *ProductModelBase {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 查询方式, id, productNum 二选一
	QueryType string `protobuf:"bytes,1,opt,name=queryType,proto3" json:"queryType,omitempty"`
	Id        uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ProductSn string `protobuf:"bytes,3,opt,name=productSn,proto3" json:"productSn,omitempty"`
}

func (x *ProductQueryReq) Reset() {
	*x = ProductQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryReq) ProtoMessage() {}

func (x *ProductQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryReq.ProtoReflect.Descriptor instead.
func (*ProductQueryReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{11}
}

func (x *ProductQueryReq) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *ProductQueryReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductQueryReq) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type ProductQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelProduct `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductQueryResp) Reset() {
	*x = ProductQueryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryResp) ProtoMessage() {}

func (x *ProductQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryResp.ProtoReflect.Descriptor instead.
func (*ProductQueryResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{12}
}

func (x *ProductQueryResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductQueryResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductQueryResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductQueryResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductQueryResp) GetData() *ModelProduct {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductQueryIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 查询方式, id, productNum 二选一
	QueryType  string   `protobuf:"bytes,1,opt,name=queryType,proto3" json:"queryType,omitempty"`
	Ids        []uint32 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	ProductSns []string `protobuf:"bytes,3,rep,name=productSns,proto3" json:"productSns,omitempty"`
}

func (x *ProductQueryIdsReq) Reset() {
	*x = ProductQueryIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryIdsReq) ProtoMessage() {}

func (x *ProductQueryIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryIdsReq.ProtoReflect.Descriptor instead.
func (*ProductQueryIdsReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{13}
}

func (x *ProductQueryIdsReq) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *ProductQueryIdsReq) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ProductQueryIdsReq) GetProductSns() []string {
	if x != nil {
		return x.ProductSns
	}
	return nil
}

type ProductQueryIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string          `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string          `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      []*ModelProduct `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductQueryIdsResp) Reset() {
	*x = ProductQueryIdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryIdsResp) ProtoMessage() {}

func (x *ProductQueryIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryIdsResp.ProtoReflect.Descriptor instead.
func (*ProductQueryIdsResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{14}
}

func (x *ProductQueryIdsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductQueryIdsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductQueryIdsResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductQueryIdsResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductQueryIdsResp) GetData() []*ModelProduct {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductQueryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	PType     int32  `protobuf:"varint,6,opt,name=pType,proto3" json:"pType,omitempty"`
}

func (x *ProductQueryListReq) Reset() {
	*x = ProductQueryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryListReq) ProtoMessage() {}

func (x *ProductQueryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryListReq.ProtoReflect.Descriptor instead.
func (*ProductQueryListReq) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{15}
}

func (x *ProductQueryListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductQueryListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductQueryListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProductQueryListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProductQueryListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ProductQueryListReq) GetPType() int32 {
	if x != nil {
		return x.PType
	}
	return 0
}

type ProductQueryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                    `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                    `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ProductQueryListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductQueryListResp) Reset() {
	*x = ProductQueryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryListResp) ProtoMessage() {}

func (x *ProductQueryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryListResp.ProtoReflect.Descriptor instead.
func (*ProductQueryListResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{16}
}

func (x *ProductQueryListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductQueryListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ProductQueryListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ProductQueryListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProductQueryListResp) GetData() *ProductQueryListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductQueryListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelProduct `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32           `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ProductQueryListRespData) Reset() {
	*x = ProductQueryListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductQueryListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductQueryListRespData) ProtoMessage() {}

func (x *ProductQueryListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductQueryListRespData.ProtoReflect.Descriptor instead.
func (*ProductQueryListRespData) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{17}
}

func (x *ProductQueryListRespData) GetList() []*ModelProduct {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ProductQueryListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductQueryListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductQueryListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CreateOrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 同步配置中心的数据
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// note: 率先支持微信支付
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// note: 产品信息
	ProductSn string `protobuf:"bytes,3,opt,name=productSn,proto3" json:"productSn,omitempty"`
	Quantity  int64  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ExtraData string `protobuf:"bytes,5,opt,name=extraData,proto3" json:"extraData,omitempty"`
	// note: 微信相关的数据
	GoodsTags     string                               `protobuf:"bytes,6,opt,name=goodsTags,proto3" json:"goodsTags,omitempty"`
	SupportFapiao bool                                 `protobuf:"varint,7,opt,name=supportFapiao,proto3" json:"supportFapiao,omitempty"`
	Openid        string                               `protobuf:"bytes,8,opt,name=openid,proto3" json:"openid,omitempty"`
	ProfitSharing bool                                 `protobuf:"varint,10,opt,name=ProfitSharing,proto3" json:"ProfitSharing,omitempty"`
	SceneInfo     *MiniAppJSAPICreateOrderReqSceneInfo `protobuf:"bytes,11,opt,name=sceneInfo,proto3" json:"sceneInfo,omitempty"`
	CustomName    string                               `protobuf:"bytes,12,opt,name=customName,proto3" json:"customName,omitempty"`
	CustomDesc    string                               `protobuf:"bytes,13,opt,name=customDesc,proto3" json:"customDesc,omitempty"` // note: 抖音相关的数据
}

func (x *CreateOrderParams) Reset() {
	*x = CreateOrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderParams) ProtoMessage() {}

func (x *CreateOrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderParams.ProtoReflect.Descriptor instead.
func (*CreateOrderParams) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{18}
}

func (x *CreateOrderParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateOrderParams) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreateOrderParams) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *CreateOrderParams) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateOrderParams) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

func (x *CreateOrderParams) GetGoodsTags() string {
	if x != nil {
		return x.GoodsTags
	}
	return ""
}

func (x *CreateOrderParams) GetSupportFapiao() bool {
	if x != nil {
		return x.SupportFapiao
	}
	return false
}

func (x *CreateOrderParams) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *CreateOrderParams) GetProfitSharing() bool {
	if x != nil {
		return x.ProfitSharing
	}
	return false
}

func (x *CreateOrderParams) GetSceneInfo() *MiniAppJSAPICreateOrderReqSceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

func (x *CreateOrderParams) GetCustomName() string {
	if x != nil {
		return x.CustomName
	}
	return ""
}

func (x *CreateOrderParams) GetCustomDesc() string {
	if x != nil {
		return x.CustomDesc
	}
	return ""
}

type MiniAppJSAPICreateOrderReqSceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayerClientIp string                               `protobuf:"bytes,1,opt,name=payerClientIp,proto3" json:"payerClientIp,omitempty"`
	DeviceId      string                               `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	StoreInfo     *MiniAppJSAPICreateOrderReqStoreInfo `protobuf:"bytes,3,opt,name=storeInfo,proto3" json:"storeInfo,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) Reset() {
	*x = MiniAppJSAPICreateOrderReqSceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqSceneInfo) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqSceneInfo.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqSceneInfo) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{19}
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) GetPayerClientIp() string {
	if x != nil {
		return x.PayerClientIp
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) GetStoreInfo() *MiniAppJSAPICreateOrderReqStoreInfo {
	if x != nil {
		return x.StoreInfo
	}
	return nil
}

type MiniAppJSAPICreateOrderReqStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AreaCode string `protobuf:"bytes,3,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	Address  string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) Reset() {
	*x = MiniAppJSAPICreateOrderReqStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqStoreInfo) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqStoreInfo.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqStoreInfo) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{20}
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MiniAppJSAPICreateOrderReqSettleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfitSharing bool `protobuf:"varint,1,opt,name=ProfitSharing,proto3" json:"ProfitSharing,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) Reset() {
	*x = MiniAppJSAPICreateOrderReqSettleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqSettleInfo) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqSettleInfo.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqSettleInfo) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{21}
}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) GetProfitSharing() bool {
	if x != nil {
		return x.ProfitSharing
	}
	return false
}

// note: 输出订单编号和相关数据编码
type CreateOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string               `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string               `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *CreateOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateOrderResp) Reset() {
	*x = CreateOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResp) ProtoMessage() {}

func (x *CreateOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResp.ProtoReflect.Descriptor instead.
func (*CreateOrderResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateOrderResp) GetData() *CreateOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepayId  string `protobuf:"bytes,1,opt,name=prepayId,proto3" json:"prepayId,omitempty"`
	Platform  string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	ProductSn string `protobuf:"bytes,3,opt,name=productSn,proto3" json:"productSn,omitempty"`
	Appid     string `protobuf:"bytes,4,opt,name=appid,proto3" json:"appid,omitempty"`
	TimeStamp string `protobuf:"bytes,5,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	NonceStr  string `protobuf:"bytes,6,opt,name=nonceStr,proto3" json:"nonceStr,omitempty"`
	Package   string `protobuf:"bytes,7,opt,name=package,proto3" json:"package,omitempty"`
	SignType  string `protobuf:"bytes,8,opt,name=signType,proto3" json:"signType,omitempty"`
	PaySign   string `protobuf:"bytes,9,opt,name=paySign,proto3" json:"paySign,omitempty"`
	OrderNo   string `protobuf:"bytes,10,opt,name=orderNo,proto3" json:"orderNo,omitempty"`
}

func (x *CreateOrderRespData) Reset() {
	*x = CreateOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRespData) ProtoMessage() {}

func (x *CreateOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRespData.ProtoReflect.Descriptor instead.
func (*CreateOrderRespData) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{23}
}

func (x *CreateOrderRespData) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *CreateOrderRespData) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreateOrderRespData) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *CreateOrderRespData) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *CreateOrderRespData) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *CreateOrderRespData) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *CreateOrderRespData) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *CreateOrderRespData) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *CreateOrderRespData) GetPaySign() string {
	if x != nil {
		return x.PaySign
	}
	return ""
}

func (x *CreateOrderRespData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type QueryOrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 同步配置中心的数据
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// note: 率先支持微信支付
	Platform      string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	QueryType     string `protobuf:"bytes,3,opt,name=queryType,proto3" json:"queryType,omitempty"`
	TransactionId string `protobuf:"bytes,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutTradeNo    string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	// note: 检查这个产品用户是否有未完成，但是已发起的订单
	ProductSn string `protobuf:"bytes,6,opt,name=productSn,proto3" json:"productSn,omitempty"`
}

func (x *QueryOrderParams) Reset() {
	*x = QueryOrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderParams) ProtoMessage() {}

func (x *QueryOrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderParams.ProtoReflect.Descriptor instead.
func (*QueryOrderParams) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{24}
}

func (x *QueryOrderParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryOrderParams) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *QueryOrderParams) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *QueryOrderParams) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *QueryOrderParams) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *QueryOrderParams) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

type QueryOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string              `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string              `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryOrderResp) Reset() {
	*x = QueryOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderResp) ProtoMessage() {}

func (x *QueryOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderResp.ProtoReflect.Descriptor instead.
func (*QueryOrderResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{25}
}

func (x *QueryOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryOrderResp) GetData() *QueryOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount          *WechatMiniAppQueryOrderRespDataAmount        `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Appid           string                                        `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Attach          string                                        `protobuf:"bytes,3,opt,name=attach,proto3" json:"attach,omitempty"`
	BankType        string                                        `protobuf:"bytes,4,opt,name=bankType,proto3" json:"bankType,omitempty"`
	Mchid           string                                        `protobuf:"bytes,5,opt,name=mchid,proto3" json:"mchid,omitempty"`
	OutTradeNo      string                                        `protobuf:"bytes,6,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Payer           *WechatMiniAppQueryOrderRespDataPayer         `protobuf:"bytes,7,opt,name=payer,proto3" json:"payer,omitempty"`
	PromotionDetail []*WechatMiniAppQueryOrderRespPromotionDetail `protobuf:"bytes,8,rep,name=promotionDetail,proto3" json:"promotionDetail,omitempty"`
	SuccessTime     string                                        `protobuf:"bytes,9,opt,name=successTime,proto3" json:"successTime,omitempty"`
	TradeState      string                                        `protobuf:"bytes,10,opt,name=tradeState,proto3" json:"tradeState,omitempty"`
	TradeStateDesc  string                                        `protobuf:"bytes,11,opt,name=tradeStateDesc,proto3" json:"tradeStateDesc,omitempty"`
	TradeType       string                                        `protobuf:"bytes,12,opt,name=tradeType,proto3" json:"tradeType,omitempty"`
	TransactionId   string                                        `protobuf:"bytes,13,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	ErrCode         string                                        `protobuf:"bytes,14,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg          string                                        `protobuf:"bytes,15,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	Status          int32                                         `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	ExpireTime      string                                        `protobuf:"bytes,17,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
}

func (x *QueryOrderRespData) Reset() {
	*x = QueryOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOrderRespData) ProtoMessage() {}

func (x *QueryOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOrderRespData.ProtoReflect.Descriptor instead.
func (*QueryOrderRespData) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{26}
}

func (x *QueryOrderRespData) GetAmount() *WechatMiniAppQueryOrderRespDataAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *QueryOrderRespData) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *QueryOrderRespData) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *QueryOrderRespData) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *QueryOrderRespData) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *QueryOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *QueryOrderRespData) GetPayer() *WechatMiniAppQueryOrderRespDataPayer {
	if x != nil {
		return x.Payer
	}
	return nil
}

func (x *QueryOrderRespData) GetPromotionDetail() []*WechatMiniAppQueryOrderRespPromotionDetail {
	if x != nil {
		return x.PromotionDetail
	}
	return nil
}

func (x *QueryOrderRespData) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *QueryOrderRespData) GetTradeState() string {
	if x != nil {
		return x.TradeState
	}
	return ""
}

func (x *QueryOrderRespData) GetTradeStateDesc() string {
	if x != nil {
		return x.TradeStateDesc
	}
	return ""
}

func (x *QueryOrderRespData) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *QueryOrderRespData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *QueryOrderRespData) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *QueryOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *QueryOrderRespData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryOrderRespData) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type WechatMiniAppQueryOrderRespDataAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency      string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	PayerCurrency string `protobuf:"bytes,2,opt,name=payer_currency,json=payerCurrency,proto3" json:"payer_currency,omitempty"`
	PayerTotal    uint32 `protobuf:"varint,3,opt,name=payer_total,json=payerTotal,proto3" json:"payer_total,omitempty"`
	Total         uint32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespDataAmount) Reset() {
	*x = WechatMiniAppQueryOrderRespDataAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespDataAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespDataAmount) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespDataAmount) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespDataAmount.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespDataAmount) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{27}
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetPayerCurrency() string {
	if x != nil {
		return x.PayerCurrency
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetPayerTotal() uint32 {
	if x != nil {
		return x.PayerTotal
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type WechatMiniAppQueryOrderRespDataPayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespDataPayer) Reset() {
	*x = WechatMiniAppQueryOrderRespDataPayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespDataPayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespDataPayer) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespDataPayer) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespDataPayer.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespDataPayer) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{28}
}

func (x *WechatMiniAppQueryOrderRespDataPayer) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type WechatMiniAppQueryOrderRespPromotionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId            string                                                   `protobuf:"bytes,1,opt,name=CouponId,proto3" json:"CouponId,omitempty"`
	Name                string                                                   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Scope               string                                                   `protobuf:"bytes,3,opt,name=Scope,proto3" json:"Scope,omitempty"`
	Type                string                                                   `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Amount              int32                                                    `protobuf:"varint,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	StockId             string                                                   `protobuf:"bytes,6,opt,name=StockId,proto3" json:"StockId,omitempty"`
	WechatpayContribute int32                                                    `protobuf:"varint,7,opt,name=WechatpayContribute,proto3" json:"WechatpayContribute,omitempty"`
	MerchantContribute  int32                                                    `protobuf:"varint,8,opt,name=MerchantContribute,proto3" json:"MerchantContribute,omitempty"`
	OtherContribute     int32                                                    `protobuf:"varint,9,opt,name=OtherContribute,proto3" json:"OtherContribute,omitempty"`
	Currency            string                                                   `protobuf:"bytes,10,opt,name=Currency,proto3" json:"Currency,omitempty"`
	GoodsDetail         []*WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail `protobuf:"bytes,11,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) Reset() {
	*x = WechatMiniAppQueryOrderRespPromotionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespPromotionDetail) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespPromotionDetail.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespPromotionDetail) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{29}
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetCouponId() string {
	if x != nil {
		return x.CouponId
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetWechatpayContribute() int32 {
	if x != nil {
		return x.WechatpayContribute
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetMerchantContribute() int32 {
	if x != nil {
		return x.MerchantContribute
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetOtherContribute() int32 {
	if x != nil {
		return x.OtherContribute
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetail) GetGoodsDetail() []*WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId        string `protobuf:"bytes,1,opt,name=GoodsId,proto3" json:"GoodsId,omitempty"`
	Quantity       int32  `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	UnitPrice      int32  `protobuf:"varint,3,opt,name=UnitPrice,proto3" json:"UnitPrice,omitempty"`
	DiscountAmount int32  `protobuf:"varint,4,opt,name=DiscountAmount,proto3" json:"DiscountAmount,omitempty"`
	GoodsRemark    string `protobuf:"bytes,5,opt,name=GoodsRemark,proto3" json:"GoodsRemark,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) Reset() {
	*x = WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{30}
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) GetGoodsId() string {
	if x != nil {
		return x.GoodsId
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) GetUnitPrice() int32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) GetDiscountAmount() int32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail) GetGoodsRemark() string {
	if x != nil {
		return x.GoodsRemark
	}
	return ""
}

type CloseOrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// note: 同步配置中心的数据
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// note: 率先支持微信支付
	Platform   string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	OutTradeNo string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *CloseOrderParams) Reset() {
	*x = CloseOrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderParams) ProtoMessage() {}

func (x *CloseOrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderParams.ProtoReflect.Descriptor instead.
func (*CloseOrderParams) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{31}
}

func (x *CloseOrderParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CloseOrderParams) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CloseOrderParams) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type CloseOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string              `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string              `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *CloseOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CloseOrderResp) Reset() {
	*x = CloseOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderResp) ProtoMessage() {}

func (x *CloseOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderResp.ProtoReflect.Descriptor instead.
func (*CloseOrderResp) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{32}
}

func (x *CloseOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CloseOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CloseOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CloseOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CloseOrderResp) GetData() *CloseOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CloseOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Platform   string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Appid      string `protobuf:"bytes,3,opt,name=appid,proto3" json:"appid,omitempty"`
	OutTradeNo string `protobuf:"bytes,4,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	ErrCode    string `protobuf:"bytes,5,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg     string `protobuf:"bytes,6,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CloseOrderRespData) Reset() {
	*x = CloseOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOrderRespData) ProtoMessage() {}

func (x *CloseOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOrderRespData.ProtoReflect.Descriptor instead.
func (*CloseOrderRespData) Descriptor() ([]byte, []int) {
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP(), []int{33}
}

func (x *CloseOrderRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CloseOrderRespData) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CloseOrderRespData) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *CloseOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *CloseOrderRespData) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *CloseOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_transactions_rpc_service_transactions_rpc_service_proto protoreflect.FileDescriptor

var file_transactions_rpc_service_transactions_rpc_service_proto_rawDesc = []byte{
	0x0a, 0x37, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x72,
	0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2d, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x40, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6e, 0x22, 0x96, 0x02, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x5a, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6e, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x61,
	0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x61,
	0x70, 0x69, 0x61, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x61, 0x70, 0x69, 0x61, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x22, 0xb8, 0x01, 0x0a, 0x23, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50,
	0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x7f, 0x0a, 0x23, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53,
	0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x24, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a,
	0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0xc2, 0x01,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x34, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xa7, 0x05, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x48, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x62, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa1, 0x01,
	0x0a, 0x25, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x3e, 0x0a, 0x24, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x22, 0xc7, 0x03, 0x0a, 0x2a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x65, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xd5, 0x01, 0x0a, 0x35,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x55, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x60, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x32, 0xe6, 0x04, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x20, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x59, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xff, 0x01, 0x0a,
	0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x70, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x42, 0x10,
	0x5a, 0x0e, 0x2e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transactions_rpc_service_transactions_rpc_service_proto_rawDescOnce sync.Once
	file_transactions_rpc_service_transactions_rpc_service_proto_rawDescData = file_transactions_rpc_service_transactions_rpc_service_proto_rawDesc
)

func file_transactions_rpc_service_transactions_rpc_service_proto_rawDescGZIP() []byte {
	file_transactions_rpc_service_transactions_rpc_service_proto_rawDescOnce.Do(func() {
		file_transactions_rpc_service_transactions_rpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_transactions_rpc_service_transactions_rpc_service_proto_rawDescData)
	})
	return file_transactions_rpc_service_transactions_rpc_service_proto_rawDescData
}

var file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_transactions_rpc_service_transactions_rpc_service_proto_goTypes = []interface{}{
	(*Model)(nil),                                                 // 0: transactions.Model
	(*ProductModelBase)(nil),                                      // 1: transactions.ProductModelBase
	(*ModelProduct)(nil),                                          // 2: transactions.ModelProduct
	(*ProductCreateReq)(nil),                                      // 3: transactions.ProductCreateReq
	(*ProductCreateResp)(nil),                                     // 4: transactions.ProductCreateResp
	(*ProductDeleteReq)(nil),                                      // 5: transactions.ProductDeleteReq
	(*ProductDeleteResp)(nil),                                     // 6: transactions.ProductDeleteResp
	(*ProductDeleteIdsReq)(nil),                                   // 7: transactions.ProductDeleteIdsReq
	(*ProductDeleteIdsResp)(nil),                                  // 8: transactions.ProductDeleteIdsResp
	(*ProductUpdateReq)(nil),                                      // 9: transactions.ProductUpdateReq
	(*ProductUpdateResp)(nil),                                     // 10: transactions.ProductUpdateResp
	(*ProductQueryReq)(nil),                                       // 11: transactions.ProductQueryReq
	(*ProductQueryResp)(nil),                                      // 12: transactions.ProductQueryResp
	(*ProductQueryIdsReq)(nil),                                    // 13: transactions.ProductQueryIdsReq
	(*ProductQueryIdsResp)(nil),                                   // 14: transactions.ProductQueryIdsResp
	(*ProductQueryListReq)(nil),                                   // 15: transactions.ProductQueryListReq
	(*ProductQueryListResp)(nil),                                  // 16: transactions.ProductQueryListResp
	(*ProductQueryListRespData)(nil),                              // 17: transactions.ProductQueryListRespData
	(*CreateOrderParams)(nil),                                     // 18: transactions.CreateOrderParams
	(*MiniAppJSAPICreateOrderReqSceneInfo)(nil),                   // 19: transactions.MiniAppJSAPICreateOrderReqSceneInfo
	(*MiniAppJSAPICreateOrderReqStoreInfo)(nil),                   // 20: transactions.MiniAppJSAPICreateOrderReqStoreInfo
	(*MiniAppJSAPICreateOrderReqSettleInfo)(nil),                  // 21: transactions.MiniAppJSAPICreateOrderReqSettleInfo
	(*CreateOrderResp)(nil),                                       // 22: transactions.CreateOrderResp
	(*CreateOrderRespData)(nil),                                   // 23: transactions.CreateOrderRespData
	(*QueryOrderParams)(nil),                                      // 24: transactions.QueryOrderParams
	(*QueryOrderResp)(nil),                                        // 25: transactions.QueryOrderResp
	(*QueryOrderRespData)(nil),                                    // 26: transactions.QueryOrderRespData
	(*WechatMiniAppQueryOrderRespDataAmount)(nil),                 // 27: transactions.WechatMiniAppQueryOrderRespDataAmount
	(*WechatMiniAppQueryOrderRespDataPayer)(nil),                  // 28: transactions.WechatMiniAppQueryOrderRespDataPayer
	(*WechatMiniAppQueryOrderRespPromotionDetail)(nil),            // 29: transactions.WechatMiniAppQueryOrderRespPromotionDetail
	(*WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail)(nil), // 30: transactions.WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail
	(*CloseOrderParams)(nil),                                      // 31: transactions.CloseOrderParams
	(*CloseOrderResp)(nil),                                        // 32: transactions.CloseOrderResp
	(*CloseOrderRespData)(nil),                                    // 33: transactions.CloseOrderRespData
}
var file_transactions_rpc_service_transactions_rpc_service_proto_depIdxs = []int32{
	2,  // 0: transactions.ProductCreateReq.product:type_name -> transactions.ModelProduct
	1,  // 1: transactions.ProductCreateResp.data:type_name -> transactions.ProductModelBase
	1,  // 2: transactions.ProductDeleteResp.data:type_name -> transactions.ProductModelBase
	2,  // 3: transactions.ProductUpdateReq.product:type_name -> transactions.ModelProduct
	1,  // 4: transactions.ProductUpdateResp.data:type_name -> transactions.ProductModelBase
	2,  // 5: transactions.ProductQueryResp.data:type_name -> transactions.ModelProduct
	2,  // 6: transactions.ProductQueryIdsResp.data:type_name -> transactions.ModelProduct
	17, // 7: transactions.ProductQueryListResp.data:type_name -> transactions.ProductQueryListRespData
	2,  // 8: transactions.ProductQueryListRespData.list:type_name -> transactions.ModelProduct
	19, // 9: transactions.CreateOrderParams.sceneInfo:type_name -> transactions.MiniAppJSAPICreateOrderReqSceneInfo
	20, // 10: transactions.MiniAppJSAPICreateOrderReqSceneInfo.storeInfo:type_name -> transactions.MiniAppJSAPICreateOrderReqStoreInfo
	23, // 11: transactions.CreateOrderResp.data:type_name -> transactions.CreateOrderRespData
	26, // 12: transactions.QueryOrderResp.data:type_name -> transactions.QueryOrderRespData
	27, // 13: transactions.QueryOrderRespData.amount:type_name -> transactions.WechatMiniAppQueryOrderRespDataAmount
	28, // 14: transactions.QueryOrderRespData.payer:type_name -> transactions.WechatMiniAppQueryOrderRespDataPayer
	29, // 15: transactions.QueryOrderRespData.promotionDetail:type_name -> transactions.WechatMiniAppQueryOrderRespPromotionDetail
	30, // 16: transactions.WechatMiniAppQueryOrderRespPromotionDetail.goodsDetail:type_name -> transactions.WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail
	33, // 17: transactions.CloseOrderResp.data:type_name -> transactions.CloseOrderRespData
	3,  // 18: transactions.ProductRpcService.ProductCreate:input_type -> transactions.ProductCreateReq
	5,  // 19: transactions.ProductRpcService.ProductDelete:input_type -> transactions.ProductDeleteReq
	7,  // 20: transactions.ProductRpcService.ProductDeleteIds:input_type -> transactions.ProductDeleteIdsReq
	9,  // 21: transactions.ProductRpcService.ProductUpdate:input_type -> transactions.ProductUpdateReq
	11, // 22: transactions.ProductRpcService.ProductQuery:input_type -> transactions.ProductQueryReq
	13, // 23: transactions.ProductRpcService.ProductQueryIds:input_type -> transactions.ProductQueryIdsReq
	15, // 24: transactions.ProductRpcService.ProductQueryList:input_type -> transactions.ProductQueryListReq
	18, // 25: transactions.TransactionsRpcService.CreateOrder:input_type -> transactions.CreateOrderParams
	24, // 26: transactions.TransactionsRpcService.QueryOrder:input_type -> transactions.QueryOrderParams
	31, // 27: transactions.TransactionsRpcService.CloseOrder:input_type -> transactions.CloseOrderParams
	4,  // 28: transactions.ProductRpcService.ProductCreate:output_type -> transactions.ProductCreateResp
	6,  // 29: transactions.ProductRpcService.ProductDelete:output_type -> transactions.ProductDeleteResp
	8,  // 30: transactions.ProductRpcService.ProductDeleteIds:output_type -> transactions.ProductDeleteIdsResp
	10, // 31: transactions.ProductRpcService.ProductUpdate:output_type -> transactions.ProductUpdateResp
	12, // 32: transactions.ProductRpcService.ProductQuery:output_type -> transactions.ProductQueryResp
	14, // 33: transactions.ProductRpcService.ProductQueryIds:output_type -> transactions.ProductQueryIdsResp
	16, // 34: transactions.ProductRpcService.ProductQueryList:output_type -> transactions.ProductQueryListResp
	22, // 35: transactions.TransactionsRpcService.CreateOrder:output_type -> transactions.CreateOrderResp
	25, // 36: transactions.TransactionsRpcService.QueryOrder:output_type -> transactions.QueryOrderResp
	32, // 37: transactions.TransactionsRpcService.CloseOrder:output_type -> transactions.CloseOrderResp
	28, // [28:38] is the sub-list for method output_type
	18, // [18:28] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_transactions_rpc_service_transactions_rpc_service_proto_init() }
func file_transactions_rpc_service_transactions_rpc_service_proto_init() {
	if File_transactions_rpc_service_transactions_rpc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductModelBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryIdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductQueryListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqSceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqSettleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespDataAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespDataPayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespPromotionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespPromotionDetailGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transactions_rpc_service_transactions_rpc_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_transactions_rpc_service_transactions_rpc_service_proto_goTypes,
		DependencyIndexes: file_transactions_rpc_service_transactions_rpc_service_proto_depIdxs,
		MessageInfos:      file_transactions_rpc_service_transactions_rpc_service_proto_msgTypes,
	}.Build()
	File_transactions_rpc_service_transactions_rpc_service_proto = out.File
	file_transactions_rpc_service_transactions_rpc_service_proto_rawDesc = nil
	file_transactions_rpc_service_transactions_rpc_service_proto_goTypes = nil
	file_transactions_rpc_service_transactions_rpc_service_proto_depIdxs = nil
}
