// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: wechat.proto

package wechat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Scope       string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WebRedirectReq) Reset() {
	*x = WebRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirectReq) ProtoMessage() {}

func (x *WebRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirectReq.ProtoReflect.Descriptor instead.
func (*WebRedirectReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{0}
}

func (x *WebRedirectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebRedirectReq) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebRedirectReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WebRedirectReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WebAutoRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Scope       string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	TempUrl     string `protobuf:"bytes,5,opt,name=temp_url,json=tempUrl,proto3" json:"temp_url,omitempty"`
}

func (x *WebAutoRedirectReq) Reset() {
	*x = WebAutoRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAutoRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAutoRedirectReq) ProtoMessage() {}

func (x *WebAutoRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAutoRedirectReq.ProtoReflect.Descriptor instead.
func (*WebAutoRedirectReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{1}
}

func (x *WebAutoRedirectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebAutoRedirectReq) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebAutoRedirectReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WebAutoRedirectReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WebAutoRedirectReq) GetTempUrl() string {
	if x != nil {
		return x.TempUrl
	}
	return ""
}

type CodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeReq) Reset() {
	*x = CodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeReq) ProtoMessage() {}

func (x *CodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeReq.ProtoReflect.Descriptor instead.
func (*CodeReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{2}
}

func (x *CodeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	Openid      string `protobuf:"bytes,3,opt,name=Openid,proto3" json:"Openid,omitempty"`
	Lang        string `protobuf:"bytes,4,opt,name=Lang,proto3" json:"Lang,omitempty"`
}

func (x *TokenReq) Reset() {
	*x = TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReq) ProtoMessage() {}

func (x *TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReq.ProtoReflect.Descriptor instead.
func (*TokenReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{3}
}

func (x *TokenReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TokenReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *TokenReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type RefreshReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
}

func (x *RefreshReq) Reset() {
	*x = RefreshReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshReq) ProtoMessage() {}

func (x *RefreshReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshReq.ProtoReflect.Descriptor instead.
func (*RefreshReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RefreshReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type WebGetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Openid      string `protobuf:"bytes,2,opt,name=Openid,proto3" json:"Openid,omitempty"`
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
}

func (x *WebGetUserInfoReq) Reset() {
	*x = WebGetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebGetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebGetUserInfoReq) ProtoMessage() {}

func (x *WebGetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebGetUserInfoReq.ProtoReflect.Descriptor instead.
func (*WebGetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{5}
}

func (x *WebGetUserInfoReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebGetUserInfoReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WebGetUserInfoReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type OaKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *OaKeyReq) Reset() {
	*x = OaKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaKeyReq) ProtoMessage() {}

func (x *OaKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaKeyReq.ProtoReflect.Descriptor instead.
func (*OaKeyReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{6}
}

func (x *OaKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MiniAppJSAPICreateOrderReqAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqAmount) Reset() {
	*x = MiniAppJSAPICreateOrderReqAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqAmount) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqAmount) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqAmount.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqAmount) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{7}
}

func (x *MiniAppJSAPICreateOrderReqAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MiniAppJSAPICreateOrderReqAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type MiniAppJSAPICreateOrderReqPayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqPayer) Reset() {
	*x = MiniAppJSAPICreateOrderReqPayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqPayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqPayer) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqPayer) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqPayer.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqPayer) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{8}
}

func (x *MiniAppJSAPICreateOrderReqPayer) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type MiniAppJSAPICreateOrderReqDetailGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantGoodsId  string `protobuf:"bytes,1,opt,name=merchantGoodsId,proto3" json:"merchantGoodsId,omitempty"`
	WechatpayGoodsId string `protobuf:"bytes,2,opt,name=wechatpayGoodsId,proto3" json:"wechatpayGoodsId,omitempty"`
	GoodsName        string `protobuf:"bytes,3,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	Quantity         uint32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice        uint32 `protobuf:"varint,5,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) Reset() {
	*x = MiniAppJSAPICreateOrderReqDetailGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqDetailGoodsDetail) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqDetailGoodsDetail.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqDetailGoodsDetail) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{9}
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) GetMerchantGoodsId() string {
	if x != nil {
		return x.MerchantGoodsId
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) GetWechatpayGoodsId() string {
	if x != nil {
		return x.WechatpayGoodsId
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MiniAppJSAPICreateOrderReqDetailGoodsDetail) GetUnitPrice() uint32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

type MiniAppJSAPICreateOrderReqDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostPrice   int32                                          `protobuf:"varint,1,opt,name=costPrice,proto3" json:"costPrice,omitempty"`
	InvoiceId   string                                         `protobuf:"bytes,2,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	GoodsDetail []*MiniAppJSAPICreateOrderReqDetailGoodsDetail `protobuf:"bytes,3,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqDetail) Reset() {
	*x = MiniAppJSAPICreateOrderReqDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqDetail) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqDetail) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqDetail.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqDetail) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{10}
}

func (x *MiniAppJSAPICreateOrderReqDetail) GetCostPrice() int32 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *MiniAppJSAPICreateOrderReqDetail) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqDetail) GetGoodsDetail() []*MiniAppJSAPICreateOrderReqDetailGoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type MiniAppJSAPICreateOrderReqStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AreaCode string `protobuf:"bytes,3,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	Address  string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) Reset() {
	*x = MiniAppJSAPICreateOrderReqStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqStoreInfo) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqStoreInfo.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqStoreInfo) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{11}
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqStoreInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MiniAppJSAPICreateOrderReqSceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayerClientIp string                               `protobuf:"bytes,1,opt,name=payerClientIp,proto3" json:"payerClientIp,omitempty"`
	DeviceId      string                               `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	StoreInfo     *MiniAppJSAPICreateOrderReqStoreInfo `protobuf:"bytes,3,opt,name=storeInfo,proto3" json:"storeInfo,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) Reset() {
	*x = MiniAppJSAPICreateOrderReqSceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqSceneInfo) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqSceneInfo.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqSceneInfo) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{12}
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) GetPayerClientIp() string {
	if x != nil {
		return x.PayerClientIp
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReqSceneInfo) GetStoreInfo() *MiniAppJSAPICreateOrderReqStoreInfo {
	if x != nil {
		return x.StoreInfo
	}
	return nil
}

type MiniAppJSAPICreateOrderReqSettleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfitSharing bool `protobuf:"varint,1,opt,name=ProfitSharing,proto3" json:"ProfitSharing,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) Reset() {
	*x = MiniAppJSAPICreateOrderReqSettleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReqSettleInfo) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReqSettleInfo.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReqSettleInfo) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{13}
}

func (x *MiniAppJSAPICreateOrderReqSettleInfo) GetProfitSharing() bool {
	if x != nil {
		return x.ProfitSharing
	}
	return false
}

type MiniAppJSAPICreateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string                                `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Appid         string                                `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Mchid         string                                `protobuf:"bytes,3,opt,name=mchid,proto3" json:"mchid,omitempty"`
	Description   string                                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	OutTradeNo    string                                `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	TimeExpire    string                                `protobuf:"bytes,6,opt,name=timeExpire,proto3" json:"timeExpire,omitempty"`
	Attach        string                                `protobuf:"bytes,7,opt,name=attach,proto3" json:"attach,omitempty"`
	NotifyUrl     string                                `protobuf:"bytes,8,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	GoodsTag      string                                `protobuf:"bytes,9,opt,name=goodsTag,proto3" json:"goodsTag,omitempty"`
	SupportFapiao bool                                  `protobuf:"varint,10,opt,name=supportFapiao,proto3" json:"supportFapiao,omitempty"`
	Amount        *MiniAppJSAPICreateOrderReqAmount     `protobuf:"bytes,11,opt,name=amount,proto3" json:"amount,omitempty"`
	Payer         *MiniAppJSAPICreateOrderReqPayer      `protobuf:"bytes,12,opt,name=payer,proto3" json:"payer,omitempty"`
	Detail        *MiniAppJSAPICreateOrderReqDetail     `protobuf:"bytes,13,opt,name=detail,proto3" json:"detail,omitempty"`
	SceneInfo     *MiniAppJSAPICreateOrderReqSceneInfo  `protobuf:"bytes,14,opt,name=sceneInfo,proto3" json:"sceneInfo,omitempty"`
	SettleInfo    *MiniAppJSAPICreateOrderReqSettleInfo `protobuf:"bytes,15,opt,name=settleInfo,proto3" json:"settleInfo,omitempty"`
}

func (x *MiniAppJSAPICreateOrderReq) Reset() {
	*x = MiniAppJSAPICreateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderReq) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderReq.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{14}
}

func (x *MiniAppJSAPICreateOrderReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetTimeExpire() string {
	if x != nil {
		return x.TimeExpire
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetGoodsTag() string {
	if x != nil {
		return x.GoodsTag
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderReq) GetSupportFapiao() bool {
	if x != nil {
		return x.SupportFapiao
	}
	return false
}

func (x *MiniAppJSAPICreateOrderReq) GetAmount() *MiniAppJSAPICreateOrderReqAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MiniAppJSAPICreateOrderReq) GetPayer() *MiniAppJSAPICreateOrderReqPayer {
	if x != nil {
		return x.Payer
	}
	return nil
}

func (x *MiniAppJSAPICreateOrderReq) GetDetail() *MiniAppJSAPICreateOrderReqDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *MiniAppJSAPICreateOrderReq) GetSceneInfo() *MiniAppJSAPICreateOrderReqSceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

func (x *MiniAppJSAPICreateOrderReq) GetSettleInfo() *MiniAppJSAPICreateOrderReqSettleInfo {
	if x != nil {
		return x.SettleInfo
	}
	return nil
}

type MiniAppQueryOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	QueryType     string `protobuf:"bytes,2,opt,name=queryType,proto3" json:"queryType,omitempty"`
	Mchid         string `protobuf:"bytes,3,opt,name=mchid,proto3" json:"mchid,omitempty"`
	TransactionId string `protobuf:"bytes,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutTradeNo    string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *MiniAppQueryOrderReq) Reset() {
	*x = MiniAppQueryOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppQueryOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppQueryOrderReq) ProtoMessage() {}

func (x *MiniAppQueryOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppQueryOrderReq.ProtoReflect.Descriptor instead.
func (*MiniAppQueryOrderReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{15}
}

func (x *MiniAppQueryOrderReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MiniAppQueryOrderReq) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *MiniAppQueryOrderReq) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *MiniAppQueryOrderReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *MiniAppQueryOrderReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type MiniAppCloseOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Mchid      string `protobuf:"bytes,2,opt,name=mchid,proto3" json:"mchid,omitempty"`
	OutTradeNo string `protobuf:"bytes,3,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *MiniAppCloseOrderReq) Reset() {
	*x = MiniAppCloseOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCloseOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCloseOrderReq) ProtoMessage() {}

func (x *MiniAppCloseOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCloseOrderReq.ProtoReflect.Descriptor instead.
func (*MiniAppCloseOrderReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{16}
}

func (x *MiniAppCloseOrderReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MiniAppCloseOrderReq) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *MiniAppCloseOrderReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type MiniAppRefundOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string                              `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutRefundNo   string                              `protobuf:"bytes,2,opt,name=outRefundNo,proto3" json:"outRefundNo,omitempty"`
	Reason        string                              `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	NotifyUrl     string                              `protobuf:"bytes,4,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	FundsAccount  string                              `protobuf:"bytes,5,opt,name=fundsAccount,proto3" json:"fundsAccount,omitempty"`
	Amount        *MiniAppRefundOrderReqAmount        `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	GoodsDetail   []*MiniAppRefundOrderReqGoodsDetail `protobuf:"bytes,7,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *MiniAppRefundOrderReq) Reset() {
	*x = MiniAppRefundOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderReq) ProtoMessage() {}

func (x *MiniAppRefundOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderReq.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderReq) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{17}
}

func (x *MiniAppRefundOrderReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *MiniAppRefundOrderReq) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *MiniAppRefundOrderReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MiniAppRefundOrderReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *MiniAppRefundOrderReq) GetFundsAccount() string {
	if x != nil {
		return x.FundsAccount
	}
	return ""
}

func (x *MiniAppRefundOrderReq) GetAmount() *MiniAppRefundOrderReqAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MiniAppRefundOrderReq) GetGoodsDetail() []*MiniAppRefundOrderReqGoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type MiniAppRefundOrderReqAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refund   uint32                             `protobuf:"varint,1,opt,name=refund,proto3" json:"refund,omitempty"`
	From     []*MiniAppRefundOrderReqAmountFrom `protobuf:"bytes,2,rep,name=from,proto3" json:"from,omitempty"`
	Total    uint32                             `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Currency string                             `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *MiniAppRefundOrderReqAmount) Reset() {
	*x = MiniAppRefundOrderReqAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderReqAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderReqAmount) ProtoMessage() {}

func (x *MiniAppRefundOrderReqAmount) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderReqAmount.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderReqAmount) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{18}
}

func (x *MiniAppRefundOrderReqAmount) GetRefund() uint32 {
	if x != nil {
		return x.Refund
	}
	return 0
}

func (x *MiniAppRefundOrderReqAmount) GetFrom() []*MiniAppRefundOrderReqAmountFrom {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *MiniAppRefundOrderReqAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MiniAppRefundOrderReqAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type MiniAppRefundOrderReqAmountFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amount  uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MiniAppRefundOrderReqAmountFrom) Reset() {
	*x = MiniAppRefundOrderReqAmountFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderReqAmountFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderReqAmountFrom) ProtoMessage() {}

func (x *MiniAppRefundOrderReqAmountFrom) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderReqAmountFrom.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderReqAmountFrom) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{19}
}

func (x *MiniAppRefundOrderReqAmountFrom) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MiniAppRefundOrderReqAmountFrom) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type MiniAppRefundOrderReqGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantGoodsId  string `protobuf:"bytes,1,opt,name=merchantGoodsId,proto3" json:"merchantGoodsId,omitempty"`
	WechatpayGoodsId string `protobuf:"bytes,2,opt,name=wechatpayGoodsId,proto3" json:"wechatpayGoodsId,omitempty"`
	GoodsName        string `protobuf:"bytes,3,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	UnitPrice        uint32 `protobuf:"varint,4,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	RefundAmount     uint32 `protobuf:"varint,5,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	RefundQuantity   uint32 `protobuf:"varint,6,opt,name=refundQuantity,proto3" json:"refundQuantity,omitempty"`
}

func (x *MiniAppRefundOrderReqGoodsDetail) Reset() {
	*x = MiniAppRefundOrderReqGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderReqGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderReqGoodsDetail) ProtoMessage() {}

func (x *MiniAppRefundOrderReqGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderReqGoodsDetail.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderReqGoodsDetail) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{20}
}

func (x *MiniAppRefundOrderReqGoodsDetail) GetMerchantGoodsId() string {
	if x != nil {
		return x.MerchantGoodsId
	}
	return ""
}

func (x *MiniAppRefundOrderReqGoodsDetail) GetWechatpayGoodsId() string {
	if x != nil {
		return x.WechatpayGoodsId
	}
	return ""
}

func (x *MiniAppRefundOrderReqGoodsDetail) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *MiniAppRefundOrderReqGoodsDetail) GetUnitPrice() uint32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *MiniAppRefundOrderReqGoodsDetail) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *MiniAppRefundOrderReqGoodsDetail) GetRefundQuantity() uint32 {
	if x != nil {
		return x.RefundQuantity
	}
	return 0
}

type MiniAppRefundOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *MiniAppRefundOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MiniAppRefundOrderResp) Reset() {
	*x = MiniAppRefundOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderResp) ProtoMessage() {}

func (x *MiniAppRefundOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderResp.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{21}
}

func (x *MiniAppRefundOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MiniAppRefundOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MiniAppRefundOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *MiniAppRefundOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MiniAppRefundOrderResp) GetData() *MiniAppRefundOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MiniAppRefundOrderRespDataAmountFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amount  uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MiniAppRefundOrderRespDataAmountFrom) Reset() {
	*x = MiniAppRefundOrderRespDataAmountFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderRespDataAmountFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderRespDataAmountFrom) ProtoMessage() {}

func (x *MiniAppRefundOrderRespDataAmountFrom) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderRespDataAmountFrom.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderRespDataAmountFrom) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{22}
}

func (x *MiniAppRefundOrderRespDataAmountFrom) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MiniAppRefundOrderRespDataAmountFrom) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type MiniAppRefundOrderRespDataAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total            uint32                                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Refund           uint32                                  `protobuf:"varint,2,opt,name=refund,proto3" json:"refund,omitempty"`
	From             []*MiniAppRefundOrderRespDataAmountFrom `protobuf:"bytes,3,rep,name=from,proto3" json:"from,omitempty"`
	PayerTotal       uint32                                  `protobuf:"varint,4,opt,name=payerTotal,proto3" json:"payerTotal,omitempty"`
	PayerRefund      uint32                                  `protobuf:"varint,5,opt,name=payerRefund,proto3" json:"payerRefund,omitempty"`
	SettlementRefund uint32                                  `protobuf:"varint,6,opt,name=settlementRefund,proto3" json:"settlementRefund,omitempty"`
	SettlementTotal  uint32                                  `protobuf:"varint,7,opt,name=settlementTotal,proto3" json:"settlementTotal,omitempty"`
	DiscountRefund   uint32                                  `protobuf:"varint,8,opt,name=discountRefund,proto3" json:"discountRefund,omitempty"`
	Currency         string                                  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *MiniAppRefundOrderRespDataAmount) Reset() {
	*x = MiniAppRefundOrderRespDataAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderRespDataAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderRespDataAmount) ProtoMessage() {}

func (x *MiniAppRefundOrderRespDataAmount) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderRespDataAmount.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderRespDataAmount) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{23}
}

func (x *MiniAppRefundOrderRespDataAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetRefund() uint32 {
	if x != nil {
		return x.Refund
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetFrom() []*MiniAppRefundOrderRespDataAmountFrom {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *MiniAppRefundOrderRespDataAmount) GetPayerTotal() uint32 {
	if x != nil {
		return x.PayerTotal
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetPayerRefund() uint32 {
	if x != nil {
		return x.PayerRefund
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetSettlementRefund() uint32 {
	if x != nil {
		return x.SettlementRefund
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetSettlementTotal() uint32 {
	if x != nil {
		return x.SettlementTotal
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetDiscountRefund() uint32 {
	if x != nil {
		return x.DiscountRefund
	}
	return 0
}

func (x *MiniAppRefundOrderRespDataAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantGoodsId  string `protobuf:"bytes,1,opt,name=merchantGoodsId,proto3" json:"merchantGoodsId,omitempty"`
	WechatpayGoodsId string `protobuf:"bytes,2,opt,name=wechatpayGoodsId,proto3" json:"wechatpayGoodsId,omitempty"`
	GoodsName        string `protobuf:"bytes,3,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	UnitPrice        uint32 `protobuf:"varint,4,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	RefundAmount     uint32 `protobuf:"varint,5,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	RefundQuantity   uint32 `protobuf:"varint,6,opt,name=refundQuantity,proto3" json:"refundQuantity,omitempty"`
}

func (x *GoodsDetail) Reset() {
	*x = GoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsDetail) ProtoMessage() {}

func (x *GoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsDetail.ProtoReflect.Descriptor instead.
func (*GoodsDetail) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{24}
}

func (x *GoodsDetail) GetMerchantGoodsId() string {
	if x != nil {
		return x.MerchantGoodsId
	}
	return ""
}

func (x *GoodsDetail) GetWechatpayGoodsId() string {
	if x != nil {
		return x.WechatpayGoodsId
	}
	return ""
}

func (x *GoodsDetail) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *GoodsDetail) GetUnitPrice() uint32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *GoodsDetail) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *GoodsDetail) GetRefundQuantity() uint32 {
	if x != nil {
		return x.RefundQuantity
	}
	return 0
}

type PromotionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId  string         `protobuf:"bytes,1,opt,name=promotionId,proto3" json:"promotionId,omitempty"`
	Scope        string         `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Type         string         `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Amount       uint32         `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	RefundAmount uint32         `protobuf:"varint,5,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	GoodsDetail  []*GoodsDetail `protobuf:"bytes,6,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *PromotionDetail) Reset() {
	*x = PromotionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionDetail) ProtoMessage() {}

func (x *PromotionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionDetail.ProtoReflect.Descriptor instead.
func (*PromotionDetail) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{25}
}

func (x *PromotionDetail) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *PromotionDetail) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *PromotionDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PromotionDetail) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PromotionDetail) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *PromotionDetail) GetGoodsDetail() []*GoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type MiniAppRefundOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundId            string                            `protobuf:"bytes,1,opt,name=refundId,proto3" json:"refundId,omitempty"`
	OutRefundNo         string                            `protobuf:"bytes,2,opt,name=outRefundNo,proto3" json:"outRefundNo,omitempty"`
	TransactionId       string                            `protobuf:"bytes,3,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutTradeNo          string                            `protobuf:"bytes,4,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Channel             string                            `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	UserReceivedAccount string                            `protobuf:"bytes,6,opt,name=userReceivedAccount,proto3" json:"userReceivedAccount,omitempty"`
	SuccessTime         string                            `protobuf:"bytes,7,opt,name=successTime,proto3" json:"successTime,omitempty"`
	CreateTime          string                            `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Status              string                            `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	FundsAccount        string                            `protobuf:"bytes,10,opt,name=fundsAccount,proto3" json:"fundsAccount,omitempty"`
	Amount              *MiniAppRefundOrderRespDataAmount `protobuf:"bytes,11,opt,name=amount,proto3" json:"amount,omitempty"`
	PromotionDetail     []*PromotionDetail                `protobuf:"bytes,12,rep,name=promotionDetail,proto3" json:"promotionDetail,omitempty"`
}

func (x *MiniAppRefundOrderRespData) Reset() {
	*x = MiniAppRefundOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppRefundOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppRefundOrderRespData) ProtoMessage() {}

func (x *MiniAppRefundOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppRefundOrderRespData.ProtoReflect.Descriptor instead.
func (*MiniAppRefundOrderRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{26}
}

func (x *MiniAppRefundOrderRespData) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetUserReceivedAccount() string {
	if x != nil {
		return x.UserReceivedAccount
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetFundsAccount() string {
	if x != nil {
		return x.FundsAccount
	}
	return ""
}

func (x *MiniAppRefundOrderRespData) GetAmount() *MiniAppRefundOrderRespDataAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MiniAppRefundOrderRespData) GetPromotionDetail() []*PromotionDetail {
	if x != nil {
		return x.PromotionDetail
	}
	return nil
}

type MiniAppCloseOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *MiniAppCloseOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MiniAppCloseOrderResp) Reset() {
	*x = MiniAppCloseOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCloseOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCloseOrderResp) ProtoMessage() {}

func (x *MiniAppCloseOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCloseOrderResp.ProtoReflect.Descriptor instead.
func (*MiniAppCloseOrderResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{27}
}

func (x *MiniAppCloseOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MiniAppCloseOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MiniAppCloseOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *MiniAppCloseOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MiniAppCloseOrderResp) GetData() *MiniAppCloseOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MiniAppCloseOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo string `protobuf:"bytes,1,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrEode    string `protobuf:"bytes,3,opt,name=errEode,proto3" json:"errEode,omitempty"`
	ErrMsg     string `protobuf:"bytes,4,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *MiniAppCloseOrderRespData) Reset() {
	*x = MiniAppCloseOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCloseOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCloseOrderRespData) ProtoMessage() {}

func (x *MiniAppCloseOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCloseOrderRespData.ProtoReflect.Descriptor instead.
func (*MiniAppCloseOrderRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{28}
}

func (x *MiniAppCloseOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *MiniAppCloseOrderRespData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MiniAppCloseOrderRespData) GetErrEode() string {
	if x != nil {
		return x.ErrEode
	}
	return ""
}

func (x *MiniAppCloseOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MiniAppQueryOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *MiniAppQueryOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MiniAppQueryOrderResp) Reset() {
	*x = MiniAppQueryOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppQueryOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppQueryOrderResp) ProtoMessage() {}

func (x *MiniAppQueryOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppQueryOrderResp.ProtoReflect.Descriptor instead.
func (*MiniAppQueryOrderResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{29}
}

func (x *MiniAppQueryOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MiniAppQueryOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MiniAppQueryOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *MiniAppQueryOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MiniAppQueryOrderResp) GetData() *MiniAppQueryOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MiniAppQueryOrderRespDataAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency      string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	PayerCurrency string `protobuf:"bytes,2,opt,name=payer_currency,json=payerCurrency,proto3" json:"payer_currency,omitempty"`
	PayerTotal    uint32 `protobuf:"varint,3,opt,name=payer_total,json=payerTotal,proto3" json:"payer_total,omitempty"`
	Total         uint32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MiniAppQueryOrderRespDataAmount) Reset() {
	*x = MiniAppQueryOrderRespDataAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppQueryOrderRespDataAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppQueryOrderRespDataAmount) ProtoMessage() {}

func (x *MiniAppQueryOrderRespDataAmount) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppQueryOrderRespDataAmount.ProtoReflect.Descriptor instead.
func (*MiniAppQueryOrderRespDataAmount) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{30}
}

func (x *MiniAppQueryOrderRespDataAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *MiniAppQueryOrderRespDataAmount) GetPayerCurrency() string {
	if x != nil {
		return x.PayerCurrency
	}
	return ""
}

func (x *MiniAppQueryOrderRespDataAmount) GetPayerTotal() uint32 {
	if x != nil {
		return x.PayerTotal
	}
	return 0
}

func (x *MiniAppQueryOrderRespDataAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MiniAppQueryOrderRespDataPayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *MiniAppQueryOrderRespDataPayer) Reset() {
	*x = MiniAppQueryOrderRespDataPayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppQueryOrderRespDataPayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppQueryOrderRespDataPayer) ProtoMessage() {}

func (x *MiniAppQueryOrderRespDataPayer) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppQueryOrderRespDataPayer.ProtoReflect.Descriptor instead.
func (*MiniAppQueryOrderRespDataPayer) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{31}
}

func (x *MiniAppQueryOrderRespDataPayer) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type MiniAppQueryOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount          *MiniAppQueryOrderRespDataAmount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Appid           string                           `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Attach          string                           `protobuf:"bytes,3,opt,name=attach,proto3" json:"attach,omitempty"`
	BankType        string                           `protobuf:"bytes,4,opt,name=bank_type,json=bankType,proto3" json:"bank_type,omitempty"`
	Mchid           string                           `protobuf:"bytes,5,opt,name=mchid,proto3" json:"mchid,omitempty"`
	OutTradeNo      string                           `protobuf:"bytes,6,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	Payer           *MiniAppQueryOrderRespDataPayer  `protobuf:"bytes,7,opt,name=payer,proto3" json:"payer,omitempty"`
	PromotionDetail []string                         `protobuf:"bytes,8,rep,name=promotion_detail,json=promotionDetail,proto3" json:"promotion_detail,omitempty"`
	SuccessTime     string                           `protobuf:"bytes,9,opt,name=success_time,json=successTime,proto3" json:"success_time,omitempty"`
	TradeState      string                           `protobuf:"bytes,10,opt,name=trade_state,json=tradeState,proto3" json:"trade_state,omitempty"`
	TradeStateDesc  string                           `protobuf:"bytes,11,opt,name=trade_state_desc,json=tradeStateDesc,proto3" json:"trade_state_desc,omitempty"`
	TradeType       string                           `protobuf:"bytes,12,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	TransactionId   string                           `protobuf:"bytes,13,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ErrEode         string                           `protobuf:"bytes,14,opt,name=errEode,proto3" json:"errEode,omitempty"`
	ErrMsg          string                           `protobuf:"bytes,15,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *MiniAppQueryOrderRespData) Reset() {
	*x = MiniAppQueryOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppQueryOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppQueryOrderRespData) ProtoMessage() {}

func (x *MiniAppQueryOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppQueryOrderRespData.ProtoReflect.Descriptor instead.
func (*MiniAppQueryOrderRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{32}
}

func (x *MiniAppQueryOrderRespData) GetAmount() *MiniAppQueryOrderRespDataAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MiniAppQueryOrderRespData) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetPayer() *MiniAppQueryOrderRespDataPayer {
	if x != nil {
		return x.Payer
	}
	return nil
}

func (x *MiniAppQueryOrderRespData) GetPromotionDetail() []string {
	if x != nil {
		return x.PromotionDetail
	}
	return nil
}

func (x *MiniAppQueryOrderRespData) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetTradeState() string {
	if x != nil {
		return x.TradeState
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetTradeStateDesc() string {
	if x != nil {
		return x.TradeStateDesc
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetErrEode() string {
	if x != nil {
		return x.ErrEode
	}
	return ""
}

func (x *MiniAppQueryOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MiniAppJSAPICreateOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *MiniAppJSAPICreateOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MiniAppJSAPICreateOrderResp) Reset() {
	*x = MiniAppJSAPICreateOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderResp) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderResp.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{33}
}

func (x *MiniAppJSAPICreateOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MiniAppJSAPICreateOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderResp) GetData() *MiniAppJSAPICreateOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MiniAppJSAPICreateOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepayId string `protobuf:"bytes,1,opt,name=prepayId,proto3" json:"prepayId,omitempty"`
	ErrEode  string `protobuf:"bytes,2,opt,name=errEode,proto3" json:"errEode,omitempty"`
	ErrMsg   string `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *MiniAppJSAPICreateOrderRespData) Reset() {
	*x = MiniAppJSAPICreateOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppJSAPICreateOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppJSAPICreateOrderRespData) ProtoMessage() {}

func (x *MiniAppJSAPICreateOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppJSAPICreateOrderRespData.ProtoReflect.Descriptor instead.
func (*MiniAppJSAPICreateOrderRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{34}
}

func (x *MiniAppJSAPICreateOrderRespData) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderRespData) GetErrEode() string {
	if x != nil {
		return x.ErrEode
	}
	return ""
}

func (x *MiniAppJSAPICreateOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type WebRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string               `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string               `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WebRedirectRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebRedirectResp) Reset() {
	*x = WebRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirectResp) ProtoMessage() {}

func (x *WebRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirectResp.ProtoReflect.Descriptor instead.
func (*WebRedirectResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{35}
}

func (x *WebRedirectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebRedirectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WebRedirectResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WebRedirectResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebRedirectResp) GetData() *WebRedirectRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebRedirectRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WebRedirectRespData) Reset() {
	*x = WebRedirectRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebRedirectRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebRedirectRespData) ProtoMessage() {}

func (x *WebRedirectRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebRedirectRespData.ProtoReflect.Descriptor instead.
func (*WebRedirectRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{36}
}

func (x *WebRedirectRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebRedirectRespData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebRedirectRespData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WebAutoRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WebAutoRedirectRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebAutoRedirectResp) Reset() {
	*x = WebAutoRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAutoRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAutoRedirectResp) ProtoMessage() {}

func (x *WebAutoRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAutoRedirectResp.ProtoReflect.Descriptor instead.
func (*WebAutoRedirectResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{37}
}

func (x *WebAutoRedirectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebAutoRedirectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WebAutoRedirectResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WebAutoRedirectResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebAutoRedirectResp) GetData() *WebAutoRedirectRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebAutoRedirectRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope       string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	State       string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	RedirectUrl string `protobuf:"bytes,4,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *WebAutoRedirectRespData) Reset() {
	*x = WebAutoRedirectRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAutoRedirectRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAutoRedirectRespData) ProtoMessage() {}

func (x *WebAutoRedirectRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAutoRedirectRespData.ProtoReflect.Descriptor instead.
func (*WebAutoRedirectRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{38}
}

func (x *WebAutoRedirectRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WebAutoRedirectRespData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebAutoRedirectRespData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WebAutoRedirectRespData) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type CodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *CodeRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CodeResp) Reset() {
	*x = CodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeResp) ProtoMessage() {}

func (x *CodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeResp.ProtoReflect.Descriptor instead.
func (*CodeResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{39}
}

func (x *CodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CodeResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CodeResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CodeResp) GetData() *CodeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CodeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken    string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn      int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken   string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Openid         string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Scope          string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	IsSnapshotuser int32  `protobuf:"varint,6,opt,name=isSnapshotuser,proto3" json:"isSnapshotuser,omitempty"`
	Unionid        string `protobuf:"bytes,7,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode        int32  `protobuf:"varint,8,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg         string `protobuf:"bytes,9,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *CodeRespData) Reset() {
	*x = CodeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRespData) ProtoMessage() {}

func (x *CodeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRespData.ProtoReflect.Descriptor instead.
func (*CodeRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{40}
}

func (x *CodeRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CodeRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *CodeRespData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CodeRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *CodeRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CodeRespData) GetIsSnapshotuser() int32 {
	if x != nil {
		return x.IsSnapshotuser
	}
	return 0
}

func (x *CodeRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *CodeRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *CodeRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type MiniAppCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string               `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string               `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *MiniAppCodeRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MiniAppCodeResp) Reset() {
	*x = MiniAppCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCodeResp) ProtoMessage() {}

func (x *MiniAppCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCodeResp.ProtoReflect.Descriptor instead.
func (*MiniAppCodeResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{41}
}

func (x *MiniAppCodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MiniAppCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MiniAppCodeResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *MiniAppCodeResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MiniAppCodeResp) GetData() *MiniAppCodeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MiniAppCodeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId     string `protobuf:"bytes,1,opt,name=openId,proto3" json:"openId,omitempty"`
	SessionKey string `protobuf:"bytes,2,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	UnionId    string `protobuf:"bytes,3,opt,name=unionId,proto3" json:"unionId,omitempty"`
	ErrCode    int32  `protobuf:"varint,4,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg     string `protobuf:"bytes,5,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *MiniAppCodeRespData) Reset() {
	*x = MiniAppCodeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCodeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCodeRespData) ProtoMessage() {}

func (x *MiniAppCodeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCodeRespData.ProtoReflect.Descriptor instead.
func (*MiniAppCodeRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{42}
}

func (x *MiniAppCodeRespData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *MiniAppCodeRespData) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *MiniAppCodeRespData) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *MiniAppCodeRespData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MiniAppCodeRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MiniAppCode2PhoneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *MiniAppCode2PhoneRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MiniAppCode2PhoneResp) Reset() {
	*x = MiniAppCode2PhoneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCode2PhoneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCode2PhoneResp) ProtoMessage() {}

func (x *MiniAppCode2PhoneResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCode2PhoneResp.ProtoReflect.Descriptor instead.
func (*MiniAppCode2PhoneResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{43}
}

func (x *MiniAppCode2PhoneResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MiniAppCode2PhoneResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MiniAppCode2PhoneResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *MiniAppCode2PhoneResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MiniAppCode2PhoneResp) GetData() *MiniAppCode2PhoneRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MiniAppCode2PhoneRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int32      `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg    string     `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	PhoneInfo *PhoneInfo `protobuf:"bytes,3,opt,name=phoneInfo,proto3" json:"phoneInfo,omitempty"`
}

func (x *MiniAppCode2PhoneRespData) Reset() {
	*x = MiniAppCode2PhoneRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniAppCode2PhoneRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniAppCode2PhoneRespData) ProtoMessage() {}

func (x *MiniAppCode2PhoneRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniAppCode2PhoneRespData.ProtoReflect.Descriptor instead.
func (*MiniAppCode2PhoneRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{44}
}

func (x *MiniAppCode2PhoneRespData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MiniAppCode2PhoneRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *MiniAppCode2PhoneRespData) GetPhoneInfo() *PhoneInfo {
	if x != nil {
		return x.PhoneInfo
	}
	return nil
}

type PhoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     string     `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	PurePhoneNumber string     `protobuf:"bytes,2,opt,name=purePhoneNumber,proto3" json:"purePhoneNumber,omitempty"`
	CountryCode     string     `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Watermark       *Watermark `protobuf:"bytes,4,opt,name=watermark,proto3" json:"watermark,omitempty"`
}

func (x *PhoneInfo) Reset() {
	*x = PhoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneInfo) ProtoMessage() {}

func (x *PhoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneInfo.ProtoReflect.Descriptor instead.
func (*PhoneInfo) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{45}
}

func (x *PhoneInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *PhoneInfo) GetPurePhoneNumber() string {
	if x != nil {
		return x.PurePhoneNumber
	}
	return ""
}

func (x *PhoneInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *PhoneInfo) GetWatermark() *Watermark {
	if x != nil {
		return x.Watermark
	}
	return nil
}

type Watermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Appid     string `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
}

func (x *Watermark) Reset() {
	*x = Watermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Watermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Watermark) ProtoMessage() {}

func (x *Watermark) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Watermark.ProtoReflect.Descriptor instead.
func (*Watermark) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{46}
}

func (x *Watermark) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Watermark) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

type UserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *UserInfoRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserInfoResp) Reset() {
	*x = UserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResp) ProtoMessage() {}

func (x *UserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResp.ProtoReflect.Descriptor instead.
func (*UserInfoResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{47}
}

func (x *UserInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserInfoResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *UserInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UserInfoResp) GetData() *UserInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Openid     string   `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64    `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,8,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,9,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,10,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode    int32    `protobuf:"varint,11,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg     string   `protobuf:"bytes,12,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *UserInfoRespData) Reset() {
	*x = UserInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRespData) ProtoMessage() {}

func (x *UserInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRespData.ProtoReflect.Descriptor instead.
func (*UserInfoRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{48}
}

func (x *UserInfoRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserInfoRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UserInfoRespData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfoRespData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfoRespData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfoRespData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfoRespData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfoRespData) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *UserInfoRespData) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *UserInfoRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *UserInfoRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *UserInfoRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type RefreshResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *RefreshRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RefreshResp) Reset() {
	*x = RefreshResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshResp) ProtoMessage() {}

func (x *RefreshResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshResp.ProtoReflect.Descriptor instead.
func (*RefreshResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{49}
}

func (x *RefreshResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefreshResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RefreshResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *RefreshResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RefreshResp) GetData() *RefreshRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RefreshRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn    int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Openid       string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Errcode      int32  `protobuf:"varint,6,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg       string `protobuf:"bytes,7,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *RefreshRespData) Reset() {
	*x = RefreshRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRespData) ProtoMessage() {}

func (x *RefreshRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRespData.ProtoReflect.Descriptor instead.
func (*RefreshRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{50}
}

func (x *RefreshRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *RefreshRespData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *RefreshRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *RefreshRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *RefreshRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WebGetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                  `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                  `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WebGetUserInfoRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WebGetUserInfoResp) Reset() {
	*x = WebGetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebGetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebGetUserInfoResp) ProtoMessage() {}

func (x *WebGetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebGetUserInfoResp.ProtoReflect.Descriptor instead.
func (*WebGetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{51}
}

func (x *WebGetUserInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WebGetUserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WebGetUserInfoResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WebGetUserInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WebGetUserInfoResp) GetData() *WebGetUserInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebGetUserInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string   `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,7,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,8,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,9,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode    int32    `protobuf:"varint,10,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg     string   `protobuf:"bytes,11,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *WebGetUserInfoRespData) Reset() {
	*x = WebGetUserInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebGetUserInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebGetUserInfoRespData) ProtoMessage() {}

func (x *WebGetUserInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebGetUserInfoRespData.ProtoReflect.Descriptor instead.
func (*WebGetUserInfoRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{52}
}

func (x *WebGetUserInfoRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WebGetUserInfoRespData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WebGetUserInfoRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WebGetUserInfoRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WebGetUserInfoRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type OaAccessTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *OaAccessTokenRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OaAccessTokenResp) Reset() {
	*x = OaAccessTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaAccessTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaAccessTokenResp) ProtoMessage() {}

func (x *OaAccessTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaAccessTokenResp.ProtoReflect.Descriptor instead.
func (*OaAccessTokenResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{53}
}

func (x *OaAccessTokenResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OaAccessTokenResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OaAccessTokenResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *OaAccessTokenResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OaAccessTokenResp) GetData() *OaAccessTokenRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OaAccessTokenRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
	Errcode     int32  `protobuf:"varint,3,opt,name=Errcode,proto3" json:"Errcode,omitempty"`
	Errmsg      string `protobuf:"bytes,4,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
}

func (x *OaAccessTokenRespData) Reset() {
	*x = OaAccessTokenRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaAccessTokenRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaAccessTokenRespData) ProtoMessage() {}

func (x *OaAccessTokenRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaAccessTokenRespData.ProtoReflect.Descriptor instead.
func (*OaAccessTokenRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{54}
}

func (x *OaAccessTokenRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OaAccessTokenRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *OaAccessTokenRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *OaAccessTokenRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type OaJsApiTicketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *OaJsApiTicketRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OaJsApiTicketResp) Reset() {
	*x = OaJsApiTicketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaJsApiTicketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaJsApiTicketResp) ProtoMessage() {}

func (x *OaJsApiTicketResp) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaJsApiTicketResp.ProtoReflect.Descriptor instead.
func (*OaJsApiTicketResp) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{55}
}

func (x *OaJsApiTicketResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OaJsApiTicketResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OaJsApiTicketResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *OaJsApiTicketResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OaJsApiTicketResp) GetData() *OaJsApiTicketRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OaJsApiTicketRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket    string `protobuf:"bytes,1,opt,name=Ticket,proto3" json:"Ticket,omitempty"`
	ExpiresIn int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
	Errcode   int32  `protobuf:"varint,3,opt,name=Errcode,proto3" json:"Errcode,omitempty"`
	Errmsg    string `protobuf:"bytes,4,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
}

func (x *OaJsApiTicketRespData) Reset() {
	*x = OaJsApiTicketRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wechat_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaJsApiTicketRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaJsApiTicketRespData) ProtoMessage() {}

func (x *OaJsApiTicketRespData) ProtoReflect() protoreflect.Message {
	mi := &file_wechat_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaJsApiTicketRespData.ProtoReflect.Descriptor instead.
func (*OaJsApiTicketRespData) Descriptor() ([]byte, []int) {
	return file_wechat_proto_rawDescGZIP(), []int{56}
}

func (x *OaJsApiTicketRespData) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *OaJsApiTicketRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *OaJsApiTicketRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *OaJsApiTicketRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

var File_wechat_proto protoreflect.FileDescriptor

var file_wechat_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x22, 0x71, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x57, 0x65,
	0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x07,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6a, 0x0a,
	0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5f, 0x0a,
	0x11, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1c,
	0x0a, 0x08, 0x4f, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x54, 0x0a, 0x20,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x39, 0x0a, 0x1f, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41,
	0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x50, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0xdb, 0x01,
	0x0a, 0x2b, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x20,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0b,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a, 0x23, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53,
	0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x23, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70,
	0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x49,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x24, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x90, 0x05, 0x0a, 0x1a, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x63, 0x68, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x61, 0x70, 0x69, 0x61, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x70, 0x69, 0x61, 0x6f, 0x12, 0x40,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a,
	0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3d, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70,
	0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x50, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x40, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70,
	0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0a,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22,
	0x5e, 0x0a, 0x14, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22,
	0xc2, 0x02, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x22, 0xa4, 0x01, 0x0a, 0x1b, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x53, 0x0a, 0x1f, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x80, 0x02, 0x0a, 0x20, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58,
	0x0a, 0x24, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xee, 0x02, 0x0a, 0x20, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xeb, 0x01, 0x0a, 0x0b, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xef, 0x03, 0x0a, 0x1a, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xa6, 0x01, 0x0a,
	0x15, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x45, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xa6, 0x01,
	0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x1f, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x1e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0xae,
	0x04, 0x0a, 0x19, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x29,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22,
	0xb2, 0x01, 0x0a, 0x1b, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x1f, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a,
	0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x53, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57,
	0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x17,
	0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x69, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73,
	0x67, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x99,
	0x01, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x32,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x19, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x2f, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75,
	0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2f, 0x0a, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x61, 0x74, 0x65,
	0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x3f, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd8,
	0x01, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x57, 0x65,
	0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb2, 0x02, 0x0a,
	0x16, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69,
	0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61,
	0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73,
	0x67, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45,
	0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x9e,
	0x01, 0x0a, 0x11, 0x4f, 0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x7f, 0x0a, 0x15, 0x4f, 0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x32, 0xde, 0x07, 0x0a, 0x10, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x70, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x43, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x0f, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x17, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x16, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x55, 0x0a, 0x16, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41,
	0x50, 0x49, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x17, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x11, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x16, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x57, 0x65, 0x62,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x12, 0x1a, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x1a, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x2e, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x4f, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x1a, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x61,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x4f, 0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wechat_proto_rawDescOnce sync.Once
	file_wechat_proto_rawDescData = file_wechat_proto_rawDesc
)

func file_wechat_proto_rawDescGZIP() []byte {
	file_wechat_proto_rawDescOnce.Do(func() {
		file_wechat_proto_rawDescData = protoimpl.X.CompressGZIP(file_wechat_proto_rawDescData)
	})
	return file_wechat_proto_rawDescData
}

var file_wechat_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_wechat_proto_goTypes = []interface{}{
	(*WebRedirectReq)(nil),                              // 0: wechat.WebRedirectReq
	(*WebAutoRedirectReq)(nil),                          // 1: wechat.WebAutoRedirectReq
	(*CodeReq)(nil),                                     // 2: wechat.CodeReq
	(*TokenReq)(nil),                                    // 3: wechat.TokenReq
	(*RefreshReq)(nil),                                  // 4: wechat.RefreshReq
	(*WebGetUserInfoReq)(nil),                           // 5: wechat.WebGetUserInfoReq
	(*OaKeyReq)(nil),                                    // 6: wechat.OaKeyReq
	(*MiniAppJSAPICreateOrderReqAmount)(nil),            // 7: wechat.MiniAppJSAPICreateOrderReqAmount
	(*MiniAppJSAPICreateOrderReqPayer)(nil),             // 8: wechat.MiniAppJSAPICreateOrderReqPayer
	(*MiniAppJSAPICreateOrderReqDetailGoodsDetail)(nil), // 9: wechat.MiniAppJSAPICreateOrderReqDetailGoodsDetail
	(*MiniAppJSAPICreateOrderReqDetail)(nil),            // 10: wechat.MiniAppJSAPICreateOrderReqDetail
	(*MiniAppJSAPICreateOrderReqStoreInfo)(nil),         // 11: wechat.MiniAppJSAPICreateOrderReqStoreInfo
	(*MiniAppJSAPICreateOrderReqSceneInfo)(nil),         // 12: wechat.MiniAppJSAPICreateOrderReqSceneInfo
	(*MiniAppJSAPICreateOrderReqSettleInfo)(nil),        // 13: wechat.MiniAppJSAPICreateOrderReqSettleInfo
	(*MiniAppJSAPICreateOrderReq)(nil),                  // 14: wechat.MiniAppJSAPICreateOrderReq
	(*MiniAppQueryOrderReq)(nil),                        // 15: wechat.MiniAppQueryOrderReq
	(*MiniAppCloseOrderReq)(nil),                        // 16: wechat.MiniAppCloseOrderReq
	(*MiniAppRefundOrderReq)(nil),                       // 17: wechat.MiniAppRefundOrderReq
	(*MiniAppRefundOrderReqAmount)(nil),                 // 18: wechat.MiniAppRefundOrderReqAmount
	(*MiniAppRefundOrderReqAmountFrom)(nil),             // 19: wechat.MiniAppRefundOrderReqAmountFrom
	(*MiniAppRefundOrderReqGoodsDetail)(nil),            // 20: wechat.MiniAppRefundOrderReqGoodsDetail
	(*MiniAppRefundOrderResp)(nil),                      // 21: wechat.MiniAppRefundOrderResp
	(*MiniAppRefundOrderRespDataAmountFrom)(nil),        // 22: wechat.MiniAppRefundOrderRespDataAmountFrom
	(*MiniAppRefundOrderRespDataAmount)(nil),            // 23: wechat.MiniAppRefundOrderRespDataAmount
	(*GoodsDetail)(nil),                                 // 24: wechat.GoodsDetail
	(*PromotionDetail)(nil),                             // 25: wechat.PromotionDetail
	(*MiniAppRefundOrderRespData)(nil),                  // 26: wechat.MiniAppRefundOrderRespData
	(*MiniAppCloseOrderResp)(nil),                       // 27: wechat.MiniAppCloseOrderResp
	(*MiniAppCloseOrderRespData)(nil),                   // 28: wechat.MiniAppCloseOrderRespData
	(*MiniAppQueryOrderResp)(nil),                       // 29: wechat.MiniAppQueryOrderResp
	(*MiniAppQueryOrderRespDataAmount)(nil),             // 30: wechat.MiniAppQueryOrderRespDataAmount
	(*MiniAppQueryOrderRespDataPayer)(nil),              // 31: wechat.MiniAppQueryOrderRespDataPayer
	(*MiniAppQueryOrderRespData)(nil),                   // 32: wechat.MiniAppQueryOrderRespData
	(*MiniAppJSAPICreateOrderResp)(nil),                 // 33: wechat.MiniAppJSAPICreateOrderResp
	(*MiniAppJSAPICreateOrderRespData)(nil),             // 34: wechat.MiniAppJSAPICreateOrderRespData
	(*WebRedirectResp)(nil),                             // 35: wechat.WebRedirectResp
	(*WebRedirectRespData)(nil),                         // 36: wechat.WebRedirectRespData
	(*WebAutoRedirectResp)(nil),                         // 37: wechat.WebAutoRedirectResp
	(*WebAutoRedirectRespData)(nil),                     // 38: wechat.WebAutoRedirectRespData
	(*CodeResp)(nil),                                    // 39: wechat.CodeResp
	(*CodeRespData)(nil),                                // 40: wechat.CodeRespData
	(*MiniAppCodeResp)(nil),                             // 41: wechat.MiniAppCodeResp
	(*MiniAppCodeRespData)(nil),                         // 42: wechat.MiniAppCodeRespData
	(*MiniAppCode2PhoneResp)(nil),                       // 43: wechat.MiniAppCode2PhoneResp
	(*MiniAppCode2PhoneRespData)(nil),                   // 44: wechat.MiniAppCode2PhoneRespData
	(*PhoneInfo)(nil),                                   // 45: wechat.PhoneInfo
	(*Watermark)(nil),                                   // 46: wechat.Watermark
	(*UserInfoResp)(nil),                                // 47: wechat.UserInfoResp
	(*UserInfoRespData)(nil),                            // 48: wechat.UserInfoRespData
	(*RefreshResp)(nil),                                 // 49: wechat.RefreshResp
	(*RefreshRespData)(nil),                             // 50: wechat.RefreshRespData
	(*WebGetUserInfoResp)(nil),                          // 51: wechat.WebGetUserInfoResp
	(*WebGetUserInfoRespData)(nil),                      // 52: wechat.WebGetUserInfoRespData
	(*OaAccessTokenResp)(nil),                           // 53: wechat.OaAccessTokenResp
	(*OaAccessTokenRespData)(nil),                       // 54: wechat.OaAccessTokenRespData
	(*OaJsApiTicketResp)(nil),                           // 55: wechat.OaJsApiTicketResp
	(*OaJsApiTicketRespData)(nil),                       // 56: wechat.OaJsApiTicketRespData
}
var file_wechat_proto_depIdxs = []int32{
	9,  // 0: wechat.MiniAppJSAPICreateOrderReqDetail.goodsDetail:type_name -> wechat.MiniAppJSAPICreateOrderReqDetailGoodsDetail
	11, // 1: wechat.MiniAppJSAPICreateOrderReqSceneInfo.storeInfo:type_name -> wechat.MiniAppJSAPICreateOrderReqStoreInfo
	7,  // 2: wechat.MiniAppJSAPICreateOrderReq.amount:type_name -> wechat.MiniAppJSAPICreateOrderReqAmount
	8,  // 3: wechat.MiniAppJSAPICreateOrderReq.payer:type_name -> wechat.MiniAppJSAPICreateOrderReqPayer
	10, // 4: wechat.MiniAppJSAPICreateOrderReq.detail:type_name -> wechat.MiniAppJSAPICreateOrderReqDetail
	12, // 5: wechat.MiniAppJSAPICreateOrderReq.sceneInfo:type_name -> wechat.MiniAppJSAPICreateOrderReqSceneInfo
	13, // 6: wechat.MiniAppJSAPICreateOrderReq.settleInfo:type_name -> wechat.MiniAppJSAPICreateOrderReqSettleInfo
	18, // 7: wechat.MiniAppRefundOrderReq.amount:type_name -> wechat.MiniAppRefundOrderReqAmount
	20, // 8: wechat.MiniAppRefundOrderReq.goodsDetail:type_name -> wechat.MiniAppRefundOrderReqGoodsDetail
	19, // 9: wechat.MiniAppRefundOrderReqAmount.from:type_name -> wechat.MiniAppRefundOrderReqAmountFrom
	26, // 10: wechat.MiniAppRefundOrderResp.data:type_name -> wechat.MiniAppRefundOrderRespData
	22, // 11: wechat.MiniAppRefundOrderRespDataAmount.from:type_name -> wechat.MiniAppRefundOrderRespDataAmountFrom
	24, // 12: wechat.PromotionDetail.goodsDetail:type_name -> wechat.GoodsDetail
	23, // 13: wechat.MiniAppRefundOrderRespData.amount:type_name -> wechat.MiniAppRefundOrderRespDataAmount
	25, // 14: wechat.MiniAppRefundOrderRespData.promotionDetail:type_name -> wechat.PromotionDetail
	28, // 15: wechat.MiniAppCloseOrderResp.data:type_name -> wechat.MiniAppCloseOrderRespData
	32, // 16: wechat.MiniAppQueryOrderResp.data:type_name -> wechat.MiniAppQueryOrderRespData
	30, // 17: wechat.MiniAppQueryOrderRespData.amount:type_name -> wechat.MiniAppQueryOrderRespDataAmount
	31, // 18: wechat.MiniAppQueryOrderRespData.payer:type_name -> wechat.MiniAppQueryOrderRespDataPayer
	34, // 19: wechat.MiniAppJSAPICreateOrderResp.data:type_name -> wechat.MiniAppJSAPICreateOrderRespData
	36, // 20: wechat.WebRedirectResp.data:type_name -> wechat.WebRedirectRespData
	38, // 21: wechat.WebAutoRedirectResp.data:type_name -> wechat.WebAutoRedirectRespData
	40, // 22: wechat.CodeResp.data:type_name -> wechat.CodeRespData
	42, // 23: wechat.MiniAppCodeResp.data:type_name -> wechat.MiniAppCodeRespData
	44, // 24: wechat.MiniAppCode2PhoneResp.data:type_name -> wechat.MiniAppCode2PhoneRespData
	45, // 25: wechat.MiniAppCode2PhoneRespData.phoneInfo:type_name -> wechat.PhoneInfo
	46, // 26: wechat.PhoneInfo.watermark:type_name -> wechat.Watermark
	48, // 27: wechat.UserInfoResp.data:type_name -> wechat.UserInfoRespData
	50, // 28: wechat.RefreshResp.data:type_name -> wechat.RefreshRespData
	52, // 29: wechat.WebGetUserInfoResp.data:type_name -> wechat.WebGetUserInfoRespData
	54, // 30: wechat.OaAccessTokenResp.data:type_name -> wechat.OaAccessTokenRespData
	56, // 31: wechat.OaJsApiTicketResp.data:type_name -> wechat.OaJsApiTicketRespData
	2,  // 32: wechat.WechatRpcService.Code2Token:input_type -> wechat.CodeReq
	4,  // 33: wechat.WechatRpcService.RefreshUserToken:input_type -> wechat.RefreshReq
	3,  // 34: wechat.WechatRpcService.UserToken2UserInfo:input_type -> wechat.TokenReq
	2,  // 35: wechat.WechatRpcService.MiniAppCode2Session:input_type -> wechat.CodeReq
	2,  // 36: wechat.WechatRpcService.MiniAppCode2Phone:input_type -> wechat.CodeReq
	14, // 37: wechat.WechatRpcService.MiniAppJSAPICreateOrder:input_type -> wechat.MiniAppJSAPICreateOrderReq
	15, // 38: wechat.WechatRpcService.MiniAppJSAPIQueryOrder:input_type -> wechat.MiniAppQueryOrderReq
	16, // 39: wechat.WechatRpcService.MiniAppJSAPICloseOrder:input_type -> wechat.MiniAppCloseOrderReq
	17, // 40: wechat.WechatRpcService.MiniAppJSAPIRefundOrder:input_type -> wechat.MiniAppRefundOrderReq
	0,  // 41: wechat.WechatRpcService.WebRedirectWechat:input_type -> wechat.WebRedirectReq
	1,  // 42: wechat.WechatRpcService.WebAutoRedirectWechat:input_type -> wechat.WebAutoRedirectReq
	6,  // 43: wechat.WechatRpcService.OfficialAccountAccessToken:input_type -> wechat.OaKeyReq
	6,  // 44: wechat.WechatRpcService.OfficialAccountJsApiTicket:input_type -> wechat.OaKeyReq
	39, // 45: wechat.WechatRpcService.Code2Token:output_type -> wechat.CodeResp
	49, // 46: wechat.WechatRpcService.RefreshUserToken:output_type -> wechat.RefreshResp
	47, // 47: wechat.WechatRpcService.UserToken2UserInfo:output_type -> wechat.UserInfoResp
	41, // 48: wechat.WechatRpcService.MiniAppCode2Session:output_type -> wechat.MiniAppCodeResp
	43, // 49: wechat.WechatRpcService.MiniAppCode2Phone:output_type -> wechat.MiniAppCode2PhoneResp
	33, // 50: wechat.WechatRpcService.MiniAppJSAPICreateOrder:output_type -> wechat.MiniAppJSAPICreateOrderResp
	29, // 51: wechat.WechatRpcService.MiniAppJSAPIQueryOrder:output_type -> wechat.MiniAppQueryOrderResp
	27, // 52: wechat.WechatRpcService.MiniAppJSAPICloseOrder:output_type -> wechat.MiniAppCloseOrderResp
	21, // 53: wechat.WechatRpcService.MiniAppJSAPIRefundOrder:output_type -> wechat.MiniAppRefundOrderResp
	35, // 54: wechat.WechatRpcService.WebRedirectWechat:output_type -> wechat.WebRedirectResp
	37, // 55: wechat.WechatRpcService.WebAutoRedirectWechat:output_type -> wechat.WebAutoRedirectResp
	53, // 56: wechat.WechatRpcService.OfficialAccountAccessToken:output_type -> wechat.OaAccessTokenResp
	55, // 57: wechat.WechatRpcService.OfficialAccountJsApiTicket:output_type -> wechat.OaJsApiTicketResp
	45, // [45:58] is the sub-list for method output_type
	32, // [32:45] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_wechat_proto_init() }
func file_wechat_proto_init() {
	if File_wechat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wechat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAutoRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebGetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqPayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqDetailGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqSceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReqSettleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppQueryOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCloseOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderReqAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderReqAmountFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderReqGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderRespDataAmountFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderRespDataAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppRefundOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCloseOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCloseOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppQueryOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppQueryOrderRespDataAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppQueryOrderRespDataPayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppQueryOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppJSAPICreateOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebRedirectRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAutoRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAutoRedirectRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCodeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCode2PhoneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniAppCode2PhoneRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Watermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebGetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebGetUserInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaAccessTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaAccessTokenRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaJsApiTicketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wechat_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaJsApiTicketRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wechat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wechat_proto_goTypes,
		DependencyIndexes: file_wechat_proto_depIdxs,
		MessageInfos:      file_wechat_proto_msgTypes,
	}.Build()
	File_wechat_proto = out.File
	file_wechat_proto_rawDesc = nil
	file_wechat_proto_goTypes = nil
	file_wechat_proto_depIdxs = nil
}
