// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: thirdparty.proto

package thirdparty

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// note: 微信专区
type WechatWebRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Scope       string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WechatWebRedirectReq) Reset() {
	*x = WechatWebRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebRedirectReq) ProtoMessage() {}

func (x *WechatWebRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebRedirectReq.ProtoReflect.Descriptor instead.
func (*WechatWebRedirectReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{0}
}

func (x *WechatWebRedirectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatWebRedirectReq) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatWebRedirectReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WechatWebRedirectReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WechatWebAutoRedirectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Scope       string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	TempUrl     string `protobuf:"bytes,5,opt,name=temp_url,json=tempUrl,proto3" json:"temp_url,omitempty"`
}

func (x *WechatWebAutoRedirectReq) Reset() {
	*x = WechatWebAutoRedirectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebAutoRedirectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebAutoRedirectReq) ProtoMessage() {}

func (x *WechatWebAutoRedirectReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebAutoRedirectReq.ProtoReflect.Descriptor instead.
func (*WechatWebAutoRedirectReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{1}
}

func (x *WechatWebAutoRedirectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatWebAutoRedirectReq) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatWebAutoRedirectReq) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *WechatWebAutoRedirectReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WechatWebAutoRedirectReq) GetTempUrl() string {
	if x != nil {
		return x.TempUrl
	}
	return ""
}

type WechatCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *WechatCodeReq) Reset() {
	*x = WechatCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatCodeReq) ProtoMessage() {}

func (x *WechatCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatCodeReq.ProtoReflect.Descriptor instead.
func (*WechatCodeReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{2}
}

func (x *WechatCodeReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WechatTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	AccessToken string `protobuf:"bytes,2,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	Openid      string `protobuf:"bytes,3,opt,name=Openid,proto3" json:"Openid,omitempty"`
	Lang        string `protobuf:"bytes,4,opt,name=Lang,proto3" json:"Lang,omitempty"`
}

func (x *WechatTokenReq) Reset() {
	*x = WechatTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatTokenReq) ProtoMessage() {}

func (x *WechatTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatTokenReq.ProtoReflect.Descriptor instead.
func (*WechatTokenReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{3}
}

func (x *WechatTokenReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *WechatTokenReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatTokenReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type WechatRefreshReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
}

func (x *WechatRefreshReq) Reset() {
	*x = WechatRefreshReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatRefreshReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatRefreshReq) ProtoMessage() {}

func (x *WechatRefreshReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatRefreshReq.ProtoReflect.Descriptor instead.
func (*WechatRefreshReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{4}
}

func (x *WechatRefreshReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatRefreshReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type WechatWebGetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Openid      string `protobuf:"bytes,2,opt,name=Openid,proto3" json:"Openid,omitempty"`
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
}

func (x *WechatWebGetUserInfoReq) Reset() {
	*x = WechatWebGetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebGetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebGetUserInfoReq) ProtoMessage() {}

func (x *WechatWebGetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebGetUserInfoReq.ProtoReflect.Descriptor instead.
func (*WechatWebGetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{5}
}

func (x *WechatWebGetUserInfoReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatWebGetUserInfoReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatWebGetUserInfoReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type WechatOaKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *WechatOaKeyReq) Reset() {
	*x = WechatOaKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOaKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOaKeyReq) ProtoMessage() {}

func (x *WechatOaKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOaKeyReq.ProtoReflect.Descriptor instead.
func (*WechatOaKeyReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{6}
}

func (x *WechatOaKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WechatMiniAppJSAPICreateOrderReqAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqAmount) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqAmount) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqAmount) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqAmount.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqAmount) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{7}
}

func (x *WechatMiniAppJSAPICreateOrderReqAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WechatMiniAppJSAPICreateOrderReqAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type WechatMiniAppJSAPICreateOrderReqPayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqPayer) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqPayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqPayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqPayer) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqPayer) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqPayer.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqPayer) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{8}
}

func (x *WechatMiniAppJSAPICreateOrderReqPayer) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantGoodsId  string `protobuf:"bytes,1,opt,name=merchantGoodsId,proto3" json:"merchantGoodsId,omitempty"`
	WechatpayGoodsId string `protobuf:"bytes,2,opt,name=wechatpayGoodsId,proto3" json:"wechatpayGoodsId,omitempty"`
	GoodsName        string `protobuf:"bytes,3,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	Quantity         uint32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice        uint32 `protobuf:"varint,5,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{9}
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) GetMerchantGoodsId() string {
	if x != nil {
		return x.MerchantGoodsId
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) GetWechatpayGoodsId() string {
	if x != nil {
		return x.WechatpayGoodsId
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail) GetUnitPrice() uint32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

type WechatMiniAppJSAPICreateOrderReqDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CostPrice   int32                                                `protobuf:"varint,1,opt,name=costPrice,proto3" json:"costPrice,omitempty"`
	InvoiceId   string                                               `protobuf:"bytes,2,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	GoodsDetail []*WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail `protobuf:"bytes,3,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqDetail) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqDetail) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqDetail) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqDetail.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqDetail) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{10}
}

func (x *WechatMiniAppJSAPICreateOrderReqDetail) GetCostPrice() int32 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *WechatMiniAppJSAPICreateOrderReqDetail) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqDetail) GetGoodsDetail() []*WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type WechatMiniAppJSAPICreateOrderReqStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AreaCode string `protobuf:"bytes,3,opt,name=areaCode,proto3" json:"areaCode,omitempty"`
	Address  string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqStoreInfo) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqStoreInfo.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqStoreInfo) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{11}
}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqStoreInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type WechatMiniAppJSAPICreateOrderReqSceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayerClientIp string                                     `protobuf:"bytes,1,opt,name=payerClientIp,proto3" json:"payerClientIp,omitempty"`
	DeviceId      string                                     `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	StoreInfo     *WechatMiniAppJSAPICreateOrderReqStoreInfo `protobuf:"bytes,3,opt,name=storeInfo,proto3" json:"storeInfo,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqSceneInfo) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqSceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqSceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqSceneInfo) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqSceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqSceneInfo.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqSceneInfo) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{12}
}

func (x *WechatMiniAppJSAPICreateOrderReqSceneInfo) GetPayerClientIp() string {
	if x != nil {
		return x.PayerClientIp
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqSceneInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReqSceneInfo) GetStoreInfo() *WechatMiniAppJSAPICreateOrderReqStoreInfo {
	if x != nil {
		return x.StoreInfo
	}
	return nil
}

type WechatMiniAppJSAPICreateOrderReqSettleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfitSharing bool `protobuf:"varint,1,opt,name=ProfitSharing,proto3" json:"ProfitSharing,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReqSettleInfo) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReqSettleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReqSettleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReqSettleInfo) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReqSettleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReqSettleInfo.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReqSettleInfo) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{13}
}

func (x *WechatMiniAppJSAPICreateOrderReqSettleInfo) GetProfitSharing() bool {
	if x != nil {
		return x.ProfitSharing
	}
	return false
}

type WechatMiniAppJSAPICreateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string                                      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Appid         string                                      `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Mchid         string                                      `protobuf:"bytes,3,opt,name=mchid,proto3" json:"mchid,omitempty"`
	Description   string                                      `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	OutTradeNo    string                                      `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	TimeExpire    string                                      `protobuf:"bytes,6,opt,name=timeExpire,proto3" json:"timeExpire,omitempty"`
	Attach        string                                      `protobuf:"bytes,7,opt,name=attach,proto3" json:"attach,omitempty"`
	NotifyUrl     string                                      `protobuf:"bytes,8,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	GoodsTag      string                                      `protobuf:"bytes,9,opt,name=goodsTag,proto3" json:"goodsTag,omitempty"`
	SupportFapiao bool                                        `protobuf:"varint,10,opt,name=supportFapiao,proto3" json:"supportFapiao,omitempty"`
	Amount        *WechatMiniAppJSAPICreateOrderReqAmount     `protobuf:"bytes,11,opt,name=amount,proto3" json:"amount,omitempty"`
	Payer         *WechatMiniAppJSAPICreateOrderReqPayer      `protobuf:"bytes,12,opt,name=payer,proto3" json:"payer,omitempty"`
	Detail        *WechatMiniAppJSAPICreateOrderReqDetail     `protobuf:"bytes,13,opt,name=detail,proto3" json:"detail,omitempty"`
	SceneInfo     *WechatMiniAppJSAPICreateOrderReqSceneInfo  `protobuf:"bytes,14,opt,name=sceneInfo,proto3" json:"sceneInfo,omitempty"`
	SettleInfo    *WechatMiniAppJSAPICreateOrderReqSettleInfo `protobuf:"bytes,15,opt,name=settleInfo,proto3" json:"settleInfo,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderReq) Reset() {
	*x = WechatMiniAppJSAPICreateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderReq) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderReq.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{14}
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetTimeExpire() string {
	if x != nil {
		return x.TimeExpire
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetGoodsTag() string {
	if x != nil {
		return x.GoodsTag
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetSupportFapiao() bool {
	if x != nil {
		return x.SupportFapiao
	}
	return false
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetAmount() *WechatMiniAppJSAPICreateOrderReqAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetPayer() *WechatMiniAppJSAPICreateOrderReqPayer {
	if x != nil {
		return x.Payer
	}
	return nil
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetDetail() *WechatMiniAppJSAPICreateOrderReqDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetSceneInfo() *WechatMiniAppJSAPICreateOrderReqSceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

func (x *WechatMiniAppJSAPICreateOrderReq) GetSettleInfo() *WechatMiniAppJSAPICreateOrderReqSettleInfo {
	if x != nil {
		return x.SettleInfo
	}
	return nil
}

type WechatMiniAppQueryOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	QueryType     string `protobuf:"bytes,2,opt,name=queryType,proto3" json:"queryType,omitempty"`
	Mchid         string `protobuf:"bytes,3,opt,name=mchid,proto3" json:"mchid,omitempty"`
	TransactionId string `protobuf:"bytes,4,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutTradeNo    string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *WechatMiniAppQueryOrderReq) Reset() {
	*x = WechatMiniAppQueryOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderReq) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderReq.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{15}
}

func (x *WechatMiniAppQueryOrderReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatMiniAppQueryOrderReq) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *WechatMiniAppQueryOrderReq) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *WechatMiniAppQueryOrderReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WechatMiniAppQueryOrderReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type WechatMiniAppCloseOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Mchid      string `protobuf:"bytes,2,opt,name=mchid,proto3" json:"mchid,omitempty"`
	OutTradeNo string `protobuf:"bytes,3,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *WechatMiniAppCloseOrderReq) Reset() {
	*x = WechatMiniAppCloseOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCloseOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCloseOrderReq) ProtoMessage() {}

func (x *WechatMiniAppCloseOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCloseOrderReq.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCloseOrderReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{16}
}

func (x *WechatMiniAppCloseOrderReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatMiniAppCloseOrderReq) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *WechatMiniAppCloseOrderReq) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

type WechatMiniAppRefundOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string                                    `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutRefundNo   string                                    `protobuf:"bytes,2,opt,name=outRefundNo,proto3" json:"outRefundNo,omitempty"`
	Reason        string                                    `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	NotifyUrl     string                                    `protobuf:"bytes,4,opt,name=notifyUrl,proto3" json:"notifyUrl,omitempty"`
	FundsAccount  string                                    `protobuf:"bytes,5,opt,name=fundsAccount,proto3" json:"fundsAccount,omitempty"`
	Amount        *WechatMiniAppRefundOrderReqAmount        `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	GoodsDetail   []*WechatMiniAppRefundOrderReqGoodsDetail `protobuf:"bytes,7,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *WechatMiniAppRefundOrderReq) Reset() {
	*x = WechatMiniAppRefundOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderReq) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderReq.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{17}
}

func (x *WechatMiniAppRefundOrderReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReq) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReq) GetFundsAccount() string {
	if x != nil {
		return x.FundsAccount
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReq) GetAmount() *WechatMiniAppRefundOrderReqAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *WechatMiniAppRefundOrderReq) GetGoodsDetail() []*WechatMiniAppRefundOrderReqGoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type WechatMiniAppRefundOrderReqAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Refund   uint32                                   `protobuf:"varint,1,opt,name=refund,proto3" json:"refund,omitempty"`
	From     []*WechatMiniAppRefundOrderReqAmountFrom `protobuf:"bytes,2,rep,name=from,proto3" json:"from,omitempty"`
	Total    uint32                                   `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Currency string                                   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *WechatMiniAppRefundOrderReqAmount) Reset() {
	*x = WechatMiniAppRefundOrderReqAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderReqAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderReqAmount) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderReqAmount) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderReqAmount.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderReqAmount) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{18}
}

func (x *WechatMiniAppRefundOrderReqAmount) GetRefund() uint32 {
	if x != nil {
		return x.Refund
	}
	return 0
}

func (x *WechatMiniAppRefundOrderReqAmount) GetFrom() []*WechatMiniAppRefundOrderReqAmountFrom {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *WechatMiniAppRefundOrderReqAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WechatMiniAppRefundOrderReqAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type WechatMiniAppRefundOrderReqAmountFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amount  uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *WechatMiniAppRefundOrderReqAmountFrom) Reset() {
	*x = WechatMiniAppRefundOrderReqAmountFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderReqAmountFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderReqAmountFrom) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderReqAmountFrom) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderReqAmountFrom.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderReqAmountFrom) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{19}
}

func (x *WechatMiniAppRefundOrderReqAmountFrom) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReqAmountFrom) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type WechatMiniAppRefundOrderReqGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantGoodsId  string `protobuf:"bytes,1,opt,name=merchantGoodsId,proto3" json:"merchantGoodsId,omitempty"`
	WechatpayGoodsId string `protobuf:"bytes,2,opt,name=wechatpayGoodsId,proto3" json:"wechatpayGoodsId,omitempty"`
	GoodsName        string `protobuf:"bytes,3,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	UnitPrice        uint32 `protobuf:"varint,4,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	RefundAmount     uint32 `protobuf:"varint,5,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	RefundQuantity   uint32 `protobuf:"varint,6,opt,name=refundQuantity,proto3" json:"refundQuantity,omitempty"`
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) Reset() {
	*x = WechatMiniAppRefundOrderReqGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderReqGoodsDetail) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderReqGoodsDetail.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderReqGoodsDetail) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{20}
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) GetMerchantGoodsId() string {
	if x != nil {
		return x.MerchantGoodsId
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) GetWechatpayGoodsId() string {
	if x != nil {
		return x.WechatpayGoodsId
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) GetUnitPrice() uint32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *WechatMiniAppRefundOrderReqGoodsDetail) GetRefundQuantity() uint32 {
	if x != nil {
		return x.RefundQuantity
	}
	return 0
}

// 抖音专区
type DYMiniGameCode2TokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AnonymousCode string `protobuf:"bytes,3,opt,name=anonymousCode,proto3" json:"anonymousCode,omitempty"`
}

func (x *DYMiniGameCode2TokenReq) Reset() {
	*x = DYMiniGameCode2TokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DYMiniGameCode2TokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DYMiniGameCode2TokenReq) ProtoMessage() {}

func (x *DYMiniGameCode2TokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DYMiniGameCode2TokenReq.ProtoReflect.Descriptor instead.
func (*DYMiniGameCode2TokenReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{21}
}

func (x *DYMiniGameCode2TokenReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DYMiniGameCode2TokenReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DYMiniGameCode2TokenReq) GetAnonymousCode() string {
	if x != nil {
		return x.AnonymousCode
	}
	return ""
}

type DYMiniGameOAAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DYMiniGameOAAccessTokenReq) Reset() {
	*x = DYMiniGameOAAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DYMiniGameOAAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DYMiniGameOAAccessTokenReq) ProtoMessage() {}

func (x *DYMiniGameOAAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DYMiniGameOAAccessTokenReq.ProtoReflect.Descriptor instead.
func (*DYMiniGameOAAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{22}
}

func (x *DYMiniGameOAAccessTokenReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WechatGenShareConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Debug     bool     `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
	ShareLink string   `protobuf:"bytes,3,opt,name=shareLink,proto3" json:"shareLink,omitempty"`
	JsApiList []string `protobuf:"bytes,4,rep,name=JsApiList,proto3" json:"JsApiList,omitempty"`
}

func (x *WechatGenShareConfigReq) Reset() {
	*x = WechatGenShareConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatGenShareConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatGenShareConfigReq) ProtoMessage() {}

func (x *WechatGenShareConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatGenShareConfigReq.ProtoReflect.Descriptor instead.
func (*WechatGenShareConfigReq) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{23}
}

func (x *WechatGenShareConfigReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatGenShareConfigReq) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *WechatGenShareConfigReq) GetShareLink() string {
	if x != nil {
		return x.ShareLink
	}
	return ""
}

func (x *WechatGenShareConfigReq) GetJsApiList() []string {
	if x != nil {
		return x.JsApiList
	}
	return nil
}

// 微信专区
type WechatGenShareConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatGenShareConfigRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatGenShareConfigResp) Reset() {
	*x = WechatGenShareConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatGenShareConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatGenShareConfigResp) ProtoMessage() {}

func (x *WechatGenShareConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatGenShareConfigResp.ProtoReflect.Descriptor instead.
func (*WechatGenShareConfigResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{24}
}

func (x *WechatGenShareConfigResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatGenShareConfigResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatGenShareConfigResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatGenShareConfigResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatGenShareConfigResp) GetData() *WechatGenShareConfigRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatGenShareConfigRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Timestamp int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NonceStr  string   `protobuf:"bytes,3,opt,name=nonceStr,proto3" json:"nonceStr,omitempty"`
	Debug     bool     `protobuf:"varint,4,opt,name=debug,proto3" json:"debug,omitempty"`
	JsApiList []string `protobuf:"bytes,5,rep,name=jsApiList,proto3" json:"jsApiList,omitempty"`
	Signature string   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *WechatGenShareConfigRespData) Reset() {
	*x = WechatGenShareConfigRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatGenShareConfigRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatGenShareConfigRespData) ProtoMessage() {}

func (x *WechatGenShareConfigRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatGenShareConfigRespData.ProtoReflect.Descriptor instead.
func (*WechatGenShareConfigRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{25}
}

func (x *WechatGenShareConfigRespData) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatGenShareConfigRespData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WechatGenShareConfigRespData) GetNonceStr() string {
	if x != nil {
		return x.NonceStr
	}
	return ""
}

func (x *WechatGenShareConfigRespData) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *WechatGenShareConfigRespData) GetJsApiList() []string {
	if x != nil {
		return x.JsApiList
	}
	return nil
}

func (x *WechatGenShareConfigRespData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type WechatMiniAppRefundOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatMiniAppRefundOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatMiniAppRefundOrderResp) Reset() {
	*x = WechatMiniAppRefundOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderResp) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderResp.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{26}
}

func (x *WechatMiniAppRefundOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatMiniAppRefundOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatMiniAppRefundOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatMiniAppRefundOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatMiniAppRefundOrderResp) GetData() *WechatMiniAppRefundOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatMiniAppRefundOrderRespDataAmountFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Amount  uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *WechatMiniAppRefundOrderRespDataAmountFrom) Reset() {
	*x = WechatMiniAppRefundOrderRespDataAmountFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderRespDataAmountFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderRespDataAmountFrom) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderRespDataAmountFrom) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderRespDataAmountFrom.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderRespDataAmountFrom) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{27}
}

func (x *WechatMiniAppRefundOrderRespDataAmountFrom) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespDataAmountFrom) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type WechatMiniAppRefundOrderRespDataAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total            uint32                                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Refund           uint32                                        `protobuf:"varint,2,opt,name=refund,proto3" json:"refund,omitempty"`
	From             []*WechatMiniAppRefundOrderRespDataAmountFrom `protobuf:"bytes,3,rep,name=from,proto3" json:"from,omitempty"`
	PayerTotal       uint32                                        `protobuf:"varint,4,opt,name=payerTotal,proto3" json:"payerTotal,omitempty"`
	PayerRefund      uint32                                        `protobuf:"varint,5,opt,name=payerRefund,proto3" json:"payerRefund,omitempty"`
	SettlementRefund uint32                                        `protobuf:"varint,6,opt,name=settlementRefund,proto3" json:"settlementRefund,omitempty"`
	SettlementTotal  uint32                                        `protobuf:"varint,7,opt,name=settlementTotal,proto3" json:"settlementTotal,omitempty"`
	DiscountRefund   uint32                                        `protobuf:"varint,8,opt,name=discountRefund,proto3" json:"discountRefund,omitempty"`
	Currency         string                                        `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *WechatMiniAppRefundOrderRespDataAmount) Reset() {
	*x = WechatMiniAppRefundOrderRespDataAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderRespDataAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderRespDataAmount) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderRespDataAmount) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderRespDataAmount.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderRespDataAmount) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{28}
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetRefund() uint32 {
	if x != nil {
		return x.Refund
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetFrom() []*WechatMiniAppRefundOrderRespDataAmountFrom {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetPayerTotal() uint32 {
	if x != nil {
		return x.PayerTotal
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetPayerRefund() uint32 {
	if x != nil {
		return x.PayerRefund
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetSettlementRefund() uint32 {
	if x != nil {
		return x.SettlementRefund
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetSettlementTotal() uint32 {
	if x != nil {
		return x.SettlementTotal
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetDiscountRefund() uint32 {
	if x != nil {
		return x.DiscountRefund
	}
	return 0
}

func (x *WechatMiniAppRefundOrderRespDataAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type WechatGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantGoodsId  string `protobuf:"bytes,1,opt,name=merchantGoodsId,proto3" json:"merchantGoodsId,omitempty"`
	WechatpayGoodsId string `protobuf:"bytes,2,opt,name=wechatpayGoodsId,proto3" json:"wechatpayGoodsId,omitempty"`
	GoodsName        string `protobuf:"bytes,3,opt,name=goodsName,proto3" json:"goodsName,omitempty"`
	UnitPrice        uint32 `protobuf:"varint,4,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	RefundAmount     uint32 `protobuf:"varint,5,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	RefundQuantity   uint32 `protobuf:"varint,6,opt,name=refundQuantity,proto3" json:"refundQuantity,omitempty"`
}

func (x *WechatGoodsDetail) Reset() {
	*x = WechatGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatGoodsDetail) ProtoMessage() {}

func (x *WechatGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatGoodsDetail.ProtoReflect.Descriptor instead.
func (*WechatGoodsDetail) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{29}
}

func (x *WechatGoodsDetail) GetMerchantGoodsId() string {
	if x != nil {
		return x.MerchantGoodsId
	}
	return ""
}

func (x *WechatGoodsDetail) GetWechatpayGoodsId() string {
	if x != nil {
		return x.WechatpayGoodsId
	}
	return ""
}

func (x *WechatGoodsDetail) GetGoodsName() string {
	if x != nil {
		return x.GoodsName
	}
	return ""
}

func (x *WechatGoodsDetail) GetUnitPrice() uint32 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *WechatGoodsDetail) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *WechatGoodsDetail) GetRefundQuantity() uint32 {
	if x != nil {
		return x.RefundQuantity
	}
	return 0
}

type WechatPromotionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId  string               `protobuf:"bytes,1,opt,name=promotionId,proto3" json:"promotionId,omitempty"`
	Scope        string               `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Type         string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Amount       uint32               `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	RefundAmount uint32               `protobuf:"varint,5,opt,name=refundAmount,proto3" json:"refundAmount,omitempty"`
	GoodsDetail  []*WechatGoodsDetail `protobuf:"bytes,6,rep,name=goodsDetail,proto3" json:"goodsDetail,omitempty"`
}

func (x *WechatPromotionDetail) Reset() {
	*x = WechatPromotionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatPromotionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatPromotionDetail) ProtoMessage() {}

func (x *WechatPromotionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatPromotionDetail.ProtoReflect.Descriptor instead.
func (*WechatPromotionDetail) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{30}
}

func (x *WechatPromotionDetail) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *WechatPromotionDetail) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatPromotionDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WechatPromotionDetail) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WechatPromotionDetail) GetRefundAmount() uint32 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *WechatPromotionDetail) GetGoodsDetail() []*WechatGoodsDetail {
	if x != nil {
		return x.GoodsDetail
	}
	return nil
}

type WechatMiniAppRefundOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundId            string                                  `protobuf:"bytes,1,opt,name=refundId,proto3" json:"refundId,omitempty"`
	OutRefundNo         string                                  `protobuf:"bytes,2,opt,name=outRefundNo,proto3" json:"outRefundNo,omitempty"`
	TransactionId       string                                  `protobuf:"bytes,3,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	OutTradeNo          string                                  `protobuf:"bytes,4,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Channel             string                                  `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	UserReceivedAccount string                                  `protobuf:"bytes,6,opt,name=userReceivedAccount,proto3" json:"userReceivedAccount,omitempty"`
	SuccessTime         string                                  `protobuf:"bytes,7,opt,name=successTime,proto3" json:"successTime,omitempty"`
	CreateTime          string                                  `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Status              string                                  `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	FundsAccount        string                                  `protobuf:"bytes,10,opt,name=fundsAccount,proto3" json:"fundsAccount,omitempty"`
	Amount              *WechatMiniAppRefundOrderRespDataAmount `protobuf:"bytes,11,opt,name=amount,proto3" json:"amount,omitempty"`
	PromotionDetail     []*WechatPromotionDetail                `protobuf:"bytes,12,rep,name=promotionDetail,proto3" json:"promotionDetail,omitempty"`
}

func (x *WechatMiniAppRefundOrderRespData) Reset() {
	*x = WechatMiniAppRefundOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppRefundOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppRefundOrderRespData) ProtoMessage() {}

func (x *WechatMiniAppRefundOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppRefundOrderRespData.ProtoReflect.Descriptor instead.
func (*WechatMiniAppRefundOrderRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{31}
}

func (x *WechatMiniAppRefundOrderRespData) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetUserReceivedAccount() string {
	if x != nil {
		return x.UserReceivedAccount
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetFundsAccount() string {
	if x != nil {
		return x.FundsAccount
	}
	return ""
}

func (x *WechatMiniAppRefundOrderRespData) GetAmount() *WechatMiniAppRefundOrderRespDataAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *WechatMiniAppRefundOrderRespData) GetPromotionDetail() []*WechatPromotionDetail {
	if x != nil {
		return x.PromotionDetail
	}
	return nil
}

type WechatMiniAppCloseOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatMiniAppCloseOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatMiniAppCloseOrderResp) Reset() {
	*x = WechatMiniAppCloseOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCloseOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCloseOrderResp) ProtoMessage() {}

func (x *WechatMiniAppCloseOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCloseOrderResp.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCloseOrderResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{32}
}

func (x *WechatMiniAppCloseOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatMiniAppCloseOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatMiniAppCloseOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatMiniAppCloseOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatMiniAppCloseOrderResp) GetData() *WechatMiniAppCloseOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatMiniAppCloseOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutTradeNo string `protobuf:"bytes,1,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrEode    string `protobuf:"bytes,3,opt,name=errEode,proto3" json:"errEode,omitempty"`
	ErrMsg     string `protobuf:"bytes,4,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *WechatMiniAppCloseOrderRespData) Reset() {
	*x = WechatMiniAppCloseOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCloseOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCloseOrderRespData) ProtoMessage() {}

func (x *WechatMiniAppCloseOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCloseOrderRespData.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCloseOrderRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{33}
}

func (x *WechatMiniAppCloseOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WechatMiniAppCloseOrderRespData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WechatMiniAppCloseOrderRespData) GetErrEode() string {
	if x != nil {
		return x.ErrEode
	}
	return ""
}

func (x *WechatMiniAppCloseOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type WechatMiniAppQueryOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatMiniAppQueryOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatMiniAppQueryOrderResp) Reset() {
	*x = WechatMiniAppQueryOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderResp) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderResp.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{34}
}

func (x *WechatMiniAppQueryOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatMiniAppQueryOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatMiniAppQueryOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatMiniAppQueryOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatMiniAppQueryOrderResp) GetData() *WechatMiniAppQueryOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatMiniAppQueryOrderRespDataAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency      string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	PayerCurrency string `protobuf:"bytes,2,opt,name=payer_currency,json=payerCurrency,proto3" json:"payer_currency,omitempty"`
	PayerTotal    uint32 `protobuf:"varint,3,opt,name=payer_total,json=payerTotal,proto3" json:"payer_total,omitempty"`
	Total         uint32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespDataAmount) Reset() {
	*x = WechatMiniAppQueryOrderRespDataAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespDataAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespDataAmount) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespDataAmount) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespDataAmount.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespDataAmount) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{35}
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetPayerCurrency() string {
	if x != nil {
		return x.PayerCurrency
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetPayerTotal() uint32 {
	if x != nil {
		return x.PayerTotal
	}
	return 0
}

func (x *WechatMiniAppQueryOrderRespDataAmount) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type WechatMiniAppQueryOrderRespDataPayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespDataPayer) Reset() {
	*x = WechatMiniAppQueryOrderRespDataPayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespDataPayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespDataPayer) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespDataPayer) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespDataPayer.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespDataPayer) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{36}
}

func (x *WechatMiniAppQueryOrderRespDataPayer) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type WechatMiniAppQueryOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount          *WechatMiniAppQueryOrderRespDataAmount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Appid           string                                 `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	Attach          string                                 `protobuf:"bytes,3,opt,name=attach,proto3" json:"attach,omitempty"`
	BankType        string                                 `protobuf:"bytes,4,opt,name=bank_type,json=bankType,proto3" json:"bank_type,omitempty"`
	Mchid           string                                 `protobuf:"bytes,5,opt,name=mchid,proto3" json:"mchid,omitempty"`
	OutTradeNo      string                                 `protobuf:"bytes,6,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	Payer           *WechatMiniAppQueryOrderRespDataPayer  `protobuf:"bytes,7,opt,name=payer,proto3" json:"payer,omitempty"`
	PromotionDetail []string                               `protobuf:"bytes,8,rep,name=promotion_detail,json=promotionDetail,proto3" json:"promotion_detail,omitempty"`
	SuccessTime     string                                 `protobuf:"bytes,9,opt,name=success_time,json=successTime,proto3" json:"success_time,omitempty"`
	TradeState      string                                 `protobuf:"bytes,10,opt,name=trade_state,json=tradeState,proto3" json:"trade_state,omitempty"`
	TradeStateDesc  string                                 `protobuf:"bytes,11,opt,name=trade_state_desc,json=tradeStateDesc,proto3" json:"trade_state_desc,omitempty"`
	TradeType       string                                 `protobuf:"bytes,12,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	TransactionId   string                                 `protobuf:"bytes,13,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ErrEode         string                                 `protobuf:"bytes,14,opt,name=errEode,proto3" json:"errEode,omitempty"`
	ErrMsg          string                                 `protobuf:"bytes,15,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *WechatMiniAppQueryOrderRespData) Reset() {
	*x = WechatMiniAppQueryOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppQueryOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppQueryOrderRespData) ProtoMessage() {}

func (x *WechatMiniAppQueryOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppQueryOrderRespData.ProtoReflect.Descriptor instead.
func (*WechatMiniAppQueryOrderRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{37}
}

func (x *WechatMiniAppQueryOrderRespData) GetAmount() *WechatMiniAppQueryOrderRespDataAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *WechatMiniAppQueryOrderRespData) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetPayer() *WechatMiniAppQueryOrderRespDataPayer {
	if x != nil {
		return x.Payer
	}
	return nil
}

func (x *WechatMiniAppQueryOrderRespData) GetPromotionDetail() []string {
	if x != nil {
		return x.PromotionDetail
	}
	return nil
}

func (x *WechatMiniAppQueryOrderRespData) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetTradeState() string {
	if x != nil {
		return x.TradeState
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetTradeStateDesc() string {
	if x != nil {
		return x.TradeStateDesc
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetErrEode() string {
	if x != nil {
		return x.ErrEode
	}
	return ""
}

func (x *WechatMiniAppQueryOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type WechatMiniAppJSAPICreateOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatMiniAppJSAPICreateOrderRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderResp) Reset() {
	*x = WechatMiniAppJSAPICreateOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderResp) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderResp.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{38}
}

func (x *WechatMiniAppJSAPICreateOrderResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatMiniAppJSAPICreateOrderResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderResp) GetData() *WechatMiniAppJSAPICreateOrderRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatMiniAppJSAPICreateOrderRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepayId string `protobuf:"bytes,1,opt,name=prepayId,proto3" json:"prepayId,omitempty"`
	ErrEode  string `protobuf:"bytes,2,opt,name=errEode,proto3" json:"errEode,omitempty"`
	ErrMsg   string `protobuf:"bytes,3,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *WechatMiniAppJSAPICreateOrderRespData) Reset() {
	*x = WechatMiniAppJSAPICreateOrderRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppJSAPICreateOrderRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppJSAPICreateOrderRespData) ProtoMessage() {}

func (x *WechatMiniAppJSAPICreateOrderRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppJSAPICreateOrderRespData.ProtoReflect.Descriptor instead.
func (*WechatMiniAppJSAPICreateOrderRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{39}
}

func (x *WechatMiniAppJSAPICreateOrderRespData) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderRespData) GetErrEode() string {
	if x != nil {
		return x.ErrEode
	}
	return ""
}

func (x *WechatMiniAppJSAPICreateOrderRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type WechatWebRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatWebRedirectRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatWebRedirectResp) Reset() {
	*x = WechatWebRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebRedirectResp) ProtoMessage() {}

func (x *WechatWebRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebRedirectResp.ProtoReflect.Descriptor instead.
func (*WechatWebRedirectResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{40}
}

func (x *WechatWebRedirectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatWebRedirectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatWebRedirectResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatWebRedirectResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatWebRedirectResp) GetData() *WechatWebRedirectRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatWebRedirectRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	State string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *WechatWebRedirectRespData) Reset() {
	*x = WechatWebRedirectRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebRedirectRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebRedirectRespData) ProtoMessage() {}

func (x *WechatWebRedirectRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebRedirectRespData.ProtoReflect.Descriptor instead.
func (*WechatWebRedirectRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{41}
}

func (x *WechatWebRedirectRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatWebRedirectRespData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WechatWebRedirectRespData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type WechatWebAutoRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                         `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                         `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatWebAutoRedirectRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatWebAutoRedirectResp) Reset() {
	*x = WechatWebAutoRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebAutoRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebAutoRedirectResp) ProtoMessage() {}

func (x *WechatWebAutoRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebAutoRedirectResp.ProtoReflect.Descriptor instead.
func (*WechatWebAutoRedirectResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{42}
}

func (x *WechatWebAutoRedirectResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatWebAutoRedirectResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatWebAutoRedirectResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatWebAutoRedirectResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatWebAutoRedirectResp) GetData() *WechatWebAutoRedirectRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatWebAutoRedirectRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope       string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Url         string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	State       string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	RedirectUrl string `protobuf:"bytes,4,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *WechatWebAutoRedirectRespData) Reset() {
	*x = WechatWebAutoRedirectRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebAutoRedirectRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebAutoRedirectRespData) ProtoMessage() {}

func (x *WechatWebAutoRedirectRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebAutoRedirectRespData.ProtoReflect.Descriptor instead.
func (*WechatWebAutoRedirectRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{43}
}

func (x *WechatWebAutoRedirectRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatWebAutoRedirectRespData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WechatWebAutoRedirectRespData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WechatWebAutoRedirectRespData) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type WechatCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string              `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string              `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatCodeRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatCodeResp) Reset() {
	*x = WechatCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatCodeResp) ProtoMessage() {}

func (x *WechatCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatCodeResp.ProtoReflect.Descriptor instead.
func (*WechatCodeResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{44}
}

func (x *WechatCodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatCodeResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatCodeResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatCodeResp) GetData() *WechatCodeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatCodeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken    string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn      int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken   string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Openid         string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Scope          string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	IsSnapshotuser int32  `protobuf:"varint,6,opt,name=isSnapshotuser,proto3" json:"isSnapshotuser,omitempty"`
	Unionid        string `protobuf:"bytes,7,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode        int32  `protobuf:"varint,8,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg         string `protobuf:"bytes,9,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *WechatCodeRespData) Reset() {
	*x = WechatCodeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatCodeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatCodeRespData) ProtoMessage() {}

func (x *WechatCodeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatCodeRespData.ProtoReflect.Descriptor instead.
func (*WechatCodeRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{45}
}

func (x *WechatCodeRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *WechatCodeRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *WechatCodeRespData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *WechatCodeRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatCodeRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatCodeRespData) GetIsSnapshotuser() int32 {
	if x != nil {
		return x.IsSnapshotuser
	}
	return 0
}

func (x *WechatCodeRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WechatCodeRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WechatCodeRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WechatMiniAppCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatMiniAppCodeRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatMiniAppCodeResp) Reset() {
	*x = WechatMiniAppCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCodeResp) ProtoMessage() {}

func (x *WechatMiniAppCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCodeResp.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCodeResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{46}
}

func (x *WechatMiniAppCodeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatMiniAppCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatMiniAppCodeResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatMiniAppCodeResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatMiniAppCodeResp) GetData() *WechatMiniAppCodeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatMiniAppCodeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId     string `protobuf:"bytes,1,opt,name=openId,proto3" json:"openId,omitempty"`
	SessionKey string `protobuf:"bytes,2,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	UnionId    string `protobuf:"bytes,3,opt,name=unionId,proto3" json:"unionId,omitempty"`
	ErrCode    int32  `protobuf:"varint,4,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg     string `protobuf:"bytes,5,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *WechatMiniAppCodeRespData) Reset() {
	*x = WechatMiniAppCodeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCodeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCodeRespData) ProtoMessage() {}

func (x *WechatMiniAppCodeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCodeRespData.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCodeRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{47}
}

func (x *WechatMiniAppCodeRespData) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *WechatMiniAppCodeRespData) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *WechatMiniAppCodeRespData) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *WechatMiniAppCodeRespData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *WechatMiniAppCodeRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type WechatMiniAppCode2PhoneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatMiniAppCode2PhoneRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatMiniAppCode2PhoneResp) Reset() {
	*x = WechatMiniAppCode2PhoneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCode2PhoneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCode2PhoneResp) ProtoMessage() {}

func (x *WechatMiniAppCode2PhoneResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCode2PhoneResp.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCode2PhoneResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{48}
}

func (x *WechatMiniAppCode2PhoneResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatMiniAppCode2PhoneResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatMiniAppCode2PhoneResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatMiniAppCode2PhoneResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatMiniAppCode2PhoneResp) GetData() *WechatMiniAppCode2PhoneRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatMiniAppCode2PhoneRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode   int32            `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg    string           `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	PhoneInfo *WechatPhoneInfo `protobuf:"bytes,3,opt,name=phoneInfo,proto3" json:"phoneInfo,omitempty"`
}

func (x *WechatMiniAppCode2PhoneRespData) Reset() {
	*x = WechatMiniAppCode2PhoneRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniAppCode2PhoneRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniAppCode2PhoneRespData) ProtoMessage() {}

func (x *WechatMiniAppCode2PhoneRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniAppCode2PhoneRespData.ProtoReflect.Descriptor instead.
func (*WechatMiniAppCode2PhoneRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{49}
}

func (x *WechatMiniAppCode2PhoneRespData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *WechatMiniAppCode2PhoneRespData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *WechatMiniAppCode2PhoneRespData) GetPhoneInfo() *WechatPhoneInfo {
	if x != nil {
		return x.PhoneInfo
	}
	return nil
}

type WechatPhoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber     string           `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	PurePhoneNumber string           `protobuf:"bytes,2,opt,name=purePhoneNumber,proto3" json:"purePhoneNumber,omitempty"`
	CountryCode     string           `protobuf:"bytes,3,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Watermark       *WechatWatermark `protobuf:"bytes,4,opt,name=watermark,proto3" json:"watermark,omitempty"`
}

func (x *WechatPhoneInfo) Reset() {
	*x = WechatPhoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatPhoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatPhoneInfo) ProtoMessage() {}

func (x *WechatPhoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatPhoneInfo.ProtoReflect.Descriptor instead.
func (*WechatPhoneInfo) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{50}
}

func (x *WechatPhoneInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *WechatPhoneInfo) GetPurePhoneNumber() string {
	if x != nil {
		return x.PurePhoneNumber
	}
	return ""
}

func (x *WechatPhoneInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *WechatPhoneInfo) GetWatermark() *WechatWatermark {
	if x != nil {
		return x.Watermark
	}
	return nil
}

type WechatWatermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Appid     string `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
}

func (x *WechatWatermark) Reset() {
	*x = WechatWatermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWatermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWatermark) ProtoMessage() {}

func (x *WechatWatermark) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWatermark.ProtoReflect.Descriptor instead.
func (*WechatWatermark) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{51}
}

func (x *WechatWatermark) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WechatWatermark) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

type WechatUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                  `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                  `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatUserInfoRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatUserInfoResp) Reset() {
	*x = WechatUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserInfoResp) ProtoMessage() {}

func (x *WechatUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserInfoResp.ProtoReflect.Descriptor instead.
func (*WechatUserInfoResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{52}
}

func (x *WechatUserInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatUserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatUserInfoResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatUserInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatUserInfoResp) GetData() *WechatUserInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatUserInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Openid     string   `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64    `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,8,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,9,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,10,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode    int32    `protobuf:"varint,11,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg     string   `protobuf:"bytes,12,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *WechatUserInfoRespData) Reset() {
	*x = WechatUserInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatUserInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatUserInfoRespData) ProtoMessage() {}

func (x *WechatUserInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatUserInfoRespData.ProtoReflect.Descriptor instead.
func (*WechatUserInfoRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{53}
}

func (x *WechatUserInfoRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WechatUserInfoRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatUserInfoRespData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatUserInfoRespData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WechatUserInfoRespData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatUserInfoRespData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatUserInfoRespData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatUserInfoRespData) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *WechatUserInfoRespData) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WechatUserInfoRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WechatUserInfoRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WechatUserInfoRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WechatRefreshResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatRefreshRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatRefreshResp) Reset() {
	*x = WechatRefreshResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatRefreshResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatRefreshResp) ProtoMessage() {}

func (x *WechatRefreshResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatRefreshResp.ProtoReflect.Descriptor instead.
func (*WechatRefreshResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{54}
}

func (x *WechatRefreshResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatRefreshResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatRefreshResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatRefreshResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatRefreshResp) GetData() *WechatRefreshRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatRefreshRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn    int64  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Openid       string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Scope        string `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	Errcode      int32  `protobuf:"varint,6,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg       string `protobuf:"bytes,7,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *WechatRefreshRespData) Reset() {
	*x = WechatRefreshRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatRefreshRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatRefreshRespData) ProtoMessage() {}

func (x *WechatRefreshRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatRefreshRespData.ProtoReflect.Descriptor instead.
func (*WechatRefreshRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{55}
}

func (x *WechatRefreshRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *WechatRefreshRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *WechatRefreshRespData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *WechatRefreshRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatRefreshRespData) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *WechatRefreshRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WechatRefreshRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WechatWebGetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatWebGetUserInfoRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatWebGetUserInfoResp) Reset() {
	*x = WechatWebGetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebGetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebGetUserInfoResp) ProtoMessage() {}

func (x *WechatWebGetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebGetUserInfoResp.ProtoReflect.Descriptor instead.
func (*WechatWebGetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{56}
}

func (x *WechatWebGetUserInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatWebGetUserInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatWebGetUserInfoResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatWebGetUserInfoResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatWebGetUserInfoResp) GetData() *WechatWebGetUserInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatWebGetUserInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string   `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid,omitempty"`
	Nickname   string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64    `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City       string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Country    string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl string   `protobuf:"bytes,7,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege  []string `protobuf:"bytes,8,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid    string   `protobuf:"bytes,9,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Errcode    int32    `protobuf:"varint,10,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg     string   `protobuf:"bytes,11,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *WechatWebGetUserInfoRespData) Reset() {
	*x = WechatWebGetUserInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatWebGetUserInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatWebGetUserInfoRespData) ProtoMessage() {}

func (x *WechatWebGetUserInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatWebGetUserInfoRespData.ProtoReflect.Descriptor instead.
func (*WechatWebGetUserInfoRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{57}
}

func (x *WechatWebGetUserInfoRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *WechatWebGetUserInfoRespData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WechatWebGetUserInfoRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *WechatWebGetUserInfoRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WechatWebGetUserInfoRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WechatOaAccessTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                       `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                       `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatOaAccessTokenRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatOaAccessTokenResp) Reset() {
	*x = WechatOaAccessTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOaAccessTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOaAccessTokenResp) ProtoMessage() {}

func (x *WechatOaAccessTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOaAccessTokenResp.ProtoReflect.Descriptor instead.
func (*WechatOaAccessTokenResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{58}
}

func (x *WechatOaAccessTokenResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatOaAccessTokenResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatOaAccessTokenResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatOaAccessTokenResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatOaAccessTokenResp) GetData() *WechatOaAccessTokenRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatOaAccessTokenRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
	Errcode     int32  `protobuf:"varint,3,opt,name=Errcode,proto3" json:"Errcode,omitempty"`
	Errmsg      string `protobuf:"bytes,4,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
}

func (x *WechatOaAccessTokenRespData) Reset() {
	*x = WechatOaAccessTokenRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOaAccessTokenRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOaAccessTokenRespData) ProtoMessage() {}

func (x *WechatOaAccessTokenRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOaAccessTokenRespData.ProtoReflect.Descriptor instead.
func (*WechatOaAccessTokenRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{59}
}

func (x *WechatOaAccessTokenRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *WechatOaAccessTokenRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *WechatOaAccessTokenRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WechatOaAccessTokenRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

type WechatOaJsApiTicketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                       `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                       `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *WechatOaJsApiTicketRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WechatOaJsApiTicketResp) Reset() {
	*x = WechatOaJsApiTicketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOaJsApiTicketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOaJsApiTicketResp) ProtoMessage() {}

func (x *WechatOaJsApiTicketResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOaJsApiTicketResp.ProtoReflect.Descriptor instead.
func (*WechatOaJsApiTicketResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{60}
}

func (x *WechatOaJsApiTicketResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WechatOaJsApiTicketResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WechatOaJsApiTicketResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *WechatOaJsApiTicketResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WechatOaJsApiTicketResp) GetData() *WechatOaJsApiTicketRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type WechatOaJsApiTicketRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticket    string `protobuf:"bytes,1,opt,name=Ticket,proto3" json:"Ticket,omitempty"`
	ExpiresIn int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
	Errcode   int32  `protobuf:"varint,3,opt,name=Errcode,proto3" json:"Errcode,omitempty"`
	Errmsg    string `protobuf:"bytes,4,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
}

func (x *WechatOaJsApiTicketRespData) Reset() {
	*x = WechatOaJsApiTicketRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOaJsApiTicketRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOaJsApiTicketRespData) ProtoMessage() {}

func (x *WechatOaJsApiTicketRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOaJsApiTicketRespData.ProtoReflect.Descriptor instead.
func (*WechatOaJsApiTicketRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{61}
}

func (x *WechatOaJsApiTicketRespData) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

func (x *WechatOaJsApiTicketRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *WechatOaJsApiTicketRespData) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *WechatOaJsApiTicketRespData) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

// note: 抖音专区
type DYMiniGameCode2TokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *DYMiniGameCode2TokenRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DYMiniGameCode2TokenResp) Reset() {
	*x = DYMiniGameCode2TokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DYMiniGameCode2TokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DYMiniGameCode2TokenResp) ProtoMessage() {}

func (x *DYMiniGameCode2TokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DYMiniGameCode2TokenResp.ProtoReflect.Descriptor instead.
func (*DYMiniGameCode2TokenResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{62}
}

func (x *DYMiniGameCode2TokenResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DYMiniGameCode2TokenResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DYMiniGameCode2TokenResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *DYMiniGameCode2TokenResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DYMiniGameCode2TokenResp) GetData() *DYMiniGameCode2TokenRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DYMiniGameCode2TokenRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SessionKey      string `protobuf:"bytes,2,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	Openid          string `protobuf:"bytes,3,opt,name=openid,proto3" json:"openid,omitempty"`
	AnonymousOpenid string `protobuf:"bytes,4,opt,name=anonymousOpenid,proto3" json:"anonymousOpenid,omitempty"`
	Unionid         string `protobuf:"bytes,5,opt,name=unionid,proto3" json:"unionid,omitempty"`
	ErrNo           int32  `protobuf:"varint,6,opt,name=errNo,proto3" json:"errNo,omitempty"`
	ErrTips         string `protobuf:"bytes,7,opt,name=errTips,proto3" json:"errTips,omitempty"`
}

func (x *DYMiniGameCode2TokenRespData) Reset() {
	*x = DYMiniGameCode2TokenRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DYMiniGameCode2TokenRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DYMiniGameCode2TokenRespData) ProtoMessage() {}

func (x *DYMiniGameCode2TokenRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DYMiniGameCode2TokenRespData.ProtoReflect.Descriptor instead.
func (*DYMiniGameCode2TokenRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{63}
}

func (x *DYMiniGameCode2TokenRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DYMiniGameCode2TokenRespData) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *DYMiniGameCode2TokenRespData) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *DYMiniGameCode2TokenRespData) GetAnonymousOpenid() string {
	if x != nil {
		return x.AnonymousOpenid
	}
	return ""
}

func (x *DYMiniGameCode2TokenRespData) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *DYMiniGameCode2TokenRespData) GetErrNo() int32 {
	if x != nil {
		return x.ErrNo
	}
	return 0
}

func (x *DYMiniGameCode2TokenRespData) GetErrTips() string {
	if x != nil {
		return x.ErrTips
	}
	return ""
}

type DYMiniGameOAAccessTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *DYMiniGameOAAccessTokenRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DYMiniGameOAAccessTokenResp) Reset() {
	*x = DYMiniGameOAAccessTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DYMiniGameOAAccessTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DYMiniGameOAAccessTokenResp) ProtoMessage() {}

func (x *DYMiniGameOAAccessTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DYMiniGameOAAccessTokenResp.ProtoReflect.Descriptor instead.
func (*DYMiniGameOAAccessTokenResp) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{64}
}

func (x *DYMiniGameOAAccessTokenResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DYMiniGameOAAccessTokenResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DYMiniGameOAAccessTokenResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *DYMiniGameOAAccessTokenResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DYMiniGameOAAccessTokenResp) GetData() *DYMiniGameOAAccessTokenRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DYMiniGameOAAccessTokenRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,2,opt,name=expiresIn,proto3" json:"expiresIn,omitempty"`
	ErrNo       int32  `protobuf:"varint,3,opt,name=errNo,proto3" json:"errNo,omitempty"`
	ErrTips     string `protobuf:"bytes,4,opt,name=errTips,proto3" json:"errTips,omitempty"`
}

func (x *DYMiniGameOAAccessTokenRespData) Reset() {
	*x = DYMiniGameOAAccessTokenRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdparty_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DYMiniGameOAAccessTokenRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DYMiniGameOAAccessTokenRespData) ProtoMessage() {}

func (x *DYMiniGameOAAccessTokenRespData) ProtoReflect() protoreflect.Message {
	mi := &file_thirdparty_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DYMiniGameOAAccessTokenRespData.ProtoReflect.Descriptor instead.
func (*DYMiniGameOAAccessTokenRespData) Descriptor() ([]byte, []int) {
	return file_thirdparty_proto_rawDescGZIP(), []int{65}
}

func (x *DYMiniGameOAAccessTokenRespData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DYMiniGameOAAccessTokenRespData) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *DYMiniGameOAAccessTokenRespData) GetErrNo() int32 {
	if x != nil {
		return x.ErrNo
	}
	return 0
}

func (x *DYMiniGameOAAccessTokenRespData) GetErrTips() string {
	if x != nil {
		return x.ErrTips
	}
	return ""
}

var File_thirdparty_proto protoreflect.FileDescriptor

var file_thirdparty_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x22, 0x77,
	0x0a, 0x14, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x55, 0x72, 0x6c,
	0x22, 0x35, 0x0a, 0x0d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x0e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x22, 0x48, 0x0a, 0x10, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x65, 0x0a, 0x17, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x22, 0x0a, 0x0e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x5a,
	0x0a, 0x26, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a,
	0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x3f, 0x0a, 0x25, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x50, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x31,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41,
	0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0xc5, 0x01, 0x0a, 0x26, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x29, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x65,
	0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65,
	0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xc2, 0x01, 0x0a, 0x29, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x53, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41,
	0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x2a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xc8, 0x05, 0x0a, 0x20, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55,
	0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x61, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x61, 0x67, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x70, 0x69, 0x61, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x61, 0x70, 0x69, 0x61, 0x6f, 0x12, 0x4a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70,
	0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x50, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x53, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x56, 0x0a, 0x0a, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x1a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x64,
	0x0a, 0x1a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x63, 0x68, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x22, 0xdc, 0x02, 0x0a, 0x1b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55,
	0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0xb4, 0x01, 0x0a, 0x21, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x45, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x59, 0x0a, 0x25, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x02, 0x0a, 0x26, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x65,
	0x0a, 0x17, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x1a, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47,
	0x61, 0x6d, 0x65, 0x4f, 0x41, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x7d, 0x0a, 0x17, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x47,
	0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x73, 0x41, 0x70, 0x69,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x47,
	0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x47, 0x65, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x6a, 0x73, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x6a, 0x73, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1c, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x2a, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfe, 0x02, 0x0a, 0x26, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x4a,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xf1, 0x01, 0x0a, 0x11, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x70, 0x61, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0b,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x89, 0x04,
	0x0a, 0x20, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x30, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x4a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x1f, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x25, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3e, 0x0a,
	0x24, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0xc8, 0x04,
	0x0a, 0x1f, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x49, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x46, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xc2, 0x01, 0x0a, 0x21, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53, 0x41, 0x50, 0x49, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a,
	0x53, 0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a,
	0x25, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4a, 0x53,
	0x41, 0x50, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x45, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57,
	0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x59, 0x0a, 0x19, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xb2, 0x01, 0x0a,
	0x19, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x80, 0x01, 0x0a, 0x1d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x41,
	0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x9d, 0x02, 0x0a, 0x12, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x9f, 0x01, 0x0a, 0x19, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x1f,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xba, 0x01, 0x0a,
	0x0f, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x75, 0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x72,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39,
	0x0a, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x45, 0x0a, 0x0f, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x22, 0xa4, 0x01, 0x0a, 0x12, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc4, 0x02, 0x0a, 0x16, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75,
	0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d,
	0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0xa2,
	0x01, 0x0a, 0x11, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xde, 0x01, 0x0a, 0x15, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6d, 0x73, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57,
	0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x02, 0x0a, 0x1c, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x57, 0x65, 0x62, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65,
	0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45,
	0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x17, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4f, 0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x4a, 0x73, 0x41,
	0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x4f, 0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45,
	0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x22, 0xb0,
	0x01, 0x0a, 0x18, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x32, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xdc, 0x01, 0x0a, 0x1c, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x32, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x54, 0x69, 0x70,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x54, 0x69, 0x70, 0x73,
	0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x4f,
	0x41, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x41,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x1f, 0x44, 0x59,
	0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x41, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x54, 0x69, 0x70, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x54, 0x69, 0x70, 0x73, 0x32, 0x9a, 0x09,
	0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x32, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x55, 0x0a, 0x16, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x18, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x59, 0x0a, 0x19, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x17, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x17, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x20, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x1b, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x24, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x57, 0x65, 0x62,
	0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x25, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x20, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x20, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4f, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f,
	0x61, 0x4a, 0x73, 0x41, 0x70, 0x69, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x69, 0x0a, 0x1c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x23, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x14, 0x44,
	0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x23, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x32, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a,
	0x0a, 0x17, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x41, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d,
	0x65, 0x4f, 0x41, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x59, 0x4d, 0x69, 0x6e, 0x69, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x41, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_thirdparty_proto_rawDescOnce sync.Once
	file_thirdparty_proto_rawDescData = file_thirdparty_proto_rawDesc
)

func file_thirdparty_proto_rawDescGZIP() []byte {
	file_thirdparty_proto_rawDescOnce.Do(func() {
		file_thirdparty_proto_rawDescData = protoimpl.X.CompressGZIP(file_thirdparty_proto_rawDescData)
	})
	return file_thirdparty_proto_rawDescData
}

var file_thirdparty_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_thirdparty_proto_goTypes = []interface{}{
	(*WechatWebRedirectReq)(nil),                              // 0: thirdparty.WechatWebRedirectReq
	(*WechatWebAutoRedirectReq)(nil),                          // 1: thirdparty.WechatWebAutoRedirectReq
	(*WechatCodeReq)(nil),                                     // 2: thirdparty.WechatCodeReq
	(*WechatTokenReq)(nil),                                    // 3: thirdparty.WechatTokenReq
	(*WechatRefreshReq)(nil),                                  // 4: thirdparty.WechatRefreshReq
	(*WechatWebGetUserInfoReq)(nil),                           // 5: thirdparty.WechatWebGetUserInfoReq
	(*WechatOaKeyReq)(nil),                                    // 6: thirdparty.WechatOaKeyReq
	(*WechatMiniAppJSAPICreateOrderReqAmount)(nil),            // 7: thirdparty.WechatMiniAppJSAPICreateOrderReqAmount
	(*WechatMiniAppJSAPICreateOrderReqPayer)(nil),             // 8: thirdparty.WechatMiniAppJSAPICreateOrderReqPayer
	(*WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail)(nil), // 9: thirdparty.WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail
	(*WechatMiniAppJSAPICreateOrderReqDetail)(nil),            // 10: thirdparty.WechatMiniAppJSAPICreateOrderReqDetail
	(*WechatMiniAppJSAPICreateOrderReqStoreInfo)(nil),         // 11: thirdparty.WechatMiniAppJSAPICreateOrderReqStoreInfo
	(*WechatMiniAppJSAPICreateOrderReqSceneInfo)(nil),         // 12: thirdparty.WechatMiniAppJSAPICreateOrderReqSceneInfo
	(*WechatMiniAppJSAPICreateOrderReqSettleInfo)(nil),        // 13: thirdparty.WechatMiniAppJSAPICreateOrderReqSettleInfo
	(*WechatMiniAppJSAPICreateOrderReq)(nil),                  // 14: thirdparty.WechatMiniAppJSAPICreateOrderReq
	(*WechatMiniAppQueryOrderReq)(nil),                        // 15: thirdparty.WechatMiniAppQueryOrderReq
	(*WechatMiniAppCloseOrderReq)(nil),                        // 16: thirdparty.WechatMiniAppCloseOrderReq
	(*WechatMiniAppRefundOrderReq)(nil),                       // 17: thirdparty.WechatMiniAppRefundOrderReq
	(*WechatMiniAppRefundOrderReqAmount)(nil),                 // 18: thirdparty.WechatMiniAppRefundOrderReqAmount
	(*WechatMiniAppRefundOrderReqAmountFrom)(nil),             // 19: thirdparty.WechatMiniAppRefundOrderReqAmountFrom
	(*WechatMiniAppRefundOrderReqGoodsDetail)(nil),            // 20: thirdparty.WechatMiniAppRefundOrderReqGoodsDetail
	(*DYMiniGameCode2TokenReq)(nil),                           // 21: thirdparty.DYMiniGameCode2TokenReq
	(*DYMiniGameOAAccessTokenReq)(nil),                        // 22: thirdparty.DYMiniGameOAAccessTokenReq
	(*WechatGenShareConfigReq)(nil),                           // 23: thirdparty.WechatGenShareConfigReq
	(*WechatGenShareConfigResp)(nil),                          // 24: thirdparty.WechatGenShareConfigResp
	(*WechatGenShareConfigRespData)(nil),                      // 25: thirdparty.WechatGenShareConfigRespData
	(*WechatMiniAppRefundOrderResp)(nil),                      // 26: thirdparty.WechatMiniAppRefundOrderResp
	(*WechatMiniAppRefundOrderRespDataAmountFrom)(nil),        // 27: thirdparty.WechatMiniAppRefundOrderRespDataAmountFrom
	(*WechatMiniAppRefundOrderRespDataAmount)(nil),            // 28: thirdparty.WechatMiniAppRefundOrderRespDataAmount
	(*WechatGoodsDetail)(nil),                                 // 29: thirdparty.WechatGoodsDetail
	(*WechatPromotionDetail)(nil),                             // 30: thirdparty.WechatPromotionDetail
	(*WechatMiniAppRefundOrderRespData)(nil),                  // 31: thirdparty.WechatMiniAppRefundOrderRespData
	(*WechatMiniAppCloseOrderResp)(nil),                       // 32: thirdparty.WechatMiniAppCloseOrderResp
	(*WechatMiniAppCloseOrderRespData)(nil),                   // 33: thirdparty.WechatMiniAppCloseOrderRespData
	(*WechatMiniAppQueryOrderResp)(nil),                       // 34: thirdparty.WechatMiniAppQueryOrderResp
	(*WechatMiniAppQueryOrderRespDataAmount)(nil),             // 35: thirdparty.WechatMiniAppQueryOrderRespDataAmount
	(*WechatMiniAppQueryOrderRespDataPayer)(nil),              // 36: thirdparty.WechatMiniAppQueryOrderRespDataPayer
	(*WechatMiniAppQueryOrderRespData)(nil),                   // 37: thirdparty.WechatMiniAppQueryOrderRespData
	(*WechatMiniAppJSAPICreateOrderResp)(nil),                 // 38: thirdparty.WechatMiniAppJSAPICreateOrderResp
	(*WechatMiniAppJSAPICreateOrderRespData)(nil),             // 39: thirdparty.WechatMiniAppJSAPICreateOrderRespData
	(*WechatWebRedirectResp)(nil),                             // 40: thirdparty.WechatWebRedirectResp
	(*WechatWebRedirectRespData)(nil),                         // 41: thirdparty.WechatWebRedirectRespData
	(*WechatWebAutoRedirectResp)(nil),                         // 42: thirdparty.WechatWebAutoRedirectResp
	(*WechatWebAutoRedirectRespData)(nil),                     // 43: thirdparty.WechatWebAutoRedirectRespData
	(*WechatCodeResp)(nil),                                    // 44: thirdparty.WechatCodeResp
	(*WechatCodeRespData)(nil),                                // 45: thirdparty.WechatCodeRespData
	(*WechatMiniAppCodeResp)(nil),                             // 46: thirdparty.WechatMiniAppCodeResp
	(*WechatMiniAppCodeRespData)(nil),                         // 47: thirdparty.WechatMiniAppCodeRespData
	(*WechatMiniAppCode2PhoneResp)(nil),                       // 48: thirdparty.WechatMiniAppCode2PhoneResp
	(*WechatMiniAppCode2PhoneRespData)(nil),                   // 49: thirdparty.WechatMiniAppCode2PhoneRespData
	(*WechatPhoneInfo)(nil),                                   // 50: thirdparty.WechatPhoneInfo
	(*WechatWatermark)(nil),                                   // 51: thirdparty.WechatWatermark
	(*WechatUserInfoResp)(nil),                                // 52: thirdparty.WechatUserInfoResp
	(*WechatUserInfoRespData)(nil),                            // 53: thirdparty.WechatUserInfoRespData
	(*WechatRefreshResp)(nil),                                 // 54: thirdparty.WechatRefreshResp
	(*WechatRefreshRespData)(nil),                             // 55: thirdparty.WechatRefreshRespData
	(*WechatWebGetUserInfoResp)(nil),                          // 56: thirdparty.WechatWebGetUserInfoResp
	(*WechatWebGetUserInfoRespData)(nil),                      // 57: thirdparty.WechatWebGetUserInfoRespData
	(*WechatOaAccessTokenResp)(nil),                           // 58: thirdparty.WechatOaAccessTokenResp
	(*WechatOaAccessTokenRespData)(nil),                       // 59: thirdparty.WechatOaAccessTokenRespData
	(*WechatOaJsApiTicketResp)(nil),                           // 60: thirdparty.WechatOaJsApiTicketResp
	(*WechatOaJsApiTicketRespData)(nil),                       // 61: thirdparty.WechatOaJsApiTicketRespData
	(*DYMiniGameCode2TokenResp)(nil),                          // 62: thirdparty.DYMiniGameCode2TokenResp
	(*DYMiniGameCode2TokenRespData)(nil),                      // 63: thirdparty.DYMiniGameCode2TokenRespData
	(*DYMiniGameOAAccessTokenResp)(nil),                       // 64: thirdparty.DYMiniGameOAAccessTokenResp
	(*DYMiniGameOAAccessTokenRespData)(nil),                   // 65: thirdparty.DYMiniGameOAAccessTokenRespData
}
var file_thirdparty_proto_depIdxs = []int32{
	9,  // 0: thirdparty.WechatMiniAppJSAPICreateOrderReqDetail.goodsDetail:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail
	11, // 1: thirdparty.WechatMiniAppJSAPICreateOrderReqSceneInfo.storeInfo:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqStoreInfo
	7,  // 2: thirdparty.WechatMiniAppJSAPICreateOrderReq.amount:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqAmount
	8,  // 3: thirdparty.WechatMiniAppJSAPICreateOrderReq.payer:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqPayer
	10, // 4: thirdparty.WechatMiniAppJSAPICreateOrderReq.detail:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqDetail
	12, // 5: thirdparty.WechatMiniAppJSAPICreateOrderReq.sceneInfo:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqSceneInfo
	13, // 6: thirdparty.WechatMiniAppJSAPICreateOrderReq.settleInfo:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderReqSettleInfo
	18, // 7: thirdparty.WechatMiniAppRefundOrderReq.amount:type_name -> thirdparty.WechatMiniAppRefundOrderReqAmount
	20, // 8: thirdparty.WechatMiniAppRefundOrderReq.goodsDetail:type_name -> thirdparty.WechatMiniAppRefundOrderReqGoodsDetail
	19, // 9: thirdparty.WechatMiniAppRefundOrderReqAmount.from:type_name -> thirdparty.WechatMiniAppRefundOrderReqAmountFrom
	25, // 10: thirdparty.WechatGenShareConfigResp.data:type_name -> thirdparty.WechatGenShareConfigRespData
	31, // 11: thirdparty.WechatMiniAppRefundOrderResp.data:type_name -> thirdparty.WechatMiniAppRefundOrderRespData
	27, // 12: thirdparty.WechatMiniAppRefundOrderRespDataAmount.from:type_name -> thirdparty.WechatMiniAppRefundOrderRespDataAmountFrom
	29, // 13: thirdparty.WechatPromotionDetail.goodsDetail:type_name -> thirdparty.WechatGoodsDetail
	28, // 14: thirdparty.WechatMiniAppRefundOrderRespData.amount:type_name -> thirdparty.WechatMiniAppRefundOrderRespDataAmount
	30, // 15: thirdparty.WechatMiniAppRefundOrderRespData.promotionDetail:type_name -> thirdparty.WechatPromotionDetail
	33, // 16: thirdparty.WechatMiniAppCloseOrderResp.data:type_name -> thirdparty.WechatMiniAppCloseOrderRespData
	37, // 17: thirdparty.WechatMiniAppQueryOrderResp.data:type_name -> thirdparty.WechatMiniAppQueryOrderRespData
	35, // 18: thirdparty.WechatMiniAppQueryOrderRespData.amount:type_name -> thirdparty.WechatMiniAppQueryOrderRespDataAmount
	36, // 19: thirdparty.WechatMiniAppQueryOrderRespData.payer:type_name -> thirdparty.WechatMiniAppQueryOrderRespDataPayer
	39, // 20: thirdparty.WechatMiniAppJSAPICreateOrderResp.data:type_name -> thirdparty.WechatMiniAppJSAPICreateOrderRespData
	41, // 21: thirdparty.WechatWebRedirectResp.data:type_name -> thirdparty.WechatWebRedirectRespData
	43, // 22: thirdparty.WechatWebAutoRedirectResp.data:type_name -> thirdparty.WechatWebAutoRedirectRespData
	45, // 23: thirdparty.WechatCodeResp.data:type_name -> thirdparty.WechatCodeRespData
	47, // 24: thirdparty.WechatMiniAppCodeResp.data:type_name -> thirdparty.WechatMiniAppCodeRespData
	49, // 25: thirdparty.WechatMiniAppCode2PhoneResp.data:type_name -> thirdparty.WechatMiniAppCode2PhoneRespData
	50, // 26: thirdparty.WechatMiniAppCode2PhoneRespData.phoneInfo:type_name -> thirdparty.WechatPhoneInfo
	51, // 27: thirdparty.WechatPhoneInfo.watermark:type_name -> thirdparty.WechatWatermark
	53, // 28: thirdparty.WechatUserInfoResp.data:type_name -> thirdparty.WechatUserInfoRespData
	55, // 29: thirdparty.WechatRefreshResp.data:type_name -> thirdparty.WechatRefreshRespData
	57, // 30: thirdparty.WechatWebGetUserInfoResp.data:type_name -> thirdparty.WechatWebGetUserInfoRespData
	59, // 31: thirdparty.WechatOaAccessTokenResp.data:type_name -> thirdparty.WechatOaAccessTokenRespData
	61, // 32: thirdparty.WechatOaJsApiTicketResp.data:type_name -> thirdparty.WechatOaJsApiTicketRespData
	63, // 33: thirdparty.DYMiniGameCode2TokenResp.data:type_name -> thirdparty.DYMiniGameCode2TokenRespData
	65, // 34: thirdparty.DYMiniGameOAAccessTokenResp.data:type_name -> thirdparty.DYMiniGameOAAccessTokenRespData
	2,  // 35: thirdparty.ThirdPartyRpcService.WechatCode2Token:input_type -> thirdparty.WechatCodeReq
	4,  // 36: thirdparty.ThirdPartyRpcService.WechatRefreshUserToken:input_type -> thirdparty.WechatRefreshReq
	3,  // 37: thirdparty.ThirdPartyRpcService.WechatUserToken2UserInfo:input_type -> thirdparty.WechatTokenReq
	2,  // 38: thirdparty.ThirdPartyRpcService.WechatMiniAppCode2Session:input_type -> thirdparty.WechatCodeReq
	2,  // 39: thirdparty.ThirdPartyRpcService.WechatMiniAppCode2Phone:input_type -> thirdparty.WechatCodeReq
	0,  // 40: thirdparty.ThirdPartyRpcService.WechatWebRedirectWechat:input_type -> thirdparty.WechatWebRedirectReq
	1,  // 41: thirdparty.ThirdPartyRpcService.WechatWebAutoRedirectWechat:input_type -> thirdparty.WechatWebAutoRedirectReq
	6,  // 42: thirdparty.ThirdPartyRpcService.WechatOfficialAccountAccessToken:input_type -> thirdparty.WechatOaKeyReq
	6,  // 43: thirdparty.ThirdPartyRpcService.WechatOfficialAccountJsApiTicket:input_type -> thirdparty.WechatOaKeyReq
	23, // 44: thirdparty.ThirdPartyRpcService.WechatOfficialGenShareConfig:input_type -> thirdparty.WechatGenShareConfigReq
	21, // 45: thirdparty.ThirdPartyRpcService.DYMiniGameCode2Token:input_type -> thirdparty.DYMiniGameCode2TokenReq
	22, // 46: thirdparty.ThirdPartyRpcService.DYMiniGameOAAccessToken:input_type -> thirdparty.DYMiniGameOAAccessTokenReq
	44, // 47: thirdparty.ThirdPartyRpcService.WechatCode2Token:output_type -> thirdparty.WechatCodeResp
	54, // 48: thirdparty.ThirdPartyRpcService.WechatRefreshUserToken:output_type -> thirdparty.WechatRefreshResp
	52, // 49: thirdparty.ThirdPartyRpcService.WechatUserToken2UserInfo:output_type -> thirdparty.WechatUserInfoResp
	46, // 50: thirdparty.ThirdPartyRpcService.WechatMiniAppCode2Session:output_type -> thirdparty.WechatMiniAppCodeResp
	48, // 51: thirdparty.ThirdPartyRpcService.WechatMiniAppCode2Phone:output_type -> thirdparty.WechatMiniAppCode2PhoneResp
	40, // 52: thirdparty.ThirdPartyRpcService.WechatWebRedirectWechat:output_type -> thirdparty.WechatWebRedirectResp
	42, // 53: thirdparty.ThirdPartyRpcService.WechatWebAutoRedirectWechat:output_type -> thirdparty.WechatWebAutoRedirectResp
	58, // 54: thirdparty.ThirdPartyRpcService.WechatOfficialAccountAccessToken:output_type -> thirdparty.WechatOaAccessTokenResp
	60, // 55: thirdparty.ThirdPartyRpcService.WechatOfficialAccountJsApiTicket:output_type -> thirdparty.WechatOaJsApiTicketResp
	24, // 56: thirdparty.ThirdPartyRpcService.WechatOfficialGenShareConfig:output_type -> thirdparty.WechatGenShareConfigResp
	62, // 57: thirdparty.ThirdPartyRpcService.DYMiniGameCode2Token:output_type -> thirdparty.DYMiniGameCode2TokenResp
	64, // 58: thirdparty.ThirdPartyRpcService.DYMiniGameOAAccessToken:output_type -> thirdparty.DYMiniGameOAAccessTokenResp
	47, // [47:59] is the sub-list for method output_type
	35, // [35:47] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_thirdparty_proto_init() }
func file_thirdparty_proto_init() {
	if File_thirdparty_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thirdparty_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebAutoRedirectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatRefreshReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebGetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOaKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqPayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqDetailGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqSceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReqSettleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCloseOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderReqAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderReqAmountFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderReqGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DYMiniGameCode2TokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DYMiniGameOAAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatGenShareConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatGenShareConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatGenShareConfigRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderRespDataAmountFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderRespDataAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatPromotionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppRefundOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCloseOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCloseOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespDataAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespDataPayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppQueryOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppJSAPICreateOrderRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebRedirectRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebAutoRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebAutoRedirectRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatCodeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCodeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCode2PhoneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatMiniAppCode2PhoneRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatPhoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWatermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatUserInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatRefreshResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatRefreshRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebGetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatWebGetUserInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOaAccessTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOaAccessTokenRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOaJsApiTicketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatOaJsApiTicketRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DYMiniGameCode2TokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DYMiniGameCode2TokenRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DYMiniGameOAAccessTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdparty_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DYMiniGameOAAccessTokenRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thirdparty_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thirdparty_proto_goTypes,
		DependencyIndexes: file_thirdparty_proto_depIdxs,
		MessageInfos:      file_thirdparty_proto_msgTypes,
	}.Build()
	File_thirdparty_proto = out.File
	file_thirdparty_proto_rawDesc = nil
	file_thirdparty_proto_goTypes = nil
	file_thirdparty_proto_depIdxs = nil
}
