// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: minisite.proto

package minisite

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModelUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Company    string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Identity   int64  `protobuf:"varint,8,opt,name=identity,proto3" json:"identity,omitempty"`
	Status     int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	LastLogin  int64  `protobuf:"varint,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	ThisLogin  int64  `protobuf:"varint,11,opt,name=thisLogin,proto3" json:"thisLogin,omitempty"`
	RegChannel string `protobuf:"bytes,12,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname   string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64  `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,17,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	Privilege  string `protobuf:"bytes,19,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Headimgurl string `protobuf:"bytes,21,opt,name=Headimgurl,proto3" json:"Headimgurl,omitempty"`
	TenantId   uint32 `protobuf:"varint,22,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Id         uint32 `protobuf:"varint,23,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  int64  `protobuf:"varint,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  int64  `protobuf:"varint,26,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *ModelUser) Reset() {
	*x = ModelUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelUser) ProtoMessage() {}

func (x *ModelUser) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelUser.ProtoReflect.Descriptor instead.
func (*ModelUser) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{0}
}

func (x *ModelUser) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *ModelUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ModelUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ModelUser) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ModelUser) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *ModelUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelUser) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ModelUser) GetIdentity() int64 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *ModelUser) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelUser) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *ModelUser) GetThisLogin() int64 {
	if x != nil {
		return x.ThisLogin
	}
	return 0
}

func (x *ModelUser) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *ModelUser) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ModelUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ModelUser) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *ModelUser) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ModelUser) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ModelUser) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ModelUser) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *ModelUser) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *ModelUser) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ModelUser) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelUser) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelUser) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type ModelMinisite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AccessKey    string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	AccessSecret string `protobuf:"bytes,3,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
	Use          int64  `protobuf:"varint,4,opt,name=use,proto3" json:"use,omitempty"`
	Endpoint     string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Label        string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Icon         string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Color        string `protobuf:"bytes,8,opt,name=color,proto3" json:"color,omitempty"`
	Bg           string `protobuf:"bytes,9,opt,name=bg,proto3" json:"bg,omitempty"`
	TenantId     uint32 `protobuf:"varint,10,opt,name=TenantId,proto3" json:"TenantId,omitempty"`
	Status       int64  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	Id           uint32 `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    int64  `protobuf:"varint,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt    int64  `protobuf:"varint,15,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *ModelMinisite) Reset() {
	*x = ModelMinisite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelMinisite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelMinisite) ProtoMessage() {}

func (x *ModelMinisite) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelMinisite.ProtoReflect.Descriptor instead.
func (*ModelMinisite) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{1}
}

func (x *ModelMinisite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelMinisite) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *ModelMinisite) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

func (x *ModelMinisite) GetUse() int64 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *ModelMinisite) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ModelMinisite) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ModelMinisite) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ModelMinisite) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *ModelMinisite) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

func (x *ModelMinisite) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ModelMinisite) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelMinisite) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelMinisite) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelMinisite) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelMinisite) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIdsReq) Reset() {
	*x = DeleteIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdsReq) ProtoMessage() {}

func (x *DeleteIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdsReq.ProtoReflect.Descriptor instead.
func (*DeleteIdsReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteIdsReq) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UniqueId string `protobuf:"bytes,2,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile   string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	OpenId   string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId  string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
}

func (x *QueryReq) Reset() {
	*x = QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReq) ProtoMessage() {}

func (x *QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReq.ProtoReflect.Descriptor instead.
func (*QueryReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{4}
}

func (x *QueryReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *QueryReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *QueryReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{5}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Response) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *Response) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UpdateStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateStatusReq) Reset() {
	*x = UpdateStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusReq) ProtoMessage() {}

func (x *UpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateStatusReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// note: 用户模块
type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Company    string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Identity   int64  `protobuf:"varint,8,opt,name=identity,proto3" json:"identity,omitempty"`
	Status     int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	LastLogin  int64  `protobuf:"varint,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	ThisLogin  int64  `protobuf:"varint,11,opt,name=thisLogin,proto3" json:"thisLogin,omitempty"`
	RegChannel string `protobuf:"bytes,12,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname   string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64  `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,17,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	Privilege  string `protobuf:"bytes,19,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Headimgurl string `protobuf:"bytes,21,opt,name=Headimgurl,proto3" json:"Headimgurl,omitempty"`
	TenantId   uint32 `protobuf:"varint,22,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUserReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *CreateUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *CreateUserReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *CreateUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreateUserReq) GetIdentity() int64 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *CreateUserReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUserReq) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *CreateUserReq) GetThisLogin() int64 {
	if x != nil {
		return x.ThisLogin
	}
	return 0
}

func (x *CreateUserReq) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *CreateUserReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CreateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateUserReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *CreateUserReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CreateUserReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateUserReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateUserReq) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *CreateUserReq) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *CreateUserReq) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Company    string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Identity   int64  `protobuf:"varint,8,opt,name=identity,proto3" json:"identity,omitempty"`
	Status     int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	LastLogin  int64  `protobuf:"varint,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	ThisLogin  int64  `protobuf:"varint,11,opt,name=thisLogin,proto3" json:"thisLogin,omitempty"`
	RegChannel string `protobuf:"bytes,12,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname   string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64  `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,17,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	Privilege  string `protobuf:"bytes,19,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Headimgurl string `protobuf:"bytes,21,opt,name=Headimgurl,proto3" json:"Headimgurl,omitempty"`
	TenantId   uint32 `protobuf:"varint,22,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Id         uint32 `protobuf:"varint,23,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *UpdateUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UpdateUserReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *UpdateUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdateUserReq) GetIdentity() int64 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *UpdateUserReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateUserReq) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *UpdateUserReq) GetThisLogin() int64 {
	if x != nil {
		return x.ThisLogin
	}
	return 0
}

func (x *UpdateUserReq) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *UpdateUserReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *UpdateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateUserReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UpdateUserReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UpdateUserReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateUserReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateUserReq) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *UpdateUserReq) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *UpdateUserReq) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *UpdateUserReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime  int64   `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64   `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword    string  `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	UniqueId   string  `protobuf:"bytes,6,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string  `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string  `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string  `protobuf:"bytes,9,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string  `protobuf:"bytes,10,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Identity   []int64 `protobuf:"varint,11,rep,packed,name=identity,proto3" json:"identity,omitempty"`
	Status     []int64 `protobuf:"varint,12,rep,packed,name=status,proto3" json:"status,omitempty"`
	RegChannel string  `protobuf:"bytes,13,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string  `protobuf:"bytes,14,opt,name=channel,proto3" json:"channel,omitempty"`
	Company    string  `protobuf:"bytes,15,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *QueryUserListReq) Reset() {
	*x = QueryUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListReq) ProtoMessage() {}

func (x *QueryUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListReq.ProtoReflect.Descriptor instead.
func (*QueryUserListReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{9}
}

func (x *QueryUserListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryUserListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryUserListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryUserListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryUserListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryUserListReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *QueryUserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryUserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryUserListReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *QueryUserListReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *QueryUserListReq) GetIdentity() []int64 {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *QueryUserListReq) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryUserListReq) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *QueryUserListReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *QueryUserListReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type QueryUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryUserListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryUserListResp) Reset() {
	*x = QueryUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListResp) ProtoMessage() {}

func (x *QueryUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListResp.ProtoReflect.Descriptor instead.
func (*QueryUserListResp) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{10}
}

func (x *QueryUserListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryUserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryUserListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryUserListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryUserListResp) GetData() *QueryUserListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryUserListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32        `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32        `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryUserListRespData) Reset() {
	*x = QueryUserListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListRespData) ProtoMessage() {}

func (x *QueryUserListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListRespData.ProtoReflect.Descriptor instead.
func (*QueryUserListRespData) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{11}
}

func (x *QueryUserListRespData) GetList() []*ModelUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryUserListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryUserListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryUserListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelUser `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryUserResp) Reset() {
	*x = QueryUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserResp) ProtoMessage() {}

func (x *QueryUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserResp.ProtoReflect.Descriptor instead.
func (*QueryUserResp) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{12}
}

func (x *QueryUserResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryUserResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryUserResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryUserResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryUserResp) GetData() *ModelUser {
	if x != nil {
		return x.Data
	}
	return nil
}

// note: minisite模块
type CreateMinisiteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AccessKey    string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	AccessSecret string `protobuf:"bytes,3,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
	Use          int64  `protobuf:"varint,4,opt,name=use,proto3" json:"use,omitempty"`
	Endpoint     string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Label        string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Icon         string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Color        string `protobuf:"bytes,8,opt,name=color,proto3" json:"color,omitempty"`
	Bg           string `protobuf:"bytes,9,opt,name=bg,proto3" json:"bg,omitempty"`
	TenantId     uint32 `protobuf:"varint,10,opt,name=TenantId,proto3" json:"TenantId,omitempty"`
	Status       int64  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateMinisiteReq) Reset() {
	*x = CreateMinisiteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMinisiteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMinisiteReq) ProtoMessage() {}

func (x *CreateMinisiteReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMinisiteReq.ProtoReflect.Descriptor instead.
func (*CreateMinisiteReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMinisiteReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMinisiteReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreateMinisiteReq) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

func (x *CreateMinisiteReq) GetUse() int64 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *CreateMinisiteReq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateMinisiteReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateMinisiteReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateMinisiteReq) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CreateMinisiteReq) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

func (x *CreateMinisiteReq) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *CreateMinisiteReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateMinisiteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AccessKey    string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	AccessSecret string `protobuf:"bytes,3,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
	Use          int64  `protobuf:"varint,4,opt,name=use,proto3" json:"use,omitempty"`
	Endpoint     string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Label        string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Icon         string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Color        string `protobuf:"bytes,8,opt,name=color,proto3" json:"color,omitempty"`
	Bg           string `protobuf:"bytes,9,opt,name=bg,proto3" json:"bg,omitempty"`
	TenantId     uint32 `protobuf:"varint,10,opt,name=TenantId,proto3" json:"TenantId,omitempty"`
	Status       int64  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	Id           uint32 `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateMinisiteReq) Reset() {
	*x = UpdateMinisiteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMinisiteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMinisiteReq) ProtoMessage() {}

func (x *UpdateMinisiteReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMinisiteReq.ProtoReflect.Descriptor instead.
func (*UpdateMinisiteReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateMinisiteReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMinisiteReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *UpdateMinisiteReq) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

func (x *UpdateMinisiteReq) GetUse() int64 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *UpdateMinisiteReq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *UpdateMinisiteReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *UpdateMinisiteReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateMinisiteReq) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UpdateMinisiteReq) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

func (x *UpdateMinisiteReq) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *UpdateMinisiteReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMinisiteReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMinisiteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *QueryMinisiteListReq) Reset() {
	*x = QueryMinisiteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMinisiteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMinisiteListReq) ProtoMessage() {}

func (x *QueryMinisiteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMinisiteListReq.ProtoReflect.Descriptor instead.
func (*QueryMinisiteListReq) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{15}
}

func (x *QueryMinisiteListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryMinisiteListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryMinisiteListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryMinisiteListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryMinisiteListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type QueryMinisiteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryMinisiteListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryMinisiteListResp) Reset() {
	*x = QueryMinisiteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMinisiteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMinisiteListResp) ProtoMessage() {}

func (x *QueryMinisiteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMinisiteListResp.ProtoReflect.Descriptor instead.
func (*QueryMinisiteListResp) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{16}
}

func (x *QueryMinisiteListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryMinisiteListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryMinisiteListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryMinisiteListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryMinisiteListResp) GetData() *QueryMinisiteListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryMinisiteListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelMinisite `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32            `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32            `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryMinisiteListRespData) Reset() {
	*x = QueryMinisiteListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMinisiteListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMinisiteListRespData) ProtoMessage() {}

func (x *QueryMinisiteListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMinisiteListRespData.ProtoReflect.Descriptor instead.
func (*QueryMinisiteListRespData) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{17}
}

func (x *QueryMinisiteListRespData) GetList() []*ModelMinisite {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryMinisiteListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMinisiteListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryMinisiteListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryMinisiteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string         `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string         `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelMinisite `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryMinisiteResp) Reset() {
	*x = QueryMinisiteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_minisite_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMinisiteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMinisiteResp) ProtoMessage() {}

func (x *QueryMinisiteResp) ProtoReflect() protoreflect.Message {
	mi := &file_minisite_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMinisiteResp.ProtoReflect.Descriptor instead.
func (*QueryMinisiteResp) Descriptor() ([]byte, []int) {
	return file_minisite_proto_rawDescGZIP(), []int{18}
}

func (x *QueryMinisiteResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryMinisiteResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryMinisiteResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryMinisiteResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryMinisiteResp) GetData() *ModelMinisite {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_minisite_proto protoreflect.FileDescriptor

var file_minisite_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x22, 0x9b, 0x05, 0x0a, 0x09, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65,
	0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x81, 0x03, 0x0a, 0x0d, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x62, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1b, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x08,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x39, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb5, 0x04,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x65, 0x61,
	0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48,
	0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc5, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x03,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x15,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x27,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xab, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x62, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa8,
	0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x19, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa6, 0x07, 0x0a, 0x12, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x52, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x48, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x12, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x54, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x14, 0x4d, 0x69, 0x6e, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x69, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_minisite_proto_rawDescOnce sync.Once
	file_minisite_proto_rawDescData = file_minisite_proto_rawDesc
)

func file_minisite_proto_rawDescGZIP() []byte {
	file_minisite_proto_rawDescOnce.Do(func() {
		file_minisite_proto_rawDescData = protoimpl.X.CompressGZIP(file_minisite_proto_rawDescData)
	})
	return file_minisite_proto_rawDescData
}

var file_minisite_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_minisite_proto_goTypes = []interface{}{
	(*ModelUser)(nil),                 // 0: minisite.ModelUser
	(*ModelMinisite)(nil),             // 1: minisite.ModelMinisite
	(*DeleteReq)(nil),                 // 2: minisite.DeleteReq
	(*DeleteIdsReq)(nil),              // 3: minisite.DeleteIdsReq
	(*QueryReq)(nil),                  // 4: minisite.QueryReq
	(*Response)(nil),                  // 5: minisite.Response
	(*UpdateStatusReq)(nil),           // 6: minisite.UpdateStatusReq
	(*CreateUserReq)(nil),             // 7: minisite.CreateUserReq
	(*UpdateUserReq)(nil),             // 8: minisite.UpdateUserReq
	(*QueryUserListReq)(nil),          // 9: minisite.QueryUserListReq
	(*QueryUserListResp)(nil),         // 10: minisite.QueryUserListResp
	(*QueryUserListRespData)(nil),     // 11: minisite.QueryUserListRespData
	(*QueryUserResp)(nil),             // 12: minisite.QueryUserResp
	(*CreateMinisiteReq)(nil),         // 13: minisite.CreateMinisiteReq
	(*UpdateMinisiteReq)(nil),         // 14: minisite.UpdateMinisiteReq
	(*QueryMinisiteListReq)(nil),      // 15: minisite.QueryMinisiteListReq
	(*QueryMinisiteListResp)(nil),     // 16: minisite.QueryMinisiteListResp
	(*QueryMinisiteListRespData)(nil), // 17: minisite.QueryMinisiteListRespData
	(*QueryMinisiteResp)(nil),         // 18: minisite.QueryMinisiteResp
}
var file_minisite_proto_depIdxs = []int32{
	11, // 0: minisite.QueryUserListResp.data:type_name -> minisite.QueryUserListRespData
	0,  // 1: minisite.QueryUserListRespData.list:type_name -> minisite.ModelUser
	0,  // 2: minisite.QueryUserResp.data:type_name -> minisite.ModelUser
	17, // 3: minisite.QueryMinisiteListResp.data:type_name -> minisite.QueryMinisiteListRespData
	1,  // 4: minisite.QueryMinisiteListRespData.list:type_name -> minisite.ModelMinisite
	1,  // 5: minisite.QueryMinisiteResp.data:type_name -> minisite.ModelMinisite
	7,  // 6: minisite.MinisiteRpcService.UserCreate:input_type -> minisite.CreateUserReq
	8,  // 7: minisite.MinisiteRpcService.UserUpdate:input_type -> minisite.UpdateUserReq
	2,  // 8: minisite.MinisiteRpcService.UserDelete:input_type -> minisite.DeleteReq
	3,  // 9: minisite.MinisiteRpcService.UserDeleteIds:input_type -> minisite.DeleteIdsReq
	4,  // 10: minisite.MinisiteRpcService.UserQuery:input_type -> minisite.QueryReq
	9,  // 11: minisite.MinisiteRpcService.UserQueryList:input_type -> minisite.QueryUserListReq
	6,  // 12: minisite.MinisiteRpcService.UserUpdateStatus:input_type -> minisite.UpdateStatusReq
	13, // 13: minisite.MinisiteRpcService.MinisiteCreate:input_type -> minisite.CreateMinisiteReq
	14, // 14: minisite.MinisiteRpcService.MinisiteUpdate:input_type -> minisite.UpdateMinisiteReq
	2,  // 15: minisite.MinisiteRpcService.MinisiteDelete:input_type -> minisite.DeleteReq
	3,  // 16: minisite.MinisiteRpcService.MinisiteDeleteIds:input_type -> minisite.DeleteIdsReq
	4,  // 17: minisite.MinisiteRpcService.MinisiteQuery:input_type -> minisite.QueryReq
	15, // 18: minisite.MinisiteRpcService.MinisiteQueryList:input_type -> minisite.QueryMinisiteListReq
	6,  // 19: minisite.MinisiteRpcService.MinisiteUpdateStatus:input_type -> minisite.UpdateStatusReq
	5,  // 20: minisite.MinisiteRpcService.UserCreate:output_type -> minisite.Response
	5,  // 21: minisite.MinisiteRpcService.UserUpdate:output_type -> minisite.Response
	5,  // 22: minisite.MinisiteRpcService.UserDelete:output_type -> minisite.Response
	5,  // 23: minisite.MinisiteRpcService.UserDeleteIds:output_type -> minisite.Response
	12, // 24: minisite.MinisiteRpcService.UserQuery:output_type -> minisite.QueryUserResp
	10, // 25: minisite.MinisiteRpcService.UserQueryList:output_type -> minisite.QueryUserListResp
	5,  // 26: minisite.MinisiteRpcService.UserUpdateStatus:output_type -> minisite.Response
	5,  // 27: minisite.MinisiteRpcService.MinisiteCreate:output_type -> minisite.Response
	5,  // 28: minisite.MinisiteRpcService.MinisiteUpdate:output_type -> minisite.Response
	5,  // 29: minisite.MinisiteRpcService.MinisiteDelete:output_type -> minisite.Response
	5,  // 30: minisite.MinisiteRpcService.MinisiteDeleteIds:output_type -> minisite.Response
	18, // 31: minisite.MinisiteRpcService.MinisiteQuery:output_type -> minisite.QueryMinisiteResp
	16, // 32: minisite.MinisiteRpcService.MinisiteQueryList:output_type -> minisite.QueryMinisiteListResp
	5,  // 33: minisite.MinisiteRpcService.MinisiteUpdateStatus:output_type -> minisite.Response
	20, // [20:34] is the sub-list for method output_type
	6,  // [6:20] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_minisite_proto_init() }
func file_minisite_proto_init() {
	if File_minisite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_minisite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelMinisite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMinisiteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMinisiteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMinisiteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMinisiteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMinisiteListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_minisite_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMinisiteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_minisite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_minisite_proto_goTypes,
		DependencyIndexes: file_minisite_proto_depIdxs,
		MessageInfos:      file_minisite_proto_msgTypes,
	}.Build()
	File_minisite_proto = out.File
	file_minisite_proto_rawDesc = nil
	file_minisite_proto_goTypes = nil
	file_minisite_proto_depIdxs = nil
}
