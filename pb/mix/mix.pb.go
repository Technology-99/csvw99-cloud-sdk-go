// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: mix.proto

package mix

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// note: 短信服务
type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SmsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Mobile string   `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"` //接受方手机号
	Params []string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"` //模板参数
}

func (x *SmsParams) Reset() {
	*x = SmsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsParams) ProtoMessage() {}

func (x *SmsParams) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsParams.ProtoReflect.Descriptor instead.
func (*SmsParams) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{1}
}

func (x *SmsParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SmsParams) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SmsParams) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

type SmsSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Mobile    string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`       //接受方手机号
	RequestId string `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"` // 任务编号
}

func (x *SmsSearchParams) Reset() {
	*x = SmsSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsSearchParams) ProtoMessage() {}

func (x *SmsSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsSearchParams.ProtoReflect.Descriptor instead.
func (*SmsSearchParams) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{2}
}

func (x *SmsSearchParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SmsSearchParams) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SmsSearchParams) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type SmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *Data  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SmsResp) Reset() {
	*x = SmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsResp) ProtoMessage() {}

func (x *SmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsResp.ProtoReflect.Descriptor instead.
func (*SmsResp) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{3}
}

func (x *SmsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SmsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SmsResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SmsResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SmsResp) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RecipientEmail []string `protobuf:"bytes,2,rep,name=recipient_email,json=recipientEmail,proto3" json:"recipient_email,omitempty"`
	Cc             []*Cc    `protobuf:"bytes,3,rep,name=cc,proto3" json:"cc,omitempty"`
	Subject        string   `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	SendType       string   `protobuf:"bytes,5,opt,name=send_type,json=sendType,proto3" json:"send_type,omitempty"`
	SendBody       string   `protobuf:"bytes,6,opt,name=send_body,json=sendBody,proto3" json:"send_body,omitempty"`
}

func (x *EmsReq) Reset() {
	*x = EmsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmsReq) ProtoMessage() {}

func (x *EmsReq) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmsReq.ProtoReflect.Descriptor instead.
func (*EmsReq) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{4}
}

func (x *EmsReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EmsReq) GetRecipientEmail() []string {
	if x != nil {
		return x.RecipientEmail
	}
	return nil
}

func (x *EmsReq) GetCc() []*Cc {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *EmsReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmsReq) GetSendType() string {
	if x != nil {
		return x.SendType
	}
	return ""
}

func (x *EmsReq) GetSendBody() string {
	if x != nil {
		return x.SendBody
	}
	return ""
}

type Cc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Cc) Reset() {
	*x = Cc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cc) ProtoMessage() {}

func (x *Cc) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cc.ProtoReflect.Descriptor instead.
func (*Cc) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{5}
}

func (x *Cc) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Cc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EmsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *Data  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EmsResp) Reset() {
	*x = EmsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmsResp) ProtoMessage() {}

func (x *EmsResp) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmsResp.ProtoReflect.Descriptor instead.
func (*EmsResp) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{6}
}

func (x *EmsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EmsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *EmsResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *EmsResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EmsResp) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// note: 云存储服务
type GenerateUploadSignParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Filename   string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`      // 要上传的文件名
	UploadDir  string `protobuf:"bytes,3,opt,name=uploadDir,proto3" json:"uploadDir,omitempty"`    // 上传到哪个文件夹
	IsCallBack bool   `protobuf:"varint,4,opt,name=isCallBack,proto3" json:"isCallBack,omitempty"` // 是否回调
	CallBack   string `protobuf:"bytes,5,opt,name=callBack,proto3" json:"callBack,omitempty"`      // 回调地址
}

func (x *GenerateUploadSignParams) Reset() {
	*x = GenerateUploadSignParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUploadSignParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUploadSignParams) ProtoMessage() {}

func (x *GenerateUploadSignParams) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUploadSignParams.ProtoReflect.Descriptor instead.
func (*GenerateUploadSignParams) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateUploadSignParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GenerateUploadSignParams) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GenerateUploadSignParams) GetUploadDir() string {
	if x != nil {
		return x.UploadDir
	}
	return ""
}

func (x *GenerateUploadSignParams) GetIsCallBack() bool {
	if x != nil {
		return x.IsCallBack
	}
	return false
}

func (x *GenerateUploadSignParams) GetCallBack() string {
	if x != nil {
		return x.CallBack
	}
	return ""
}

type CheckUploadResultParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
}

func (x *CheckUploadResultParams) Reset() {
	*x = CheckUploadResultParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUploadResultParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUploadResultParams) ProtoMessage() {}

func (x *CheckUploadResultParams) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUploadResultParams.ProtoReflect.Descriptor instead.
func (*CheckUploadResultParams) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{8}
}

func (x *CheckUploadResultParams) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

type CallbackParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *CallbackParams) Reset() {
	*x = CallbackParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackParams) ProtoMessage() {}

func (x *CallbackParams) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackParams.ProtoReflect.Descriptor instead.
func (*CallbackParams) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{9}
}

func (x *CallbackParams) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CallbackParams) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GenerateUploadSignParamsRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	OSSAccessKeyId string `protobuf:"bytes,2,opt,name=OSSAccessKeyId,proto3" json:"OSSAccessKeyId,omitempty"`
	Policy         string `protobuf:"bytes,3,opt,name=Policy,proto3" json:"Policy,omitempty"`
	Signature      string `protobuf:"bytes,4,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Callback       string `protobuf:"bytes,5,opt,name=Callback,proto3" json:"Callback,omitempty"`
	IsCallback     bool   `protobuf:"varint,6,opt,name=IsCallback,proto3" json:"IsCallback,omitempty"`
	Host           string `protobuf:"bytes,7,opt,name=Host,proto3" json:"Host,omitempty"`
	Domain         string `protobuf:"bytes,8,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *GenerateUploadSignParamsRespData) Reset() {
	*x = GenerateUploadSignParamsRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUploadSignParamsRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUploadSignParamsRespData) ProtoMessage() {}

func (x *GenerateUploadSignParamsRespData) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUploadSignParamsRespData.ProtoReflect.Descriptor instead.
func (*GenerateUploadSignParamsRespData) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{10}
}

func (x *GenerateUploadSignParamsRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GenerateUploadSignParamsRespData) GetOSSAccessKeyId() string {
	if x != nil {
		return x.OSSAccessKeyId
	}
	return ""
}

func (x *GenerateUploadSignParamsRespData) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *GenerateUploadSignParamsRespData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *GenerateUploadSignParamsRespData) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *GenerateUploadSignParamsRespData) GetIsCallback() bool {
	if x != nil {
		return x.IsCallback
	}
	return false
}

func (x *GenerateUploadSignParamsRespData) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GenerateUploadSignParamsRespData) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GenerateUploadSignParamsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                            `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                            `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *GenerateUploadSignParamsRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenerateUploadSignParamsResp) Reset() {
	*x = GenerateUploadSignParamsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateUploadSignParamsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateUploadSignParamsResp) ProtoMessage() {}

func (x *GenerateUploadSignParamsResp) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateUploadSignParamsResp.ProtoReflect.Descriptor instead.
func (*GenerateUploadSignParamsResp) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateUploadSignParamsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GenerateUploadSignParamsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GenerateUploadSignParamsResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *GenerateUploadSignParamsResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GenerateUploadSignParamsResp) GetData() *GenerateUploadSignParamsRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CallbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *Data  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CallbackResp) Reset() {
	*x = CallbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackResp) ProtoMessage() {}

func (x *CallbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackResp.ProtoReflect.Descriptor instead.
func (*CallbackResp) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{12}
}

func (x *CallbackResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CallbackResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CallbackResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CallbackResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CallbackResp) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckUploadResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *Data  `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckUploadResultResp) Reset() {
	*x = CheckUploadResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUploadResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUploadResultResp) ProtoMessage() {}

func (x *CheckUploadResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUploadResultResp.ProtoReflect.Descriptor instead.
func (*CheckUploadResultResp) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{13}
}

func (x *CheckUploadResultResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckUploadResultResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckUploadResultResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CheckUploadResultResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CheckUploadResultResp) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// note: 验证码服务
type CaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string  `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	DotCount  int64   `protobuf:"varint,2,opt,name=DotCount,proto3" json:"DotCount,omitempty"`
	MaxSkew   float64 `protobuf:"fixed64,3,opt,name=MaxSkew,proto3" json:"MaxSkew,omitempty"`
	KeyLong   int64   `protobuf:"varint,4,opt,name=KeyLong,proto3" json:"KeyLong,omitempty"`
	ImgWidth  int64   `protobuf:"varint,5,opt,name=ImgWidth,proto3" json:"ImgWidth,omitempty"`
	ImgHeight int64   `protobuf:"varint,6,opt,name=ImgHeight,proto3" json:"ImgHeight,omitempty"`
}

func (x *CaptchaReq) Reset() {
	*x = CaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaReq) ProtoMessage() {}

func (x *CaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaReq.ProtoReflect.Descriptor instead.
func (*CaptchaReq) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{14}
}

func (x *CaptchaReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CaptchaReq) GetDotCount() int64 {
	if x != nil {
		return x.DotCount
	}
	return 0
}

func (x *CaptchaReq) GetMaxSkew() float64 {
	if x != nil {
		return x.MaxSkew
	}
	return 0
}

func (x *CaptchaReq) GetKeyLong() int64 {
	if x != nil {
		return x.KeyLong
	}
	return 0
}

func (x *CaptchaReq) GetImgWidth() int64 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *CaptchaReq) GetImgHeight() int64 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

type CaptchaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *CaptchaRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CaptchaResp) Reset() {
	*x = CaptchaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaResp) ProtoMessage() {}

func (x *CaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaResp.ProtoReflect.Descriptor instead.
func (*CaptchaResp) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{15}
}

func (x *CaptchaResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CaptchaResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CaptchaResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CaptchaResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CaptchaResp) GetData() *CaptchaRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CaptchaRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	Img     string `protobuf:"bytes,3,opt,name=Img,proto3" json:"Img,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *CaptchaRespData) Reset() {
	*x = CaptchaRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mix_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaRespData) ProtoMessage() {}

func (x *CaptchaRespData) ProtoReflect() protoreflect.Message {
	mi := &file_mix_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaRespData.ProtoReflect.Descriptor instead.
func (*CaptchaRespData) Descriptor() ([]byte, []int) {
	return file_mix_proto_rawDescGZIP(), []int{16}
}

func (x *CaptchaRespData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CaptchaRespData) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CaptchaRespData) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *CaptchaRespData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_mix_proto protoreflect.FileDescriptor

var file_mix_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x69, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x69, 0x78,
	0x22, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x09,
	0x53, 0x6d, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x0f, 0x53,
	0x6d, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x07, 0x53, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x06, 0x45, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x17, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x6d, 0x69,
	0x78, 0x2e, 0x63, 0x63, 0x52, 0x02, 0x63, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x2e, 0x0a, 0x02,
	0x63, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a,
	0x07, 0x45, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa2, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x69, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x43, 0x61,
	0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x22, 0x37, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x42, 0x0a,
	0x0e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0xfa, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x53, 0x53, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x4f, 0x53, 0x53, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xb1,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x85, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x69, 0x78, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x69, 0x78,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x0a,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x6f, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x78, 0x53,
	0x6b, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x4d, 0x61, 0x78, 0x53, 0x6b,
	0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x49, 0x6d, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6d, 0x67, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x49, 0x6d, 0x67,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x69, 0x78, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x0f, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6d, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x32, 0xcc, 0x03, 0x0a, 0x0d, 0x4d, 0x69, 0x78, 0x52, 0x70, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6d, 0x73,
	0x12, 0x0e, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x53, 0x6d, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x0c, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x6d, 0x73, 0x12, 0x14, 0x2e, 0x6d, 0x69, 0x78,
	0x2e, 0x53, 0x6d, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x0c, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x53, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28,
	0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x73, 0x52, 0x70, 0x63, 0x12, 0x0b, 0x2e,
	0x6d, 0x69, 0x78, 0x2e, 0x45, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x6d, 0x69, 0x78,
	0x2e, 0x45, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6d, 0x73, 0x52, 0x70, 0x63, 0x12, 0x0b, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x45, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x45, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x11, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c,
	0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1a, 0x2e, 0x6d,
	0x69, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x11, 0x2e, 0x6d, 0x69, 0x78, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0f,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x0f, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6d, 0x69, 0x78, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6d, 0x69, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mix_proto_rawDescOnce sync.Once
	file_mix_proto_rawDescData = file_mix_proto_rawDesc
)

func file_mix_proto_rawDescGZIP() []byte {
	file_mix_proto_rawDescOnce.Do(func() {
		file_mix_proto_rawDescData = protoimpl.X.CompressGZIP(file_mix_proto_rawDescData)
	})
	return file_mix_proto_rawDescData
}

var file_mix_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_mix_proto_goTypes = []interface{}{
	(*Data)(nil),                             // 0: mix.Data
	(*SmsParams)(nil),                        // 1: mix.SmsParams
	(*SmsSearchParams)(nil),                  // 2: mix.SmsSearchParams
	(*SmsResp)(nil),                          // 3: mix.SmsResp
	(*EmsReq)(nil),                           // 4: mix.EmsReq
	(*Cc)(nil),                               // 5: mix.cc
	(*EmsResp)(nil),                          // 6: mix.EmsResp
	(*GenerateUploadSignParams)(nil),         // 7: mix.GenerateUploadSignParams
	(*CheckUploadResultParams)(nil),          // 8: mix.CheckUploadResultParams
	(*CallbackParams)(nil),                   // 9: mix.CallbackParams
	(*GenerateUploadSignParamsRespData)(nil), // 10: mix.GenerateUploadSignParamsRespData
	(*GenerateUploadSignParamsResp)(nil),     // 11: mix.GenerateUploadSignParamsResp
	(*CallbackResp)(nil),                     // 12: mix.CallbackResp
	(*CheckUploadResultResp)(nil),            // 13: mix.CheckUploadResultResp
	(*CaptchaReq)(nil),                       // 14: mix.CaptchaReq
	(*CaptchaResp)(nil),                      // 15: mix.CaptchaResp
	(*CaptchaRespData)(nil),                  // 16: mix.CaptchaRespData
}
var file_mix_proto_depIdxs = []int32{
	0,  // 0: mix.SmsResp.data:type_name -> mix.Data
	5,  // 1: mix.EmsReq.cc:type_name -> mix.cc
	0,  // 2: mix.EmsResp.data:type_name -> mix.Data
	10, // 3: mix.GenerateUploadSignParamsResp.data:type_name -> mix.GenerateUploadSignParamsRespData
	0,  // 4: mix.CallbackResp.data:type_name -> mix.Data
	0,  // 5: mix.CheckUploadResultResp.data:type_name -> mix.Data
	16, // 6: mix.CaptchaResp.data:type_name -> mix.CaptchaRespData
	1,  // 7: mix.MixRpcService.SendSms:input_type -> mix.SmsParams
	2,  // 8: mix.MixRpcService.CheckSms:input_type -> mix.SmsSearchParams
	4,  // 9: mix.MixRpcService.CheckEmsRpc:input_type -> mix.EmsReq
	4,  // 10: mix.MixRpcService.SendEmsRpc:input_type -> mix.EmsReq
	7,  // 11: mix.MixRpcService.GenerateUploadSign:input_type -> mix.GenerateUploadSignParams
	8,  // 12: mix.MixRpcService.CheckUploadResult:input_type -> mix.CheckUploadResultParams
	9,  // 13: mix.MixRpcService.Callback:input_type -> mix.CallbackParams
	14, // 14: mix.MixRpcService.CaptchaGenerate:input_type -> mix.CaptchaReq
	3,  // 15: mix.MixRpcService.SendSms:output_type -> mix.SmsResp
	3,  // 16: mix.MixRpcService.CheckSms:output_type -> mix.SmsResp
	6,  // 17: mix.MixRpcService.CheckEmsRpc:output_type -> mix.EmsResp
	6,  // 18: mix.MixRpcService.SendEmsRpc:output_type -> mix.EmsResp
	11, // 19: mix.MixRpcService.GenerateUploadSign:output_type -> mix.GenerateUploadSignParamsResp
	13, // 20: mix.MixRpcService.CheckUploadResult:output_type -> mix.CheckUploadResultResp
	12, // 21: mix.MixRpcService.Callback:output_type -> mix.CallbackResp
	15, // 22: mix.MixRpcService.CaptchaGenerate:output_type -> mix.CaptchaResp
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_mix_proto_init() }
func file_mix_proto_init() {
	if File_mix_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mix_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUploadSignParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUploadResultParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUploadSignParamsRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateUploadSignParamsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUploadResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mix_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mix_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mix_proto_goTypes,
		DependencyIndexes: file_mix_proto_depIdxs,
		MessageInfos:      file_mix_proto_msgTypes,
	}.Build()
	File_mix_proto = out.File
	file_mix_proto_rawDesc = nil
	file_mix_proto_goTypes = nil
	file_mix_proto_depIdxs = nil
}
