// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: article.proto

package article

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// note: 通用部分
type ModelLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Sort      int64  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Level     int64  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *ModelLabel) Reset() {
	*x = ModelLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelLabel) ProtoMessage() {}

func (x *ModelLabel) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelLabel.ProtoReflect.Descriptor instead.
func (*ModelLabel) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{0}
}

func (x *ModelLabel) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelLabel) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelLabel) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelLabel) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelLabel) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ModelLabel) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ModelArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64         `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64         `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt int64         `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Title     string        `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle  string        `protobuf:"bytes,6,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Introduce string        `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Author    string        `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	Cover     string        `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	Content   string        `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	Type      int64         `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	Status    int64         `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Public    int64         `protobuf:"varint,13,opt,name=public,proto3" json:"public,omitempty"`
	Level     int64         `protobuf:"varint,14,opt,name=level,proto3" json:"level,omitempty"`
	TenantId  int64         `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	WriteID   int64         `protobuf:"varint,16,opt,name=writeID,proto3" json:"writeID,omitempty"`
	ReviewID  int64         `protobuf:"varint,17,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Sort      int64         `protobuf:"varint,18,opt,name=sort,proto3" json:"sort,omitempty"`
	ReleaseAt int64         `protobuf:"varint,19,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`
	Url       string        `protobuf:"bytes,20,opt,name=url,proto3" json:"url,omitempty"`
	AppType   int64         `protobuf:"varint,21,opt,name=appType,proto3" json:"appType,omitempty"`
	AppID     string        `protobuf:"bytes,22,opt,name=appID,proto3" json:"appID,omitempty"`
	AppPath   string        `protobuf:"bytes,23,opt,name=appPath,proto3" json:"appPath,omitempty"`
	GhId      string        `protobuf:"bytes,24,opt,name=ghId,proto3" json:"ghId,omitempty"`
	AppName   string        `protobuf:"bytes,25,opt,name=appName,proto3" json:"appName,omitempty"`
	Labels    []*ModelLabel `protobuf:"bytes,26,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ModelArticle) Reset() {
	*x = ModelArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelArticle) ProtoMessage() {}

func (x *ModelArticle) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelArticle.ProtoReflect.Descriptor instead.
func (*ModelArticle) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{1}
}

func (x *ModelArticle) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelArticle) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelArticle) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelArticle) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModelArticle) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ModelArticle) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *ModelArticle) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ModelArticle) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ModelArticle) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ModelArticle) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModelArticle) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelArticle) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *ModelArticle) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ModelArticle) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ModelArticle) GetWriteID() int64 {
	if x != nil {
		return x.WriteID
	}
	return 0
}

func (x *ModelArticle) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *ModelArticle) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ModelArticle) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *ModelArticle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModelArticle) GetAppType() int64 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *ModelArticle) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ModelArticle) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *ModelArticle) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *ModelArticle) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ModelArticle) GetLabels() []*ModelLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ModelId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ModelId) Reset() {
	*x = ModelId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelId) ProtoMessage() {}

func (x *ModelId) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelId.ProtoReflect.Descriptor instead.
func (*ModelId) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{2}
}

func (x *ModelId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIdsReq) Reset() {
	*x = DeleteIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdsReq) ProtoMessage() {}

func (x *DeleteIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdsReq.ProtoReflect.Descriptor instead.
func (*DeleteIdsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteIdsReq) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryReq) Reset() {
	*x = QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReq) ProtoMessage() {}

func (x *QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReq.ProtoReflect.Descriptor instead.
func (*QueryReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{5}
}

func (x *QueryReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Response) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *Response) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UpdateStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateStatusReq) Reset() {
	*x = UpdateStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusReq) ProtoMessage() {}

func (x *UpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateStatusReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelId `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{8}
}

func (x *CreateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateResponse) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateResponse) GetData() *ModelId {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle  string   `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Introduce string   `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Author    string   `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Cover     string   `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Content   string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Type      int64    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Status    int64    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Public    int64    `protobuf:"varint,9,opt,name=public,proto3" json:"public,omitempty"`
	Level     int64    `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"`
	WriteID   int64    `protobuf:"varint,11,opt,name=writeID,proto3" json:"writeID,omitempty"`
	ReviewID  int64    `protobuf:"varint,12,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Sort      int64    `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	ReleaseAt int64    `protobuf:"varint,14,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`
	Url       string   `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	AppType   int64    `protobuf:"varint,16,opt,name=appType,proto3" json:"appType,omitempty"`
	AppID     string   `protobuf:"bytes,17,opt,name=appID,proto3" json:"appID,omitempty"`
	AppPath   string   `protobuf:"bytes,18,opt,name=appPath,proto3" json:"appPath,omitempty"`
	GhId      string   `protobuf:"bytes,19,opt,name=ghId,proto3" json:"ghId,omitempty"`
	AppName   string   `protobuf:"bytes,20,opt,name=appName,proto3" json:"appName,omitempty"`
	LabelIds  []uint32 `protobuf:"varint,21,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *CreateArticleReq) Reset() {
	*x = CreateArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleReq) ProtoMessage() {}

func (x *CreateArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleReq.ProtoReflect.Descriptor instead.
func (*CreateArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{9}
}

func (x *CreateArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticleReq) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *CreateArticleReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *CreateArticleReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateArticleReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CreateArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateArticleReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateArticleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateArticleReq) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *CreateArticleReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CreateArticleReq) GetWriteID() int64 {
	if x != nil {
		return x.WriteID
	}
	return 0
}

func (x *CreateArticleReq) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *CreateArticleReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CreateArticleReq) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *CreateArticleReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateArticleReq) GetAppType() int64 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *CreateArticleReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateArticleReq) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *CreateArticleReq) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *CreateArticleReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *CreateArticleReq) GetLabelIds() []uint32 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type UpdateArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle  string `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Introduce string `protobuf:"bytes,4,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Author    string `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Cover     string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Content   string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Type      int64  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Public    int64  `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`
	Level     int64  `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
	WriteID   int64  `protobuf:"varint,12,opt,name=writeID,proto3" json:"writeID,omitempty"`
	ReviewID  int64  `protobuf:"varint,13,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Sort      int64  `protobuf:"varint,14,opt,name=sort,proto3" json:"sort,omitempty"`
	ReleaseAt int64  `protobuf:"varint,15,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`
	Url       string `protobuf:"bytes,16,opt,name=url,proto3" json:"url,omitempty"`
	AppType   int64  `protobuf:"varint,17,opt,name=appType,proto3" json:"appType,omitempty"`
	AppID     string `protobuf:"bytes,18,opt,name=appID,proto3" json:"appID,omitempty"`
	AppPath   string `protobuf:"bytes,19,opt,name=appPath,proto3" json:"appPath,omitempty"`
	GhId      string `protobuf:"bytes,20,opt,name=ghId,proto3" json:"ghId,omitempty"`
	AppName   string `protobuf:"bytes,21,opt,name=appName,proto3" json:"appName,omitempty"`
}

func (x *UpdateArticleReq) Reset() {
	*x = UpdateArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleReq) ProtoMessage() {}

func (x *UpdateArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleReq.ProtoReflect.Descriptor instead.
func (*UpdateArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateArticleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateArticleReq) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *UpdateArticleReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *UpdateArticleReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *UpdateArticleReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateArticleReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateArticleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateArticleReq) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *UpdateArticleReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UpdateArticleReq) GetWriteID() int64 {
	if x != nil {
		return x.WriteID
	}
	return 0
}

func (x *UpdateArticleReq) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *UpdateArticleReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateArticleReq) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *UpdateArticleReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateArticleReq) GetAppType() int64 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *UpdateArticleReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateArticleReq) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *UpdateArticleReq) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *UpdateArticleReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type CreateArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelArticle `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateArticleResp) Reset() {
	*x = CreateArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleResp) ProtoMessage() {}

func (x *CreateArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleResp.ProtoReflect.Descriptor instead.
func (*CreateArticleResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{11}
}

func (x *CreateArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateArticleResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateArticleResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateArticleResp) GetData() *ModelArticle {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64    `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64    `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string   `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Status    []int64  `protobuf:"varint,6,rep,packed,name=status,proto3" json:"status,omitempty"`
	Type      int64    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Public    int64    `protobuf:"varint,8,opt,name=public,proto3" json:"public,omitempty"`
	Labels    []string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`
	LabelIds  []uint32 `protobuf:"varint,10,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
	Level     int64    `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *QueryArticleListReq) Reset() {
	*x = QueryArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleListReq) ProtoMessage() {}

func (x *QueryArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleListReq.ProtoReflect.Descriptor instead.
func (*QueryArticleListReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{12}
}

func (x *QueryArticleListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryArticleListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryArticleListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryArticleListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryArticleListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryArticleListReq) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryArticleListReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *QueryArticleListReq) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *QueryArticleListReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *QueryArticleListReq) GetLabelIds() []uint32 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *QueryArticleListReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type QueryArticleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                    `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                    `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryArticleListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryArticleListResp) Reset() {
	*x = QueryArticleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleListResp) ProtoMessage() {}

func (x *QueryArticleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleListResp.ProtoReflect.Descriptor instead.
func (*QueryArticleListResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{13}
}

func (x *QueryArticleListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryArticleListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryArticleListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryArticleListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryArticleListResp) GetData() *QueryArticleListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryArticleListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelArticle `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32           `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryArticleListRespData) Reset() {
	*x = QueryArticleListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleListRespData) ProtoMessage() {}

func (x *QueryArticleListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleListRespData.ProtoReflect.Descriptor instead.
func (*QueryArticleListRespData) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{14}
}

func (x *QueryArticleListRespData) GetList() []*ModelArticle {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryArticleListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryArticleListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryArticleListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelArticle `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryArticleResp) Reset() {
	*x = QueryArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleResp) ProtoMessage() {}

func (x *QueryArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleResp.ProtoReflect.Descriptor instead.
func (*QueryArticleResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{15}
}

func (x *QueryArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryArticleResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryArticleResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryArticleResp) GetData() *ModelArticle {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateBindLabelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LabelIds []uint32 `protobuf:"varint,2,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *UpdateBindLabelsReq) Reset() {
	*x = UpdateBindLabelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBindLabelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBindLabelsReq) ProtoMessage() {}

func (x *UpdateBindLabelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBindLabelsReq.ProtoReflect.Descriptor instead.
func (*UpdateBindLabelsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateBindLabelsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBindLabelsReq) GetLabelIds() []uint32 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

// note: 附件模块
type ModelAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64            `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64            `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt int64            `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Aid       uint32           `protobuf:"varint,5,opt,name=aid,proto3" json:"aid,omitempty"`
	Title     string           `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Type      int64            `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Url       string           `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Pwd       string           `protobuf:"bytes,9,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Files     []*ModelAttaFile `protobuf:"bytes,10,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ModelAttachment) Reset() {
	*x = ModelAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAttachment) ProtoMessage() {}

func (x *ModelAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAttachment.ProtoReflect.Descriptor instead.
func (*ModelAttachment) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{17}
}

func (x *ModelAttachment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelAttachment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelAttachment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelAttachment) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelAttachment) GetAid() uint32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ModelAttachment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModelAttachment) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModelAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModelAttachment) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *ModelAttachment) GetFiles() []*ModelAttaFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type ModelAttaFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	AttaId     uint32 `protobuf:"varint,5,opt,name=attaId,proto3" json:"attaId,omitempty"`
	Type       string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Ext        string `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,omitempty"`
	OriginName string `protobuf:"bytes,8,opt,name=originName,proto3" json:"originName,omitempty"`
	HashPath   string `protobuf:"bytes,9,opt,name=hashPath,proto3" json:"hashPath,omitempty"`
}

func (x *ModelAttaFile) Reset() {
	*x = ModelAttaFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAttaFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAttaFile) ProtoMessage() {}

func (x *ModelAttaFile) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAttaFile.ProtoReflect.Descriptor instead.
func (*ModelAttaFile) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{18}
}

func (x *ModelAttaFile) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelAttaFile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelAttaFile) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelAttaFile) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelAttaFile) GetAttaId() uint32 {
	if x != nil {
		return x.AttaId
	}
	return 0
}

func (x *ModelAttaFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ModelAttaFile) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *ModelAttaFile) GetOriginName() string {
	if x != nil {
		return x.OriginName
	}
	return ""
}

func (x *ModelAttaFile) GetHashPath() string {
	if x != nil {
		return x.HashPath
	}
	return ""
}

type CreateAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   uint32 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type  int64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Url   string `protobuf:"bytes,4,opt,name=Url,proto3" json:"Url,omitempty"`
	Pwd   string `protobuf:"bytes,5,opt,name=Pwd,proto3" json:"Pwd,omitempty"`
}

func (x *CreateAttachmentReq) Reset() {
	*x = CreateAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttachmentReq) ProtoMessage() {}

func (x *CreateAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttachmentReq.ProtoReflect.Descriptor instead.
func (*CreateAttachmentReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{19}
}

func (x *CreateAttachmentReq) GetAid() uint32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CreateAttachmentReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAttachmentReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateAttachmentReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateAttachmentReq) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type UpdateAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Aid   uint32 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type  int64  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Url   string `protobuf:"bytes,5,opt,name=Url,proto3" json:"Url,omitempty"`
	Pwd   string `protobuf:"bytes,6,opt,name=Pwd,proto3" json:"Pwd,omitempty"`
}

func (x *UpdateAttachmentReq) Reset() {
	*x = UpdateAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttachmentReq) ProtoMessage() {}

func (x *UpdateAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttachmentReq.ProtoReflect.Descriptor instead.
func (*UpdateAttachmentReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAttachmentReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAttachmentReq) GetAid() uint32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UpdateAttachmentReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAttachmentReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateAttachmentReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateAttachmentReq) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type QueryAttachmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelAttachment `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttachmentResp) Reset() {
	*x = QueryAttachmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentResp) ProtoMessage() {}

func (x *QueryAttachmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentResp.ProtoReflect.Descriptor instead.
func (*QueryAttachmentResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{21}
}

func (x *QueryAttachmentResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttachmentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttachmentResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttachmentResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttachmentResp) GetData() *ModelAttachment {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttachmentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	AId       uint32 `protobuf:"varint,6,opt,name=aId,proto3" json:"aId,omitempty"`
}

func (x *QueryAttachmentListReq) Reset() {
	*x = QueryAttachmentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentListReq) ProtoMessage() {}

func (x *QueryAttachmentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentListReq.ProtoReflect.Descriptor instead.
func (*QueryAttachmentListReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{22}
}

func (x *QueryAttachmentListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttachmentListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAttachmentListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryAttachmentListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryAttachmentListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryAttachmentListReq) GetAId() uint32 {
	if x != nil {
		return x.AId
	}
	return 0
}

type QueryAttachmentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                       `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                       `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryAttachmentListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttachmentListResp) Reset() {
	*x = QueryAttachmentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentListResp) ProtoMessage() {}

func (x *QueryAttachmentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentListResp.ProtoReflect.Descriptor instead.
func (*QueryAttachmentListResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{23}
}

func (x *QueryAttachmentListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttachmentListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttachmentListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttachmentListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttachmentListResp) GetData() *QueryAttachmentListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttachmentListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelAttachment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32              `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32              `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryAttachmentListRespData) Reset() {
	*x = QueryAttachmentListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentListRespData) ProtoMessage() {}

func (x *QueryAttachmentListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentListRespData.ProtoReflect.Descriptor instead.
func (*QueryAttachmentListRespData) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{24}
}

func (x *QueryAttachmentListRespData) GetList() []*ModelAttachment {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryAttachmentListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryAttachmentListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttachmentListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// note: 附件的子文件
type CreateAttaFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttaId     uint32 `protobuf:"varint,1,opt,name=attaId,proto3" json:"attaId,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Ext        string `protobuf:"bytes,4,opt,name=Ext,proto3" json:"Ext,omitempty"`
	OriginName string `protobuf:"bytes,5,opt,name=OriginName,proto3" json:"OriginName,omitempty"`
	HashPath   string `protobuf:"bytes,6,opt,name=HashPath,proto3" json:"HashPath,omitempty"`
}

func (x *CreateAttaFileReq) Reset() {
	*x = CreateAttaFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttaFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttaFileReq) ProtoMessage() {}

func (x *CreateAttaFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttaFileReq.ProtoReflect.Descriptor instead.
func (*CreateAttaFileReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{25}
}

func (x *CreateAttaFileReq) GetAttaId() uint32 {
	if x != nil {
		return x.AttaId
	}
	return 0
}

func (x *CreateAttaFileReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAttaFileReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateAttaFileReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *CreateAttaFileReq) GetOriginName() string {
	if x != nil {
		return x.OriginName
	}
	return ""
}

func (x *CreateAttaFileReq) GetHashPath() string {
	if x != nil {
		return x.HashPath
	}
	return ""
}

type QueryAttaFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string         `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string         `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelAttaFile `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttaFileResp) Reset() {
	*x = QueryAttaFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileResp) ProtoMessage() {}

func (x *QueryAttaFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileResp.ProtoReflect.Descriptor instead.
func (*QueryAttaFileResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{26}
}

func (x *QueryAttaFileResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttaFileResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttaFileResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttaFileResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttaFileResp) GetData() *ModelAttaFile {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttaFileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	AttaId    uint32 `protobuf:"varint,6,opt,name=attaId,proto3" json:"attaId,omitempty"`
}

func (x *QueryAttaFileListReq) Reset() {
	*x = QueryAttaFileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileListReq) ProtoMessage() {}

func (x *QueryAttaFileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileListReq.ProtoReflect.Descriptor instead.
func (*QueryAttaFileListReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{27}
}

func (x *QueryAttaFileListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttaFileListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAttaFileListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryAttaFileListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryAttaFileListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryAttaFileListReq) GetAttaId() uint32 {
	if x != nil {
		return x.AttaId
	}
	return 0
}

type QueryAttaFileListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryAttaFileListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttaFileListResp) Reset() {
	*x = QueryAttaFileListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileListResp) ProtoMessage() {}

func (x *QueryAttaFileListResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileListResp.ProtoReflect.Descriptor instead.
func (*QueryAttaFileListResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{28}
}

func (x *QueryAttaFileListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttaFileListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttaFileListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttaFileListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttaFileListResp) GetData() *QueryAttaFileListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttaFileListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelAttaFile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32            `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32            `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryAttaFileListRespData) Reset() {
	*x = QueryAttaFileListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileListRespData) ProtoMessage() {}

func (x *QueryAttaFileListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileListRespData.ProtoReflect.Descriptor instead.
func (*QueryAttaFileListRespData) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{29}
}

func (x *QueryAttaFileListRespData) GetList() []*ModelAttaFile {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryAttaFileListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryAttaFileListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttaFileListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_article_proto protoreflect.FileDescriptor

var file_article_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa5, 0x05, 0x0a, 0x0c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x68, 0x49, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x1a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x22, 0x19, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x04, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x68, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x67, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x86, 0x04, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x68, 0x49, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5,
	0x02, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b,
	0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74,
	0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x50, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x77, 0x64,
	0x22, 0x85, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x77, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x61, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x78,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x22, 0x97, 0x01,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x32, 0xbd, 0x0a, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x42, 0x69, 0x6e,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x13, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x52, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_article_proto_rawDescOnce sync.Once
	file_article_proto_rawDescData = file_article_proto_rawDesc
)

func file_article_proto_rawDescGZIP() []byte {
	file_article_proto_rawDescOnce.Do(func() {
		file_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_article_proto_rawDescData)
	})
	return file_article_proto_rawDescData
}

var file_article_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_article_proto_goTypes = []interface{}{
	(*ModelLabel)(nil),                  // 0: article.ModelLabel
	(*ModelArticle)(nil),                // 1: article.ModelArticle
	(*ModelId)(nil),                     // 2: article.ModelId
	(*DeleteReq)(nil),                   // 3: article.DeleteReq
	(*DeleteIdsReq)(nil),                // 4: article.DeleteIdsReq
	(*QueryReq)(nil),                    // 5: article.QueryReq
	(*Response)(nil),                    // 6: article.Response
	(*UpdateStatusReq)(nil),             // 7: article.UpdateStatusReq
	(*CreateResponse)(nil),              // 8: article.CreateResponse
	(*CreateArticleReq)(nil),            // 9: article.CreateArticleReq
	(*UpdateArticleReq)(nil),            // 10: article.UpdateArticleReq
	(*CreateArticleResp)(nil),           // 11: article.CreateArticleResp
	(*QueryArticleListReq)(nil),         // 12: article.QueryArticleListReq
	(*QueryArticleListResp)(nil),        // 13: article.QueryArticleListResp
	(*QueryArticleListRespData)(nil),    // 14: article.QueryArticleListRespData
	(*QueryArticleResp)(nil),            // 15: article.QueryArticleResp
	(*UpdateBindLabelsReq)(nil),         // 16: article.UpdateBindLabelsReq
	(*ModelAttachment)(nil),             // 17: article.ModelAttachment
	(*ModelAttaFile)(nil),               // 18: article.ModelAttaFile
	(*CreateAttachmentReq)(nil),         // 19: article.CreateAttachmentReq
	(*UpdateAttachmentReq)(nil),         // 20: article.UpdateAttachmentReq
	(*QueryAttachmentResp)(nil),         // 21: article.QueryAttachmentResp
	(*QueryAttachmentListReq)(nil),      // 22: article.QueryAttachmentListReq
	(*QueryAttachmentListResp)(nil),     // 23: article.QueryAttachmentListResp
	(*QueryAttachmentListRespData)(nil), // 24: article.QueryAttachmentListRespData
	(*CreateAttaFileReq)(nil),           // 25: article.CreateAttaFileReq
	(*QueryAttaFileResp)(nil),           // 26: article.QueryAttaFileResp
	(*QueryAttaFileListReq)(nil),        // 27: article.QueryAttaFileListReq
	(*QueryAttaFileListResp)(nil),       // 28: article.QueryAttaFileListResp
	(*QueryAttaFileListRespData)(nil),   // 29: article.QueryAttaFileListRespData
}
var file_article_proto_depIdxs = []int32{
	0,  // 0: article.ModelArticle.labels:type_name -> article.ModelLabel
	2,  // 1: article.CreateResponse.data:type_name -> article.ModelId
	1,  // 2: article.CreateArticleResp.data:type_name -> article.ModelArticle
	14, // 3: article.QueryArticleListResp.data:type_name -> article.QueryArticleListRespData
	1,  // 4: article.QueryArticleListRespData.list:type_name -> article.ModelArticle
	1,  // 5: article.QueryArticleResp.data:type_name -> article.ModelArticle
	18, // 6: article.ModelAttachment.files:type_name -> article.ModelAttaFile
	17, // 7: article.QueryAttachmentResp.data:type_name -> article.ModelAttachment
	24, // 8: article.QueryAttachmentListResp.data:type_name -> article.QueryAttachmentListRespData
	17, // 9: article.QueryAttachmentListRespData.list:type_name -> article.ModelAttachment
	18, // 10: article.QueryAttaFileResp.data:type_name -> article.ModelAttaFile
	29, // 11: article.QueryAttaFileListResp.data:type_name -> article.QueryAttaFileListRespData
	18, // 12: article.QueryAttaFileListRespData.list:type_name -> article.ModelAttaFile
	9,  // 13: article.ArticleRpcService.Create:input_type -> article.CreateArticleReq
	10, // 14: article.ArticleRpcService.Update:input_type -> article.UpdateArticleReq
	3,  // 15: article.ArticleRpcService.Delete:input_type -> article.DeleteReq
	4,  // 16: article.ArticleRpcService.DeleteIds:input_type -> article.DeleteIdsReq
	5,  // 17: article.ArticleRpcService.Query:input_type -> article.QueryReq
	12, // 18: article.ArticleRpcService.QueryList:input_type -> article.QueryArticleListReq
	7,  // 19: article.ArticleRpcService.UpdateStatus:input_type -> article.UpdateStatusReq
	16, // 20: article.ArticleRpcService.BindArticleLabels:input_type -> article.UpdateBindLabelsReq
	16, // 21: article.ArticleRpcService.UnBindArticleLabels:input_type -> article.UpdateBindLabelsReq
	19, // 22: article.ArticleRpcService.AttachmentCreate:input_type -> article.CreateAttachmentReq
	20, // 23: article.ArticleRpcService.AttachmentUpdate:input_type -> article.UpdateAttachmentReq
	3,  // 24: article.ArticleRpcService.AttachmentDelete:input_type -> article.DeleteReq
	4,  // 25: article.ArticleRpcService.AttachmentDeleteIds:input_type -> article.DeleteIdsReq
	5,  // 26: article.ArticleRpcService.AttachmentQuery:input_type -> article.QueryReq
	22, // 27: article.ArticleRpcService.AttachmentQueryList:input_type -> article.QueryAttachmentListReq
	25, // 28: article.ArticleRpcService.AttaFileCreate:input_type -> article.CreateAttaFileReq
	3,  // 29: article.ArticleRpcService.AttaFileDelete:input_type -> article.DeleteReq
	4,  // 30: article.ArticleRpcService.AttaFileDeleteIds:input_type -> article.DeleteIdsReq
	5,  // 31: article.ArticleRpcService.AttaFileQuery:input_type -> article.QueryReq
	27, // 32: article.ArticleRpcService.AttaFileQueryList:input_type -> article.QueryAttaFileListReq
	11, // 33: article.ArticleRpcService.Create:output_type -> article.CreateArticleResp
	6,  // 34: article.ArticleRpcService.Update:output_type -> article.Response
	6,  // 35: article.ArticleRpcService.Delete:output_type -> article.Response
	6,  // 36: article.ArticleRpcService.DeleteIds:output_type -> article.Response
	15, // 37: article.ArticleRpcService.Query:output_type -> article.QueryArticleResp
	13, // 38: article.ArticleRpcService.QueryList:output_type -> article.QueryArticleListResp
	6,  // 39: article.ArticleRpcService.UpdateStatus:output_type -> article.Response
	6,  // 40: article.ArticleRpcService.BindArticleLabels:output_type -> article.Response
	6,  // 41: article.ArticleRpcService.UnBindArticleLabels:output_type -> article.Response
	8,  // 42: article.ArticleRpcService.AttachmentCreate:output_type -> article.CreateResponse
	6,  // 43: article.ArticleRpcService.AttachmentUpdate:output_type -> article.Response
	6,  // 44: article.ArticleRpcService.AttachmentDelete:output_type -> article.Response
	6,  // 45: article.ArticleRpcService.AttachmentDeleteIds:output_type -> article.Response
	21, // 46: article.ArticleRpcService.AttachmentQuery:output_type -> article.QueryAttachmentResp
	23, // 47: article.ArticleRpcService.AttachmentQueryList:output_type -> article.QueryAttachmentListResp
	8,  // 48: article.ArticleRpcService.AttaFileCreate:output_type -> article.CreateResponse
	6,  // 49: article.ArticleRpcService.AttaFileDelete:output_type -> article.Response
	6,  // 50: article.ArticleRpcService.AttaFileDeleteIds:output_type -> article.Response
	26, // 51: article.ArticleRpcService.AttaFileQuery:output_type -> article.QueryAttaFileResp
	28, // 52: article.ArticleRpcService.AttaFileQueryList:output_type -> article.QueryAttaFileListResp
	33, // [33:53] is the sub-list for method output_type
	13, // [13:33] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_article_proto_init() }
func file_article_proto_init() {
	if File_article_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBindLabelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAttaFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttaFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_proto_goTypes,
		DependencyIndexes: file_article_proto_depIdxs,
		MessageInfos:      file_article_proto_msgTypes,
	}.Build()
	File_article_proto = out.File
	file_article_proto_rawDesc = nil
	file_article_proto_goTypes = nil
	file_article_proto_depIdxs = nil
}
