// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: h5-rpc-service/h5-rpc-service.proto

package h5

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// note: 模型专区
// note: 标签专区
type ModelLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Sort      int64  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Level     int64  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *ModelLabel) Reset() {
	*x = ModelLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelLabel) ProtoMessage() {}

func (x *ModelLabel) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelLabel.ProtoReflect.Descriptor instead.
func (*ModelLabel) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *ModelLabel) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelLabel) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelLabel) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelLabel) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelLabel) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ModelLabel) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ModelArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt      int64                `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      int64                `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt      int64                `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Title          string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle       string               `protobuf:"bytes,6,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Introduce      string               `protobuf:"bytes,7,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Author         string               `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	Cover          string               `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	Content        string               `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	Type           int64                `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	Status         int64                `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Public         int64                `protobuf:"varint,13,opt,name=public,proto3" json:"public,omitempty"`
	Level          int64                `protobuf:"varint,14,opt,name=level,proto3" json:"level,omitempty"`
	TenantId       int64                `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	WriteID        int64                `protobuf:"varint,16,opt,name=writeID,proto3" json:"writeID,omitempty"`
	ReviewID       int64                `protobuf:"varint,17,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Sort           int64                `protobuf:"varint,18,opt,name=sort,proto3" json:"sort,omitempty"`
	ReleaseAt      int64                `protobuf:"varint,19,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`
	Url            string               `protobuf:"bytes,20,opt,name=url,proto3" json:"url,omitempty"`
	AppType        int64                `protobuf:"varint,21,opt,name=appType,proto3" json:"appType,omitempty"`
	AppID          string               `protobuf:"bytes,22,opt,name=appID,proto3" json:"appID,omitempty"`
	AppPath        string               `protobuf:"bytes,23,opt,name=appPath,proto3" json:"appPath,omitempty"`
	GhId           string               `protobuf:"bytes,24,opt,name=ghId,proto3" json:"ghId,omitempty"`
	AppName        string               `protobuf:"bytes,25,opt,name=appName,proto3" json:"appName,omitempty"`
	Labels         []*ModelLabel        `protobuf:"bytes,26,rep,name=labels,proto3" json:"labels,omitempty"`
	RecommendSites []*ModelRelatedSites `protobuf:"bytes,27,rep,name=recommendSites,proto3" json:"recommendSites,omitempty"`
	VerticalCover  string               `protobuf:"bytes,28,opt,name=verticalCover,proto3" json:"verticalCover,omitempty"`
	SquareCover    string               `protobuf:"bytes,29,opt,name=squareCover,proto3" json:"squareCover,omitempty"`
}

func (x *ModelArticle) Reset() {
	*x = ModelArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelArticle) ProtoMessage() {}

func (x *ModelArticle) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelArticle.ProtoReflect.Descriptor instead.
func (*ModelArticle) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *ModelArticle) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelArticle) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelArticle) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelArticle) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModelArticle) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ModelArticle) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *ModelArticle) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ModelArticle) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ModelArticle) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ModelArticle) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModelArticle) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelArticle) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *ModelArticle) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ModelArticle) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ModelArticle) GetWriteID() int64 {
	if x != nil {
		return x.WriteID
	}
	return 0
}

func (x *ModelArticle) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *ModelArticle) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ModelArticle) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *ModelArticle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModelArticle) GetAppType() int64 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *ModelArticle) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ModelArticle) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *ModelArticle) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *ModelArticle) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ModelArticle) GetLabels() []*ModelLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ModelArticle) GetRecommendSites() []*ModelRelatedSites {
	if x != nil {
		return x.RecommendSites
	}
	return nil
}

func (x *ModelArticle) GetVerticalCover() string {
	if x != nil {
		return x.VerticalCover
	}
	return ""
}

func (x *ModelArticle) GetSquareCover() string {
	if x != nil {
		return x.SquareCover
	}
	return ""
}

type ModelUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Company    string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Identity   int64  `protobuf:"varint,8,opt,name=identity,proto3" json:"identity,omitempty"`
	Status     int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	LastLogin  int64  `protobuf:"varint,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	ThisLogin  int64  `protobuf:"varint,11,opt,name=thisLogin,proto3" json:"thisLogin,omitempty"`
	RegChannel string `protobuf:"bytes,12,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname   string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64  `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,17,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	Privilege  string `protobuf:"bytes,19,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Headimgurl string `protobuf:"bytes,21,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	TenantId   uint32 `protobuf:"varint,22,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Id         uint32 `protobuf:"varint,23,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  int64  `protobuf:"varint,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  int64  `protobuf:"varint,26,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
}

func (x *ModelUser) Reset() {
	*x = ModelUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelUser) ProtoMessage() {}

func (x *ModelUser) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelUser.ProtoReflect.Descriptor instead.
func (*ModelUser) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *ModelUser) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *ModelUser) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ModelUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ModelUser) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ModelUser) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *ModelUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelUser) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ModelUser) GetIdentity() int64 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *ModelUser) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ModelUser) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *ModelUser) GetThisLogin() int64 {
	if x != nil {
		return x.ThisLogin
	}
	return 0
}

func (x *ModelUser) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *ModelUser) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ModelUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ModelUser) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *ModelUser) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ModelUser) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ModelUser) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ModelUser) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *ModelUser) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *ModelUser) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *ModelUser) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelUser) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelUser) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type ModelRelatedSites struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Icon      string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Cover     string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	Url       string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ModelRelatedSites) Reset() {
	*x = ModelRelatedSites{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelRelatedSites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelRelatedSites) ProtoMessage() {}

func (x *ModelRelatedSites) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelRelatedSites.ProtoReflect.Descriptor instead.
func (*ModelRelatedSites) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *ModelRelatedSites) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelRelatedSites) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelRelatedSites) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelRelatedSites) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelRelatedSites) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModelRelatedSites) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ModelRelatedSites) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ModelRelatedSites) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ModelAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int64            `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64            `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt int64            `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	Aid       uint32           `protobuf:"varint,5,opt,name=aid,proto3" json:"aid,omitempty"`
	ATitle    string           `protobuf:"bytes,6,opt,name=aTitle,proto3" json:"aTitle,omitempty"`
	Title     string           `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Type      int64            `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Url       string           `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Pwd       string           `protobuf:"bytes,10,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Files     []*ModelAttaFile `protobuf:"bytes,11,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *ModelAttachment) Reset() {
	*x = ModelAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAttachment) ProtoMessage() {}

func (x *ModelAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAttachment.ProtoReflect.Descriptor instead.
func (*ModelAttachment) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *ModelAttachment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelAttachment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelAttachment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelAttachment) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelAttachment) GetAid() uint32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ModelAttachment) GetATitle() string {
	if x != nil {
		return x.ATitle
	}
	return ""
}

func (x *ModelAttachment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ModelAttachment) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModelAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModelAttachment) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *ModelAttachment) GetFiles() []*ModelAttaFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type ModelAttaFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt  int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	AttaId     uint32 `protobuf:"varint,5,opt,name=attaId,proto3" json:"attaId,omitempty"`
	Type       string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Ext        string `protobuf:"bytes,7,opt,name=ext,proto3" json:"ext,omitempty"`
	OriginName string `protobuf:"bytes,8,opt,name=originName,proto3" json:"originName,omitempty"`
	HashPath   string `protobuf:"bytes,9,opt,name=hashPath,proto3" json:"hashPath,omitempty"`
}

func (x *ModelAttaFile) Reset() {
	*x = ModelAttaFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelAttaFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelAttaFile) ProtoMessage() {}

func (x *ModelAttaFile) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelAttaFile.ProtoReflect.Descriptor instead.
func (*ModelAttaFile) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *ModelAttaFile) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelAttaFile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelAttaFile) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelAttaFile) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelAttaFile) GetAttaId() uint32 {
	if x != nil {
		return x.AttaId
	}
	return 0
}

func (x *ModelAttaFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ModelAttaFile) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *ModelAttaFile) GetOriginName() string {
	if x != nil {
		return x.OriginName
	}
	return ""
}

func (x *ModelAttaFile) GetHashPath() string {
	if x != nil {
		return x.HashPath
	}
	return ""
}

// note: 通用模块
type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteIdsReq) Reset() {
	*x = DeleteIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdsReq) ProtoMessage() {}

func (x *DeleteIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdsReq.ProtoReflect.Descriptor instead.
func (*DeleteIdsReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteIdsReq) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryReq) Reset() {
	*x = QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReq) ProtoMessage() {}

func (x *QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReq.ProtoReflect.Descriptor instead.
func (*QueryReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{8}
}

func (x *QueryReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []uint32 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryIdsReq) Reset() {
	*x = QueryIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIdsReq) ProtoMessage() {}

func (x *QueryIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIdsReq.ProtoReflect.Descriptor instead.
func (*QueryIdsReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *QueryIdsReq) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{10}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Response) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *Response) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UpdateStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateStatusReq) Reset() {
	*x = UpdateStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusReq) ProtoMessage() {}

func (x *UpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateStatusReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string   `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelId `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateResponse) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateResponse) GetData() *ModelId {
	if x != nil {
		return x.Data
	}
	return nil
}

type ModelId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ModelId) Reset() {
	*x = ModelId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelId) ProtoMessage() {}

func (x *ModelId) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelId.ProtoReflect.Descriptor instead.
func (*ModelId) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{13}
}

func (x *ModelId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// note: label 标签
type CreateLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Sort   int64  `protobuf:"varint,3,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Level  int64  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *CreateLabelReq) Reset() {
	*x = CreateLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelReq) ProtoMessage() {}

func (x *CreateLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelReq.ProtoReflect.Descriptor instead.
func (*CreateLabelReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateLabelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLabelReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateLabelReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CreateLabelReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type UpdateLabelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sort  int64  `protobuf:"varint,3,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Level int64  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *UpdateLabelReq) Reset() {
	*x = UpdateLabelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLabelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelReq) ProtoMessage() {}

func (x *UpdateLabelReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelReq.ProtoReflect.Descriptor instead.
func (*UpdateLabelReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateLabelReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateLabelReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLabelReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateLabelReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type CreateLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelLabel `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateLabelResp) Reset() {
	*x = CreateLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLabelResp) ProtoMessage() {}

func (x *CreateLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLabelResp.ProtoReflect.Descriptor instead.
func (*CreateLabelResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateLabelResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateLabelResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateLabelResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateLabelResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateLabelResp) GetData() *ModelLabel {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryLabelListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Status    int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Level     int64  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *QueryLabelListReq) Reset() {
	*x = QueryLabelListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLabelListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLabelListReq) ProtoMessage() {}

func (x *QueryLabelListReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLabelListReq.ProtoReflect.Descriptor instead.
func (*QueryLabelListReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{17}
}

func (x *QueryLabelListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryLabelListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryLabelListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryLabelListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryLabelListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryLabelListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryLabelListReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type QueryLabelListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                  `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                  `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryLabelListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryLabelListResp) Reset() {
	*x = QueryLabelListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLabelListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLabelListResp) ProtoMessage() {}

func (x *QueryLabelListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLabelListResp.ProtoReflect.Descriptor instead.
func (*QueryLabelListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{18}
}

func (x *QueryLabelListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryLabelListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryLabelListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryLabelListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryLabelListResp) GetData() *QueryLabelListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryLabelListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelLabel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32         `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryLabelListRespData) Reset() {
	*x = QueryLabelListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLabelListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLabelListRespData) ProtoMessage() {}

func (x *QueryLabelListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLabelListRespData.ProtoReflect.Descriptor instead.
func (*QueryLabelListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{19}
}

func (x *QueryLabelListRespData) GetList() []*ModelLabel {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryLabelListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryLabelListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryLabelListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryLabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelLabel `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryLabelResp) Reset() {
	*x = QueryLabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLabelResp) ProtoMessage() {}

func (x *QueryLabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLabelResp.ProtoReflect.Descriptor instead.
func (*QueryLabelResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{20}
}

func (x *QueryLabelResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryLabelResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryLabelResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryLabelResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryLabelResp) GetData() *ModelLabel {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Company    string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Identity   int64  `protobuf:"varint,8,opt,name=identity,proto3" json:"identity,omitempty"`
	Status     int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	LastLogin  int64  `protobuf:"varint,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	ThisLogin  int64  `protobuf:"varint,11,opt,name=thisLogin,proto3" json:"thisLogin,omitempty"`
	RegChannel string `protobuf:"bytes,12,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname   string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64  `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,17,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	Privilege  string `protobuf:"bytes,19,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Headimgurl string `protobuf:"bytes,21,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	TenantId   uint32 `protobuf:"varint,22,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateUserReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *CreateUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *CreateUserReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *CreateUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreateUserReq) GetIdentity() int64 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *CreateUserReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUserReq) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *CreateUserReq) GetThisLogin() int64 {
	if x != nil {
		return x.ThisLogin
	}
	return 0
}

func (x *CreateUserReq) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *CreateUserReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CreateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateUserReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *CreateUserReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CreateUserReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateUserReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateUserReq) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *CreateUserReq) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *CreateUserReq) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   string `protobuf:"bytes,1,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Name       string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Company    string `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Identity   int64  `protobuf:"varint,8,opt,name=identity,proto3" json:"identity,omitempty"`
	Status     int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	LastLogin  int64  `protobuf:"varint,10,opt,name=lastLogin,proto3" json:"lastLogin,omitempty"`
	ThisLogin  int64  `protobuf:"varint,11,opt,name=thisLogin,proto3" json:"thisLogin,omitempty"`
	RegChannel string `protobuf:"bytes,12,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string `protobuf:"bytes,13,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname   string `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        int64  `protobuf:"varint,15,opt,name=sex,proto3" json:"sex,omitempty"`
	Province   string `protobuf:"bytes,16,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,17,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	Privilege  string `protobuf:"bytes,19,opt,name=privilege,proto3" json:"privilege,omitempty"`
	Headimgurl string `protobuf:"bytes,21,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	TenantId   uint32 `protobuf:"varint,22,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Id         uint32 `protobuf:"varint,23,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateUserReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *UpdateUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UpdateUserReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *UpdateUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdateUserReq) GetIdentity() int64 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *UpdateUserReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateUserReq) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *UpdateUserReq) GetThisLogin() int64 {
	if x != nil {
		return x.ThisLogin
	}
	return 0
}

func (x *UpdateUserReq) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *UpdateUserReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *UpdateUserReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateUserReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UpdateUserReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UpdateUserReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateUserReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateUserReq) GetPrivilege() string {
	if x != nil {
		return x.Privilege
	}
	return ""
}

func (x *UpdateUserReq) GetHeadimgurl() string {
	if x != nil {
		return x.Headimgurl
	}
	return ""
}

func (x *UpdateUserReq) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *UpdateUserReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32   `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime  int64   `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime    int64   `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword    string  `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	UniqueId   string  `protobuf:"bytes,6,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile     string  `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string  `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	OpenId     string  `protobuf:"bytes,9,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId    string  `protobuf:"bytes,10,opt,name=unionId,proto3" json:"unionId,omitempty"`
	Identity   []int64 `protobuf:"varint,11,rep,packed,name=identity,proto3" json:"identity,omitempty"`
	Status     []int64 `protobuf:"varint,12,rep,packed,name=status,proto3" json:"status,omitempty"`
	RegChannel string  `protobuf:"bytes,13,opt,name=regChannel,proto3" json:"regChannel,omitempty"`
	Channel    string  `protobuf:"bytes,14,opt,name=channel,proto3" json:"channel,omitempty"`
	Company    string  `protobuf:"bytes,15,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *QueryUserListReq) Reset() {
	*x = QueryUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListReq) ProtoMessage() {}

func (x *QueryUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListReq.ProtoReflect.Descriptor instead.
func (*QueryUserListReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{23}
}

func (x *QueryUserListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryUserListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryUserListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryUserListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryUserListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryUserListReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *QueryUserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryUserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryUserListReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *QueryUserListReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *QueryUserListReq) GetIdentity() []int64 {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *QueryUserListReq) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryUserListReq) GetRegChannel() string {
	if x != nil {
		return x.RegChannel
	}
	return ""
}

func (x *QueryUserListReq) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *QueryUserListReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type QueryUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                 `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryUserListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryUserListResp) Reset() {
	*x = QueryUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListResp) ProtoMessage() {}

func (x *QueryUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListResp.ProtoReflect.Descriptor instead.
func (*QueryUserListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{24}
}

func (x *QueryUserListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryUserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryUserListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryUserListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryUserListResp) GetData() *QueryUserListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryUserListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32        `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32        `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryUserListRespData) Reset() {
	*x = QueryUserListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserListRespData) ProtoMessage() {}

func (x *QueryUserListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserListRespData.ProtoReflect.Descriptor instead.
func (*QueryUserListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{25}
}

func (x *QueryUserListRespData) GetList() []*ModelUser {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryUserListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryUserListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryUserListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UniqueId string `protobuf:"bytes,2,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Mobile   string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	OpenId   string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
	UnionId  string `protobuf:"bytes,5,opt,name=unionId,proto3" json:"unionId,omitempty"`
}

func (x *QueryUserReq) Reset() {
	*x = QueryUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserReq) ProtoMessage() {}

func (x *QueryUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserReq.ProtoReflect.Descriptor instead.
func (*QueryUserReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{26}
}

func (x *QueryUserReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryUserReq) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *QueryUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryUserReq) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *QueryUserReq) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

type QueryUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelUser `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryUserResp) Reset() {
	*x = QueryUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserResp) ProtoMessage() {}

func (x *QueryUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserResp.ProtoReflect.Descriptor instead.
func (*QueryUserResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{27}
}

func (x *QueryUserResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryUserResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryUserResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryUserResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryUserResp) GetData() *ModelUser {
	if x != nil {
		return x.Data
	}
	return nil
}

// note: 软文模块
type CreateArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle      string   `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Introduce     string   `protobuf:"bytes,3,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Author        string   `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	Cover         string   `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Content       string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Type          int64    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Status        int64    `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	Public        int64    `protobuf:"varint,9,opt,name=public,proto3" json:"public,omitempty"`
	Level         int64    `protobuf:"varint,10,opt,name=level,proto3" json:"level,omitempty"`
	WriteID       int64    `protobuf:"varint,11,opt,name=writeID,proto3" json:"writeID,omitempty"`
	ReviewID      int64    `protobuf:"varint,12,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Sort          int64    `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	ReleaseAt     int64    `protobuf:"varint,14,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`
	Url           string   `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	AppType       int64    `protobuf:"varint,16,opt,name=appType,proto3" json:"appType,omitempty"`
	AppID         string   `protobuf:"bytes,17,opt,name=appID,proto3" json:"appID,omitempty"`
	AppPath       string   `protobuf:"bytes,18,opt,name=appPath,proto3" json:"appPath,omitempty"`
	GhId          string   `protobuf:"bytes,19,opt,name=ghId,proto3" json:"ghId,omitempty"`
	AppName       string   `protobuf:"bytes,20,opt,name=appName,proto3" json:"appName,omitempty"`
	LabelIds      []uint32 `protobuf:"varint,21,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
	RecommendSite string   `protobuf:"bytes,22,opt,name=recommendSite,proto3" json:"recommendSite,omitempty"`
	VerticalCover string   `protobuf:"bytes,23,opt,name=verticalCover,proto3" json:"verticalCover,omitempty"`
	SquareCover   string   `protobuf:"bytes,24,opt,name=squareCover,proto3" json:"squareCover,omitempty"`
}

func (x *CreateArticleReq) Reset() {
	*x = CreateArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleReq) ProtoMessage() {}

func (x *CreateArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleReq.ProtoReflect.Descriptor instead.
func (*CreateArticleReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{28}
}

func (x *CreateArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticleReq) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *CreateArticleReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *CreateArticleReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateArticleReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CreateArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateArticleReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateArticleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateArticleReq) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *CreateArticleReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CreateArticleReq) GetWriteID() int64 {
	if x != nil {
		return x.WriteID
	}
	return 0
}

func (x *CreateArticleReq) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *CreateArticleReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *CreateArticleReq) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *CreateArticleReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateArticleReq) GetAppType() int64 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *CreateArticleReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CreateArticleReq) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *CreateArticleReq) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *CreateArticleReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *CreateArticleReq) GetLabelIds() []uint32 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *CreateArticleReq) GetRecommendSite() string {
	if x != nil {
		return x.RecommendSite
	}
	return ""
}

func (x *CreateArticleReq) GetVerticalCover() string {
	if x != nil {
		return x.VerticalCover
	}
	return ""
}

func (x *CreateArticleReq) GetSquareCover() string {
	if x != nil {
		return x.SquareCover
	}
	return ""
}

type UpdateArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle      string `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Introduce     string `protobuf:"bytes,4,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Author        string `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Cover         string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	Content       string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Type          int64  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Status        int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Public        int64  `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`
	Level         int64  `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
	WriteID       int64  `protobuf:"varint,12,opt,name=writeID,proto3" json:"writeID,omitempty"`
	ReviewID      int64  `protobuf:"varint,13,opt,name=reviewID,proto3" json:"reviewID,omitempty"`
	Sort          int64  `protobuf:"varint,14,opt,name=sort,proto3" json:"sort,omitempty"`
	ReleaseAt     int64  `protobuf:"varint,15,opt,name=releaseAt,proto3" json:"releaseAt,omitempty"`
	Url           string `protobuf:"bytes,16,opt,name=url,proto3" json:"url,omitempty"`
	AppType       int64  `protobuf:"varint,17,opt,name=appType,proto3" json:"appType,omitempty"`
	AppID         string `protobuf:"bytes,18,opt,name=appID,proto3" json:"appID,omitempty"`
	AppPath       string `protobuf:"bytes,19,opt,name=appPath,proto3" json:"appPath,omitempty"`
	GhId          string `protobuf:"bytes,20,opt,name=ghId,proto3" json:"ghId,omitempty"`
	AppName       string `protobuf:"bytes,21,opt,name=appName,proto3" json:"appName,omitempty"`
	RecommendSite string `protobuf:"bytes,22,opt,name=recommendSite,proto3" json:"recommendSite,omitempty"`
	VerticalCover string `protobuf:"bytes,23,opt,name=verticalCover,proto3" json:"verticalCover,omitempty"`
	SquareCover   string `protobuf:"bytes,24,opt,name=squareCover,proto3" json:"squareCover,omitempty"`
}

func (x *UpdateArticleReq) Reset() {
	*x = UpdateArticleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleReq) ProtoMessage() {}

func (x *UpdateArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleReq.ProtoReflect.Descriptor instead.
func (*UpdateArticleReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateArticleReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateArticleReq) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *UpdateArticleReq) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *UpdateArticleReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *UpdateArticleReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateArticleReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateArticleReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateArticleReq) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *UpdateArticleReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UpdateArticleReq) GetWriteID() int64 {
	if x != nil {
		return x.WriteID
	}
	return 0
}

func (x *UpdateArticleReq) GetReviewID() int64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *UpdateArticleReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateArticleReq) GetReleaseAt() int64 {
	if x != nil {
		return x.ReleaseAt
	}
	return 0
}

func (x *UpdateArticleReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateArticleReq) GetAppType() int64 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *UpdateArticleReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateArticleReq) GetAppPath() string {
	if x != nil {
		return x.AppPath
	}
	return ""
}

func (x *UpdateArticleReq) GetGhId() string {
	if x != nil {
		return x.GhId
	}
	return ""
}

func (x *UpdateArticleReq) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *UpdateArticleReq) GetRecommendSite() string {
	if x != nil {
		return x.RecommendSite
	}
	return ""
}

func (x *UpdateArticleReq) GetVerticalCover() string {
	if x != nil {
		return x.VerticalCover
	}
	return ""
}

func (x *UpdateArticleReq) GetSquareCover() string {
	if x != nil {
		return x.SquareCover
	}
	return ""
}

type CreateArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelArticle `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateArticleResp) Reset() {
	*x = CreateArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleResp) ProtoMessage() {}

func (x *CreateArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleResp.ProtoReflect.Descriptor instead.
func (*CreateArticleResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{30}
}

func (x *CreateArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateArticleResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CreateArticleResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateArticleResp) GetData() *ModelArticle {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryArticleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64    `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64    `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string   `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Status    []int64  `protobuf:"varint,6,rep,packed,name=status,proto3" json:"status,omitempty"`
	Type      []int64  `protobuf:"varint,7,rep,packed,name=type,proto3" json:"type,omitempty"`
	Public    int64    `protobuf:"varint,8,opt,name=public,proto3" json:"public,omitempty"`
	Labels    []string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`
	LabelIds  []uint32 `protobuf:"varint,10,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
	Level     int64    `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
	OrderBy   string   `protobuf:"bytes,12,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
}

func (x *QueryArticleListReq) Reset() {
	*x = QueryArticleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleListReq) ProtoMessage() {}

func (x *QueryArticleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleListReq.ProtoReflect.Descriptor instead.
func (*QueryArticleListReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{31}
}

func (x *QueryArticleListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryArticleListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryArticleListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryArticleListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryArticleListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryArticleListReq) GetStatus() []int64 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryArticleListReq) GetType() []int64 {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *QueryArticleListReq) GetPublic() int64 {
	if x != nil {
		return x.Public
	}
	return 0
}

func (x *QueryArticleListReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *QueryArticleListReq) GetLabelIds() []uint32 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *QueryArticleListReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *QueryArticleListReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type QueryArticleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                    `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                    `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryArticleListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryArticleListResp) Reset() {
	*x = QueryArticleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleListResp) ProtoMessage() {}

func (x *QueryArticleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleListResp.ProtoReflect.Descriptor instead.
func (*QueryArticleListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{32}
}

func (x *QueryArticleListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryArticleListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryArticleListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryArticleListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryArticleListResp) GetData() *QueryArticleListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryArticleListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelArticle `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32           `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryArticleListRespData) Reset() {
	*x = QueryArticleListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleListRespData) ProtoMessage() {}

func (x *QueryArticleListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleListRespData.ProtoReflect.Descriptor instead.
func (*QueryArticleListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{33}
}

func (x *QueryArticleListRespData) GetList() []*ModelArticle {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryArticleListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryArticleListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryArticleListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryRecommendListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                      `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryRecommendListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryRecommendListResp) Reset() {
	*x = QueryRecommendListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecommendListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecommendListResp) ProtoMessage() {}

func (x *QueryRecommendListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecommendListResp.ProtoReflect.Descriptor instead.
func (*QueryRecommendListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{34}
}

func (x *QueryRecommendListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryRecommendListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRecommendListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryRecommendListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryRecommendListResp) GetData() *QueryRecommendListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRecommendListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelArticle `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32           `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryRecommendListRespData) Reset() {
	*x = QueryRecommendListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecommendListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecommendListRespData) ProtoMessage() {}

func (x *QueryRecommendListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecommendListRespData.ProtoReflect.Descriptor instead.
func (*QueryRecommendListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{35}
}

func (x *QueryRecommendListRespData) GetList() []*ModelArticle {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryRecommendListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryRecommendListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryRecommendListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string        `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string        `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelArticle `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryArticleResp) Reset() {
	*x = QueryArticleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticleResp) ProtoMessage() {}

func (x *QueryArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticleResp.ProtoReflect.Descriptor instead.
func (*QueryArticleResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{36}
}

func (x *QueryArticleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryArticleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryArticleResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryArticleResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryArticleResp) GetData() *ModelArticle {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateBindLabelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LabelIds []uint32 `protobuf:"varint,2,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *UpdateBindLabelsReq) Reset() {
	*x = UpdateBindLabelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBindLabelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBindLabelsReq) ProtoMessage() {}

func (x *UpdateBindLabelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBindLabelsReq.ProtoReflect.Descriptor instead.
func (*UpdateBindLabelsReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateBindLabelsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBindLabelsReq) GetLabelIds() []uint32 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

// 相关站点
type CreateRelatedSitesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Icon  string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Url   string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CreateRelatedSitesReq) Reset() {
	*x = CreateRelatedSitesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelatedSitesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelatedSitesReq) ProtoMessage() {}

func (x *CreateRelatedSitesReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelatedSitesReq.ProtoReflect.Descriptor instead.
func (*CreateRelatedSitesReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{38}
}

func (x *CreateRelatedSitesReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateRelatedSitesReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateRelatedSitesReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CreateRelatedSitesReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type UpdateRelatedSitesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon  string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Url   string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UpdateRelatedSitesReq) Reset() {
	*x = UpdateRelatedSitesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRelatedSitesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRelatedSitesReq) ProtoMessage() {}

func (x *UpdateRelatedSitesReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRelatedSitesReq.ProtoReflect.Descriptor instead.
func (*UpdateRelatedSitesReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateRelatedSitesReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRelatedSitesReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateRelatedSitesReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateRelatedSitesReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateRelatedSitesReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type QueryRelatedSitesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string             `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string             `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelRelatedSites `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryRelatedSitesResp) Reset() {
	*x = QueryRelatedSitesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelatedSitesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelatedSitesResp) ProtoMessage() {}

func (x *QueryRelatedSitesResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelatedSitesResp.ProtoReflect.Descriptor instead.
func (*QueryRelatedSitesResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{40}
}

func (x *QueryRelatedSitesResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryRelatedSitesResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRelatedSitesResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryRelatedSitesResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryRelatedSitesResp) GetData() *ModelRelatedSites {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRelatedSitesListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *QueryRelatedSitesListReq) Reset() {
	*x = QueryRelatedSitesListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelatedSitesListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelatedSitesListReq) ProtoMessage() {}

func (x *QueryRelatedSitesListReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelatedSitesListReq.ProtoReflect.Descriptor instead.
func (*QueryRelatedSitesListReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{41}
}

func (x *QueryRelatedSitesListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryRelatedSitesListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryRelatedSitesListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryRelatedSitesListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryRelatedSitesListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type QueryRelatedSitesListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                         `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                         `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryRelatedSitesListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryRelatedSitesListResp) Reset() {
	*x = QueryRelatedSitesListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelatedSitesListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelatedSitesListResp) ProtoMessage() {}

func (x *QueryRelatedSitesListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelatedSitesListResp.ProtoReflect.Descriptor instead.
func (*QueryRelatedSitesListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{42}
}

func (x *QueryRelatedSitesListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryRelatedSitesListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRelatedSitesListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryRelatedSitesListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryRelatedSitesListResp) GetData() *QueryRelatedSitesListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRelatedSitesListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelRelatedSites `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32                `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32                `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryRelatedSitesListRespData) Reset() {
	*x = QueryRelatedSitesListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelatedSitesListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelatedSitesListRespData) ProtoMessage() {}

func (x *QueryRelatedSitesListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelatedSitesListRespData.ProtoReflect.Descriptor instead.
func (*QueryRelatedSitesListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{43}
}

func (x *QueryRelatedSitesListRespData) GetList() []*ModelRelatedSites {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryRelatedSitesListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryRelatedSitesListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryRelatedSitesListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CreateAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   uint32 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type  int64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Url   string `protobuf:"bytes,4,opt,name=Url,proto3" json:"Url,omitempty"`
	Pwd   string `protobuf:"bytes,5,opt,name=Pwd,proto3" json:"Pwd,omitempty"`
}

func (x *CreateAttachmentReq) Reset() {
	*x = CreateAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttachmentReq) ProtoMessage() {}

func (x *CreateAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttachmentReq.ProtoReflect.Descriptor instead.
func (*CreateAttachmentReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{44}
}

func (x *CreateAttachmentReq) GetAid() uint32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CreateAttachmentReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAttachmentReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateAttachmentReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateAttachmentReq) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type UpdateAttachmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Aid   uint32 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type  int64  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Url   string `protobuf:"bytes,5,opt,name=Url,proto3" json:"Url,omitempty"`
	Pwd   string `protobuf:"bytes,6,opt,name=Pwd,proto3" json:"Pwd,omitempty"`
}

func (x *UpdateAttachmentReq) Reset() {
	*x = UpdateAttachmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttachmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttachmentReq) ProtoMessage() {}

func (x *UpdateAttachmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttachmentReq.ProtoReflect.Descriptor instead.
func (*UpdateAttachmentReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateAttachmentReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAttachmentReq) GetAid() uint32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UpdateAttachmentReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAttachmentReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateAttachmentReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateAttachmentReq) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type QueryAttachmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string           `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelAttachment `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttachmentResp) Reset() {
	*x = QueryAttachmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentResp) ProtoMessage() {}

func (x *QueryAttachmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentResp.ProtoReflect.Descriptor instead.
func (*QueryAttachmentResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{46}
}

func (x *QueryAttachmentResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttachmentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttachmentResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttachmentResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttachmentResp) GetData() *ModelAttachment {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttachmentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	AId       uint32 `protobuf:"varint,6,opt,name=aId,proto3" json:"aId,omitempty"`
}

func (x *QueryAttachmentListReq) Reset() {
	*x = QueryAttachmentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentListReq) ProtoMessage() {}

func (x *QueryAttachmentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentListReq.ProtoReflect.Descriptor instead.
func (*QueryAttachmentListReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{47}
}

func (x *QueryAttachmentListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttachmentListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAttachmentListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryAttachmentListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryAttachmentListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryAttachmentListReq) GetAId() uint32 {
	if x != nil {
		return x.AId
	}
	return 0
}

type QueryAttachmentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                       `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                       `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryAttachmentListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttachmentListResp) Reset() {
	*x = QueryAttachmentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentListResp) ProtoMessage() {}

func (x *QueryAttachmentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentListResp.ProtoReflect.Descriptor instead.
func (*QueryAttachmentListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{48}
}

func (x *QueryAttachmentListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttachmentListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttachmentListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttachmentListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttachmentListResp) GetData() *QueryAttachmentListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttachmentListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelAttachment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32              `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32              `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryAttachmentListRespData) Reset() {
	*x = QueryAttachmentListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttachmentListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttachmentListRespData) ProtoMessage() {}

func (x *QueryAttachmentListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttachmentListRespData.ProtoReflect.Descriptor instead.
func (*QueryAttachmentListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{49}
}

func (x *QueryAttachmentListRespData) GetList() []*ModelAttachment {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryAttachmentListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryAttachmentListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttachmentListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// note: 附件的子文件
type CreateAttaFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttaId     uint32 `protobuf:"varint,1,opt,name=attaId,proto3" json:"attaId,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Ext        string `protobuf:"bytes,4,opt,name=Ext,proto3" json:"Ext,omitempty"`
	OriginName string `protobuf:"bytes,5,opt,name=OriginName,proto3" json:"OriginName,omitempty"`
	HashPath   string `protobuf:"bytes,6,opt,name=HashPath,proto3" json:"HashPath,omitempty"`
}

func (x *CreateAttaFileReq) Reset() {
	*x = CreateAttaFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAttaFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAttaFileReq) ProtoMessage() {}

func (x *CreateAttaFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAttaFileReq.ProtoReflect.Descriptor instead.
func (*CreateAttaFileReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{50}
}

func (x *CreateAttaFileReq) GetAttaId() uint32 {
	if x != nil {
		return x.AttaId
	}
	return 0
}

func (x *CreateAttaFileReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateAttaFileReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateAttaFileReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *CreateAttaFileReq) GetOriginName() string {
	if x != nil {
		return x.OriginName
	}
	return ""
}

func (x *CreateAttaFileReq) GetHashPath() string {
	if x != nil {
		return x.HashPath
	}
	return ""
}

type QueryAttaFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string         `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string         `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *ModelAttaFile `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttaFileResp) Reset() {
	*x = QueryAttaFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileResp) ProtoMessage() {}

func (x *QueryAttaFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileResp.ProtoReflect.Descriptor instead.
func (*QueryAttaFileResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{51}
}

func (x *QueryAttaFileResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttaFileResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttaFileResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttaFileResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttaFileResp) GetData() *ModelAttaFile {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttaFileListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Keyword   string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	AttaId    uint32 `protobuf:"varint,6,opt,name=attaId,proto3" json:"attaId,omitempty"`
}

func (x *QueryAttaFileListReq) Reset() {
	*x = QueryAttaFileListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileListReq) ProtoMessage() {}

func (x *QueryAttaFileListReq) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileListReq.ProtoReflect.Descriptor instead.
func (*QueryAttaFileListReq) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{52}
}

func (x *QueryAttaFileListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttaFileListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAttaFileListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryAttaFileListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryAttaFileListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryAttaFileListReq) GetAttaId() uint32 {
	if x != nil {
		return x.AttaId
	}
	return 0
}

type QueryAttaFileListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	RequestID string                     `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Path      string                     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      *QueryAttaFileListRespData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryAttaFileListResp) Reset() {
	*x = QueryAttaFileListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileListResp) ProtoMessage() {}

func (x *QueryAttaFileListResp) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileListResp.ProtoReflect.Descriptor instead.
func (*QueryAttaFileListResp) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{53}
}

func (x *QueryAttaFileListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryAttaFileListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryAttaFileListResp) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *QueryAttaFileListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryAttaFileListResp) GetData() *QueryAttaFileListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryAttaFileListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*ModelAttaFile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total    int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page     int32            `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32            `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryAttaFileListRespData) Reset() {
	*x = QueryAttaFileListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAttaFileListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAttaFileListRespData) ProtoMessage() {}

func (x *QueryAttaFileListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_h5_rpc_service_h5_rpc_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAttaFileListRespData.ProtoReflect.Descriptor instead.
func (*QueryAttaFileListRespData) Descriptor() ([]byte, []int) {
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP(), []int{54}
}

func (x *QueryAttaFileListRespData) GetList() []*ModelAttaFile {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryAttaFileListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryAttaFileListRespData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryAttaFileListRespData) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_h5_rpc_service_h5_rpc_service_proto protoreflect.FileDescriptor

var file_h5_rpc_service_h5_rpc_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x68, 0x35, 0x2d, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x68, 0x35, 0x2d, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x68, 0x35, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa7, 0x06, 0x0a, 0x0c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x68, 0x49, 0x64, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3d, 0x0a,
	0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x18,
	0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x22, 0x9b, 0x05, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x9c, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x35, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74,
	0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1b, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x39, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x35,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x19,
	0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x5e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x35,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb5, 0x04, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x73,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x69,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76,
	0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d,
	0x67, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xc5, 0x04, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6d, 0x67, 0x75, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x03, 0x0a, 0x10, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x35, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x05, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x68, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x74, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x53, 0x69, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xf4, 0x04, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x68, 0x49, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x53, 0x69, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf, 0x02, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a,
	0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a,
	0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x69, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x79, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x9c, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0xaa, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a,
	0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68,
	0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x75, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x50, 0x77, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x50, 0x77, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x77, 0x64, 0x22, 0x96,
	0x01, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x27,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68,
	0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x61, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x8c, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa3,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x68,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x61, 0x73, 0x68,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68,
	0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x88, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x68, 0x35, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x98, 0x14, 0x0a,
	0x0c, 0x48, 0x35, 0x52, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x68,
	0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x68, 0x35, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x11, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x68, 0x35, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x12, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x12, 0x4d, 0x69,
	0x6e, 0x69, 0x53, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x68, 0x35, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x12, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x69, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x10, 0x2e,
	0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x11, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x69, 0x53,
	0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x18, 0x4d, 0x69, 0x6e, 0x69, 0x53, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x68, 0x35, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0d, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x68, 0x35,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x10, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x18, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x73, 0x12, 0x0f, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x17, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x68, 0x35, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x19, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x13, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x13, 0x2e, 0x68, 0x35, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x18, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x17, 0x2e, 0x68, 0x35, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x1a, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x17, 0x2e, 0x68, 0x35, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x12,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x68, 0x35, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69,
	0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x68,
	0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x11,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x14, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x73, 0x12, 0x0f, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x68, 0x35,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x68, 0x35, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x74, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x68,
	0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e,
	0x68, 0x35, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x68,
	0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c,
	0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e,
	0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x68, 0x35, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x68, 0x35, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x10, 0x2e, 0x68, 0x35, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x61, 0x46,
	0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0c, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x11, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x2e, 0x68, 0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74,
	0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x68,
	0x35, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x74, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x68, 0x35, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_h5_rpc_service_h5_rpc_service_proto_rawDescOnce sync.Once
	file_h5_rpc_service_h5_rpc_service_proto_rawDescData = file_h5_rpc_service_h5_rpc_service_proto_rawDesc
)

func file_h5_rpc_service_h5_rpc_service_proto_rawDescGZIP() []byte {
	file_h5_rpc_service_h5_rpc_service_proto_rawDescOnce.Do(func() {
		file_h5_rpc_service_h5_rpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_h5_rpc_service_h5_rpc_service_proto_rawDescData)
	})
	return file_h5_rpc_service_h5_rpc_service_proto_rawDescData
}

var file_h5_rpc_service_h5_rpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_h5_rpc_service_h5_rpc_service_proto_goTypes = []interface{}{
	(*ModelLabel)(nil),                    // 0: h5.ModelLabel
	(*ModelArticle)(nil),                  // 1: h5.ModelArticle
	(*ModelUser)(nil),                     // 2: h5.ModelUser
	(*ModelRelatedSites)(nil),             // 3: h5.ModelRelatedSites
	(*ModelAttachment)(nil),               // 4: h5.ModelAttachment
	(*ModelAttaFile)(nil),                 // 5: h5.ModelAttaFile
	(*DeleteReq)(nil),                     // 6: h5.DeleteReq
	(*DeleteIdsReq)(nil),                  // 7: h5.DeleteIdsReq
	(*QueryReq)(nil),                      // 8: h5.QueryReq
	(*QueryIdsReq)(nil),                   // 9: h5.QueryIdsReq
	(*Response)(nil),                      // 10: h5.Response
	(*UpdateStatusReq)(nil),               // 11: h5.UpdateStatusReq
	(*CreateResponse)(nil),                // 12: h5.CreateResponse
	(*ModelId)(nil),                       // 13: h5.ModelId
	(*CreateLabelReq)(nil),                // 14: h5.CreateLabelReq
	(*UpdateLabelReq)(nil),                // 15: h5.UpdateLabelReq
	(*CreateLabelResp)(nil),               // 16: h5.CreateLabelResp
	(*QueryLabelListReq)(nil),             // 17: h5.QueryLabelListReq
	(*QueryLabelListResp)(nil),            // 18: h5.QueryLabelListResp
	(*QueryLabelListRespData)(nil),        // 19: h5.QueryLabelListRespData
	(*QueryLabelResp)(nil),                // 20: h5.QueryLabelResp
	(*CreateUserReq)(nil),                 // 21: h5.CreateUserReq
	(*UpdateUserReq)(nil),                 // 22: h5.UpdateUserReq
	(*QueryUserListReq)(nil),              // 23: h5.QueryUserListReq
	(*QueryUserListResp)(nil),             // 24: h5.QueryUserListResp
	(*QueryUserListRespData)(nil),         // 25: h5.QueryUserListRespData
	(*QueryUserReq)(nil),                  // 26: h5.QueryUserReq
	(*QueryUserResp)(nil),                 // 27: h5.QueryUserResp
	(*CreateArticleReq)(nil),              // 28: h5.CreateArticleReq
	(*UpdateArticleReq)(nil),              // 29: h5.UpdateArticleReq
	(*CreateArticleResp)(nil),             // 30: h5.CreateArticleResp
	(*QueryArticleListReq)(nil),           // 31: h5.QueryArticleListReq
	(*QueryArticleListResp)(nil),          // 32: h5.QueryArticleListResp
	(*QueryArticleListRespData)(nil),      // 33: h5.QueryArticleListRespData
	(*QueryRecommendListResp)(nil),        // 34: h5.QueryRecommendListResp
	(*QueryRecommendListRespData)(nil),    // 35: h5.QueryRecommendListRespData
	(*QueryArticleResp)(nil),              // 36: h5.QueryArticleResp
	(*UpdateBindLabelsReq)(nil),           // 37: h5.UpdateBindLabelsReq
	(*CreateRelatedSitesReq)(nil),         // 38: h5.CreateRelatedSitesReq
	(*UpdateRelatedSitesReq)(nil),         // 39: h5.UpdateRelatedSitesReq
	(*QueryRelatedSitesResp)(nil),         // 40: h5.QueryRelatedSitesResp
	(*QueryRelatedSitesListReq)(nil),      // 41: h5.QueryRelatedSitesListReq
	(*QueryRelatedSitesListResp)(nil),     // 42: h5.QueryRelatedSitesListResp
	(*QueryRelatedSitesListRespData)(nil), // 43: h5.QueryRelatedSitesListRespData
	(*CreateAttachmentReq)(nil),           // 44: h5.CreateAttachmentReq
	(*UpdateAttachmentReq)(nil),           // 45: h5.UpdateAttachmentReq
	(*QueryAttachmentResp)(nil),           // 46: h5.QueryAttachmentResp
	(*QueryAttachmentListReq)(nil),        // 47: h5.QueryAttachmentListReq
	(*QueryAttachmentListResp)(nil),       // 48: h5.QueryAttachmentListResp
	(*QueryAttachmentListRespData)(nil),   // 49: h5.QueryAttachmentListRespData
	(*CreateAttaFileReq)(nil),             // 50: h5.CreateAttaFileReq
	(*QueryAttaFileResp)(nil),             // 51: h5.QueryAttaFileResp
	(*QueryAttaFileListReq)(nil),          // 52: h5.QueryAttaFileListReq
	(*QueryAttaFileListResp)(nil),         // 53: h5.QueryAttaFileListResp
	(*QueryAttaFileListRespData)(nil),     // 54: h5.QueryAttaFileListRespData
}
var file_h5_rpc_service_h5_rpc_service_proto_depIdxs = []int32{
	0,  // 0: h5.ModelArticle.labels:type_name -> h5.ModelLabel
	3,  // 1: h5.ModelArticle.recommendSites:type_name -> h5.ModelRelatedSites
	5,  // 2: h5.ModelAttachment.files:type_name -> h5.ModelAttaFile
	13, // 3: h5.CreateResponse.data:type_name -> h5.ModelId
	0,  // 4: h5.CreateLabelResp.data:type_name -> h5.ModelLabel
	19, // 5: h5.QueryLabelListResp.data:type_name -> h5.QueryLabelListRespData
	0,  // 6: h5.QueryLabelListRespData.list:type_name -> h5.ModelLabel
	0,  // 7: h5.QueryLabelResp.data:type_name -> h5.ModelLabel
	25, // 8: h5.QueryUserListResp.data:type_name -> h5.QueryUserListRespData
	2,  // 9: h5.QueryUserListRespData.list:type_name -> h5.ModelUser
	2,  // 10: h5.QueryUserResp.data:type_name -> h5.ModelUser
	1,  // 11: h5.CreateArticleResp.data:type_name -> h5.ModelArticle
	33, // 12: h5.QueryArticleListResp.data:type_name -> h5.QueryArticleListRespData
	1,  // 13: h5.QueryArticleListRespData.list:type_name -> h5.ModelArticle
	35, // 14: h5.QueryRecommendListResp.data:type_name -> h5.QueryRecommendListRespData
	1,  // 15: h5.QueryRecommendListRespData.list:type_name -> h5.ModelArticle
	1,  // 16: h5.QueryArticleResp.data:type_name -> h5.ModelArticle
	3,  // 17: h5.QueryRelatedSitesResp.data:type_name -> h5.ModelRelatedSites
	43, // 18: h5.QueryRelatedSitesListResp.data:type_name -> h5.QueryRelatedSitesListRespData
	3,  // 19: h5.QueryRelatedSitesListRespData.list:type_name -> h5.ModelRelatedSites
	4,  // 20: h5.QueryAttachmentResp.data:type_name -> h5.ModelAttachment
	49, // 21: h5.QueryAttachmentListResp.data:type_name -> h5.QueryAttachmentListRespData
	4,  // 22: h5.QueryAttachmentListRespData.list:type_name -> h5.ModelAttachment
	5,  // 23: h5.QueryAttaFileResp.data:type_name -> h5.ModelAttaFile
	54, // 24: h5.QueryAttaFileListResp.data:type_name -> h5.QueryAttaFileListRespData
	5,  // 25: h5.QueryAttaFileListRespData.list:type_name -> h5.ModelAttaFile
	14, // 26: h5.H5RpcService.LabelCreate:input_type -> h5.CreateLabelReq
	15, // 27: h5.H5RpcService.LabelUpdate:input_type -> h5.UpdateLabelReq
	6,  // 28: h5.H5RpcService.LabelDelete:input_type -> h5.DeleteReq
	7,  // 29: h5.H5RpcService.LabelDeleteIds:input_type -> h5.DeleteIdsReq
	8,  // 30: h5.H5RpcService.LabelQuery:input_type -> h5.QueryReq
	17, // 31: h5.H5RpcService.LabelQueryList:input_type -> h5.QueryLabelListReq
	11, // 32: h5.H5RpcService.LabelUpdateStatus:input_type -> h5.UpdateStatusReq
	21, // 33: h5.H5RpcService.MiniSiteUserCreate:input_type -> h5.CreateUserReq
	22, // 34: h5.H5RpcService.MiniSiteUserUpdate:input_type -> h5.UpdateUserReq
	6,  // 35: h5.H5RpcService.MiniSiteUserDelete:input_type -> h5.DeleteReq
	7,  // 36: h5.H5RpcService.MiniSiteUserDeleteIds:input_type -> h5.DeleteIdsReq
	26, // 37: h5.H5RpcService.MiniSiteUserQuery:input_type -> h5.QueryUserReq
	23, // 38: h5.H5RpcService.MiniSiteUserQueryList:input_type -> h5.QueryUserListReq
	11, // 39: h5.H5RpcService.MiniSiteUserUpdateStatus:input_type -> h5.UpdateStatusReq
	28, // 40: h5.H5RpcService.ArticleCreate:input_type -> h5.CreateArticleReq
	29, // 41: h5.H5RpcService.ArticleUpdate:input_type -> h5.UpdateArticleReq
	6,  // 42: h5.H5RpcService.ArticleDelete:input_type -> h5.DeleteReq
	7,  // 43: h5.H5RpcService.ArticleDeleteIds:input_type -> h5.DeleteIdsReq
	8,  // 44: h5.H5RpcService.ArticleQuery:input_type -> h5.QueryReq
	9,  // 45: h5.H5RpcService.ArticleQueryListQueryIds:input_type -> h5.QueryIdsReq
	31, // 46: h5.H5RpcService.ArticleQueryList:input_type -> h5.QueryArticleListReq
	8,  // 47: h5.H5RpcService.ArticleQueryRecommendList:input_type -> h5.QueryReq
	11, // 48: h5.H5RpcService.ArticleUpdateStatus:input_type -> h5.UpdateStatusReq
	37, // 49: h5.H5RpcService.ArticleBindArticleLabels:input_type -> h5.UpdateBindLabelsReq
	37, // 50: h5.H5RpcService.ArticleUnBindArticleLabels:input_type -> h5.UpdateBindLabelsReq
	38, // 51: h5.H5RpcService.RelatedSitesCreate:input_type -> h5.CreateRelatedSitesReq
	39, // 52: h5.H5RpcService.RelatedSitesUpdate:input_type -> h5.UpdateRelatedSitesReq
	6,  // 53: h5.H5RpcService.RelatedSitesDelete:input_type -> h5.DeleteReq
	7,  // 54: h5.H5RpcService.RelatedSitesDeleteIds:input_type -> h5.DeleteIdsReq
	8,  // 55: h5.H5RpcService.RelatedSitesQuery:input_type -> h5.QueryReq
	9,  // 56: h5.H5RpcService.RelatedSitesQueryIds:input_type -> h5.QueryIdsReq
	41, // 57: h5.H5RpcService.RelatedSitesQueryList:input_type -> h5.QueryRelatedSitesListReq
	44, // 58: h5.H5RpcService.AttachmentCreate:input_type -> h5.CreateAttachmentReq
	45, // 59: h5.H5RpcService.AttachmentUpdate:input_type -> h5.UpdateAttachmentReq
	6,  // 60: h5.H5RpcService.AttachmentDelete:input_type -> h5.DeleteReq
	7,  // 61: h5.H5RpcService.AttachmentDeleteIds:input_type -> h5.DeleteIdsReq
	8,  // 62: h5.H5RpcService.AttachmentQuery:input_type -> h5.QueryReq
	47, // 63: h5.H5RpcService.AttachmentQueryList:input_type -> h5.QueryAttachmentListReq
	50, // 64: h5.H5RpcService.AttaFileCreate:input_type -> h5.CreateAttaFileReq
	6,  // 65: h5.H5RpcService.AttaFileDelete:input_type -> h5.DeleteReq
	7,  // 66: h5.H5RpcService.AttaFileDeleteIds:input_type -> h5.DeleteIdsReq
	8,  // 67: h5.H5RpcService.AttaFileQuery:input_type -> h5.QueryReq
	52, // 68: h5.H5RpcService.AttaFileQueryList:input_type -> h5.QueryAttaFileListReq
	16, // 69: h5.H5RpcService.LabelCreate:output_type -> h5.CreateLabelResp
	10, // 70: h5.H5RpcService.LabelUpdate:output_type -> h5.Response
	10, // 71: h5.H5RpcService.LabelDelete:output_type -> h5.Response
	10, // 72: h5.H5RpcService.LabelDeleteIds:output_type -> h5.Response
	20, // 73: h5.H5RpcService.LabelQuery:output_type -> h5.QueryLabelResp
	18, // 74: h5.H5RpcService.LabelQueryList:output_type -> h5.QueryLabelListResp
	10, // 75: h5.H5RpcService.LabelUpdateStatus:output_type -> h5.Response
	12, // 76: h5.H5RpcService.MiniSiteUserCreate:output_type -> h5.CreateResponse
	10, // 77: h5.H5RpcService.MiniSiteUserUpdate:output_type -> h5.Response
	10, // 78: h5.H5RpcService.MiniSiteUserDelete:output_type -> h5.Response
	10, // 79: h5.H5RpcService.MiniSiteUserDeleteIds:output_type -> h5.Response
	27, // 80: h5.H5RpcService.MiniSiteUserQuery:output_type -> h5.QueryUserResp
	24, // 81: h5.H5RpcService.MiniSiteUserQueryList:output_type -> h5.QueryUserListResp
	10, // 82: h5.H5RpcService.MiniSiteUserUpdateStatus:output_type -> h5.Response
	30, // 83: h5.H5RpcService.ArticleCreate:output_type -> h5.CreateArticleResp
	10, // 84: h5.H5RpcService.ArticleUpdate:output_type -> h5.Response
	10, // 85: h5.H5RpcService.ArticleDelete:output_type -> h5.Response
	10, // 86: h5.H5RpcService.ArticleDeleteIds:output_type -> h5.Response
	36, // 87: h5.H5RpcService.ArticleQuery:output_type -> h5.QueryArticleResp
	32, // 88: h5.H5RpcService.ArticleQueryListQueryIds:output_type -> h5.QueryArticleListResp
	32, // 89: h5.H5RpcService.ArticleQueryList:output_type -> h5.QueryArticleListResp
	34, // 90: h5.H5RpcService.ArticleQueryRecommendList:output_type -> h5.QueryRecommendListResp
	10, // 91: h5.H5RpcService.ArticleUpdateStatus:output_type -> h5.Response
	10, // 92: h5.H5RpcService.ArticleBindArticleLabels:output_type -> h5.Response
	10, // 93: h5.H5RpcService.ArticleUnBindArticleLabels:output_type -> h5.Response
	12, // 94: h5.H5RpcService.RelatedSitesCreate:output_type -> h5.CreateResponse
	10, // 95: h5.H5RpcService.RelatedSitesUpdate:output_type -> h5.Response
	10, // 96: h5.H5RpcService.RelatedSitesDelete:output_type -> h5.Response
	10, // 97: h5.H5RpcService.RelatedSitesDeleteIds:output_type -> h5.Response
	40, // 98: h5.H5RpcService.RelatedSitesQuery:output_type -> h5.QueryRelatedSitesResp
	42, // 99: h5.H5RpcService.RelatedSitesQueryIds:output_type -> h5.QueryRelatedSitesListResp
	42, // 100: h5.H5RpcService.RelatedSitesQueryList:output_type -> h5.QueryRelatedSitesListResp
	12, // 101: h5.H5RpcService.AttachmentCreate:output_type -> h5.CreateResponse
	10, // 102: h5.H5RpcService.AttachmentUpdate:output_type -> h5.Response
	10, // 103: h5.H5RpcService.AttachmentDelete:output_type -> h5.Response
	10, // 104: h5.H5RpcService.AttachmentDeleteIds:output_type -> h5.Response
	46, // 105: h5.H5RpcService.AttachmentQuery:output_type -> h5.QueryAttachmentResp
	48, // 106: h5.H5RpcService.AttachmentQueryList:output_type -> h5.QueryAttachmentListResp
	12, // 107: h5.H5RpcService.AttaFileCreate:output_type -> h5.CreateResponse
	10, // 108: h5.H5RpcService.AttaFileDelete:output_type -> h5.Response
	10, // 109: h5.H5RpcService.AttaFileDeleteIds:output_type -> h5.Response
	51, // 110: h5.H5RpcService.AttaFileQuery:output_type -> h5.QueryAttaFileResp
	53, // 111: h5.H5RpcService.AttaFileQueryList:output_type -> h5.QueryAttaFileListResp
	69, // [69:112] is the sub-list for method output_type
	26, // [26:69] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_h5_rpc_service_h5_rpc_service_proto_init() }
func file_h5_rpc_service_h5_rpc_service_proto_init() {
	if File_h5_rpc_service_h5_rpc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelRelatedSites); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelAttaFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLabelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLabelListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLabelListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLabelListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecommendListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecommendListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBindLabelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelatedSitesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRelatedSitesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelatedSitesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelatedSitesListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelatedSitesListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelatedSitesListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttachmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttachmentListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAttaFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_h5_rpc_service_h5_rpc_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAttaFileListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_h5_rpc_service_h5_rpc_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_h5_rpc_service_h5_rpc_service_proto_goTypes,
		DependencyIndexes: file_h5_rpc_service_h5_rpc_service_proto_depIdxs,
		MessageInfos:      file_h5_rpc_service_h5_rpc_service_proto_msgTypes,
	}.Build()
	File_h5_rpc_service_h5_rpc_service_proto = out.File
	file_h5_rpc_service_h5_rpc_service_proto_rawDesc = nil
	file_h5_rpc_service_h5_rpc_service_proto_goTypes = nil
	file_h5_rpc_service_h5_rpc_service_proto_depIdxs = nil
}
